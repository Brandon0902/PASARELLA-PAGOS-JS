declare const CancelCheckout: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "checkout response";
            readonly properties: {
                readonly allowed_payment_methods: {
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly examples: readonly ["cash", "card", "bank_transfer"];
                };
                readonly can_not_expire: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly emails_sent: {
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly exclude_card_networks: {
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly type: "array";
                };
                readonly expires_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1680397724];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly failure_url: {
                    readonly type: "string";
                    readonly examples: readonly ["https://pay.conekta.com/failure"];
                };
                readonly force_3ds_flow: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["b0bf16c4-18b9-445e-ba24-01604f329dbf"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly type: "object";
                };
                readonly monthly_installments_enabled: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly monthly_installments_options: {
                    readonly items: {
                        readonly format: "int8";
                        readonly type: "integer";
                        readonly minimum: -128;
                        readonly maximum: 127;
                    };
                    readonly type: "array";
                    readonly examples: readonly [3, 6, 12];
                };
                readonly name: {
                    readonly description: "Reason for charge";
                    readonly type: "string";
                    readonly examples: readonly ["Payment Link Name 1594138857"];
                };
                readonly needs_shipping_contact: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["checkout"];
                };
                readonly paid_payments_count: {
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly payments_limit_count: {
                    readonly format: "int8";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [5];
                    readonly minimum: -128;
                    readonly maximum: 127;
                };
                readonly recurrent: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly slug: {
                    readonly type: "string";
                    readonly examples: readonly ["b0bf16c418b9445eba2401604f329dbf"];
                };
                readonly sms_sent: {
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly starts_at: {
                    readonly type: "integer";
                    readonly examples: readonly [1677650400];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["Issued"];
                };
                readonly success_url: {
                    readonly type: "string";
                    readonly examples: readonly ["https://pay.conekta.com/success"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["PaymentLink"];
                };
                readonly url: {
                    readonly format: "uri";
                    readonly type: "string";
                    readonly examples: readonly ["https://pay.conekta.com/link/b0bf16c418b9445eba2401604f329dbf"];
                };
            };
            readonly required: readonly ["id", "livemode", "name", "object"];
            readonly title: "checkout_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "402": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CancelOrder: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "order response";
            readonly properties: {
                readonly amount: {
                    readonly description: "The total amount to be collected in cents";
                    readonly type: "integer";
                    readonly examples: readonly [21605];
                };
                readonly amount_refunded: {
                    readonly description: "The total amount refunded in cents";
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly channel: {
                    readonly properties: {
                        readonly segment: {
                            readonly type: "string";
                            readonly examples: readonly ["Checkout"];
                        };
                        readonly checkout_request_id: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                        };
                        readonly checkout_request_type: {
                            readonly type: "string";
                            readonly examples: readonly ["HostedPayment"];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                        };
                    };
                    readonly type: "object";
                };
                readonly charges: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "charges_data_response";
                                readonly type: "object";
                                readonly properties: {
                                    readonly amount: {
                                        readonly type: "integer";
                                        readonly examples: readonly [4321];
                                    };
                                    readonly channel: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly segment: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Checkout"];
                                            };
                                            readonly checkout_request_id: {
                                                readonly type: "string";
                                                readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                                            };
                                            readonly checkout_request_type: {
                                                readonly type: "string";
                                                readonly examples: readonly ["HostedPayment"];
                                            };
                                            readonly id: {
                                                readonly type: "string";
                                                readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                                            };
                                        };
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1676386026];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly currency: {
                                        readonly type: "string";
                                        readonly examples: readonly ["MXN"];
                                    };
                                    readonly customer_id: {
                                        readonly type: "string";
                                    };
                                    readonly description: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Payment from order"];
                                    };
                                    readonly device_fingerprint: {
                                        readonly type: "string";
                                        readonly examples: readonly ["6FR3chaU4Y1nGAW5NAGd1rcjAKa142Ba"];
                                    };
                                    readonly failure_code: {
                                        readonly type: "string";
                                        readonly examples: readonly ["suspected_fraud"];
                                    };
                                    readonly failure_message: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Este cargo ha sido declinado porque el comportamiento del comprador es sospechoso."];
                                    };
                                    readonly id: {
                                        readonly description: "Charge ID";
                                        readonly type: "string";
                                        readonly examples: readonly ["63efa757cf65380001aec040"];
                                    };
                                    readonly livemode: {
                                        readonly description: "Whether the charge was made in live mode or not";
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["charge"];
                                    };
                                    readonly order_id: {
                                        readonly description: "Order ID";
                                        readonly type: "string";
                                        readonly examples: readonly ["ord_2tN73UdUSNrYRPD9r"];
                                    };
                                    readonly paid_at: {
                                        readonly description: "Payment date";
                                        readonly format: "int64";
                                        readonly type: readonly ["integer", "null"];
                                        readonly examples: readonly [1676390742];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly payment_method: {
                                        readonly discriminator: {
                                            readonly mapping: {
                                                readonly cash_payment: "payment_method_cash";
                                                readonly card_payment: "payment_method_card";
                                                readonly bank_transfer_payment: "payment_method_bank_transfer";
                                            };
                                            readonly propertyName: "object";
                                        };
                                        readonly oneOf: readonly [{
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for cash responses";
                                            readonly title: "charge_data_payment_method_cash_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly auth_code: {
                                                    readonly type: readonly ["integer", "null"];
                                                    readonly examples: readonly [542563];
                                                };
                                                readonly cashier_id: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly examples: readonly ["OINM01010"];
                                                };
                                                readonly reference: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["93000262276908"];
                                                };
                                                readonly barcode_url: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                                                };
                                                readonly expires_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [0];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly service_name: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["OxxoPay"];
                                                };
                                                readonly store: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly examples: readonly ["10MON50EDI"];
                                                };
                                                readonly store_name: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["OXXO"];
                                                };
                                            };
                                        }, {
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for card responses";
                                            readonly title: "charge_data_payment_method_card_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly account_type: {
                                                    readonly description: "Account type of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Credit"];
                                                };
                                                readonly auth_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["867372"];
                                                };
                                                readonly brand: {
                                                    readonly description: "Brand of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["visa"];
                                                };
                                                readonly contract_id: {
                                                    readonly description: "Id sent for recurrent charges.";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["S781317595"];
                                                };
                                                readonly country: {
                                                    readonly description: "Country of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["MX"];
                                                };
                                                readonly exp_month: {
                                                    readonly description: "Expiration month of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["02"];
                                                };
                                                readonly exp_year: {
                                                    readonly description: "Expiration year of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["2026"];
                                                };
                                                readonly fraud_indicators: {
                                                    readonly type: "array";
                                                    readonly items: {};
                                                };
                                                readonly issuer: {
                                                    readonly description: "Issuer of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["BANAMEX"];
                                                };
                                                readonly last4: {
                                                    readonly description: "Last 4 digits of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["4242"];
                                                };
                                                readonly name: {
                                                    readonly description: "Name of the cardholder";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Fulanito Perez"];
                                                };
                                            };
                                        }, {
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for bank transfer responses";
                                            readonly title: "charge_data_payment_method_bank_transfer_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly bank: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["STP"];
                                                };
                                                readonly clabe: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["646180111805034237"];
                                                };
                                                readonly description: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly executed_at: {
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly expires_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [1683053729];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly issuing_account_bank: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_number: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_holder_name: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_tax_id: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly payment_attempts: {
                                                    readonly type: "array";
                                                    readonly items: {};
                                                };
                                                readonly receiving_account_holder_name: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly receiving_account_number: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["646180111805034237"];
                                                };
                                                readonly receiving_account_bank: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["STP"];
                                                };
                                                readonly receiving_account_tax_id: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly reference_number: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly tracking_code: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                        }];
                                        readonly title: "charge_response_payment_method";
                                    };
                                    readonly reference_id: {
                                        readonly description: "Reference ID of the charge";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["ref_2tN73UdUSNrYRPD9r"];
                                    };
                                    readonly refunds: {
                                        readonly title: "charge_response_refunds";
                                        readonly type: readonly ["object", "null"];
                                        readonly description: "page metadata";
                                        readonly required: readonly ["has_more", "object"];
                                        readonly properties: {
                                            readonly has_more: {
                                                readonly description: "Indicates if there are more pages to be requested";
                                                readonly type: "boolean";
                                                readonly examples: readonly [false];
                                            };
                                            readonly object: {
                                                readonly description: "Object type, in this case is list";
                                                readonly type: "string";
                                                readonly examples: readonly ["list"];
                                            };
                                            readonly next_page_url: {
                                                readonly description: "URL of the next page.";
                                                readonly type: readonly ["string", "null"];
                                                readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                                            };
                                            readonly previous_page_url: {
                                                readonly description: "Url of the previous page.";
                                                readonly type: readonly ["string", "null"];
                                                readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                                            };
                                            readonly data: {
                                                readonly description: "refunds";
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly required: readonly ["amount", "created_at", "id", "object"];
                                                    readonly title: "charge_response_refunds_data";
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly amount: {
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [-15000];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly auth_code: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["867372"];
                                                        };
                                                        readonly created_at: {
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [1678226878];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly expires_at: {
                                                            readonly description: "refund expiration date";
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [1678226878];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly id: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["6407b5bee1329a000175ba11"];
                                                        };
                                                        readonly object: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["refund"];
                                                        };
                                                        readonly status: {
                                                            readonly description: "refund status";
                                                            readonly type: "string";
                                                            readonly examples: readonly ["pending"];
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly status: {
                                        readonly type: "string";
                                        readonly examples: readonly ["pending_payment"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly checkout: {
                    readonly properties: {
                        readonly allowed_payment_methods: {
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly type: "array";
                        };
                        readonly can_not_expire: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly emails_sent: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly exclude_card_networks: {
                            readonly items: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly type: "array";
                        };
                        readonly expires_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1676613599];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly failure_url: {
                            readonly type: "string";
                            readonly examples: readonly ["http://187.216.228.66:2222/SysVentasPagos/Acceso.aspx"];
                        };
                        readonly force_3ds_flow: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                        };
                        readonly is_redirect_on_failure: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly livemode: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                        readonly monthly_installments_enabled: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly monthly_installments_options: {
                            readonly items: {
                                readonly format: "int8";
                                readonly type: "integer";
                                readonly minimum: -128;
                                readonly maximum: 127;
                            };
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["ord-2tNDzhA4Akmzj11AS"];
                        };
                        readonly needs_shipping_contact: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["checkout"];
                        };
                        readonly on_demand_enabled: {
                            readonly type: readonly ["boolean", "null"];
                            readonly examples: readonly [true];
                        };
                        readonly paid_payments_count: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly recurrent: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly redirection_time: {
                            readonly description: "number of seconds to wait before redirecting to the success_url";
                            readonly format: "int8";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [2];
                            readonly minimum: -128;
                            readonly maximum: 127;
                        };
                        readonly slug: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a85194c43971ecea35cc519bb"];
                        };
                        readonly sms_sent: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly success_url: {
                            readonly type: "string";
                            readonly examples: readonly ["http://187.216.228.66:2222/SysVentasPagos/Acceso.aspx"];
                        };
                        readonly starts_at: {
                            readonly type: "integer";
                            readonly examples: readonly [1676354400];
                        };
                        readonly status: {
                            readonly type: "string";
                            readonly examples: readonly ["Issued"];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly examples: readonly ["HostedPayment"];
                        };
                        readonly url: {
                            readonly type: "string";
                            readonly examples: readonly ["https://pay.stg.conekta.io/checkout/6fca054a85194c43971ecea35cc519bb"];
                        };
                    };
                    readonly type: "object";
                };
                readonly created_at: {
                    readonly description: "The time at which the object was created in seconds since the Unix epoch";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1676328434];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly description: "The three-letter ISO 4217 currency code. The currency of the order.";
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly customer_info: {
                    readonly type: "object";
                    readonly title: "order_customer_info_response";
                    readonly properties: {
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["customer_info"];
                        };
                        readonly customer_custom_reference: {
                            readonly description: "Custom reference";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["custom_reference"];
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["DevTest"];
                        };
                        readonly email: {
                            readonly format: "email";
                            readonly type: "string";
                            readonly examples: readonly ["test@conekta.com"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["5522997233"];
                        };
                        readonly corporate: {
                            readonly default: false;
                            readonly type: "boolean";
                        };
                        readonly customer_id: {
                            readonly type: "string";
                            readonly examples: readonly ["cus_23874283647"];
                        };
                    };
                };
                readonly discount_lines: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "discount_lines_data_response";
                                readonly description: "List of discounts that apply to the order.";
                                readonly required: readonly ["amount", "code", "id", "object", "parent_id", "type"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly amount: {
                                        readonly description: "The amount to be deducted from the total sum of all payments, in cents.";
                                        readonly format: "int64";
                                        readonly minimum: 0;
                                        readonly type: "integer";
                                        readonly examples: readonly [500];
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly code: {
                                        readonly description: "Discount code.";
                                        readonly type: "string";
                                        readonly examples: readonly ["123"];
                                    };
                                    readonly type: {
                                        readonly description: "It can be 'loyalty', 'campaign', 'coupon' o 'sign'";
                                        readonly type: "string";
                                        readonly examples: readonly ["loyalty"];
                                    };
                                    readonly id: {
                                        readonly description: "The discount line id";
                                        readonly type: "string";
                                        readonly examples: readonly ["dis_lin_2tQQ58HPgPw7StE8z"];
                                    };
                                    readonly object: {
                                        readonly description: "The object name";
                                        readonly type: "string";
                                        readonly examples: readonly ["discount_line"];
                                    };
                                    readonly parent_id: {
                                        readonly description: "The order id";
                                        readonly type: "string";
                                        readonly examples: readonly ["ord_2tPAmKCEJqh8RE6nY"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly fiscal_entity: {
                    readonly description: "Fiscal entity of the order, Currently it is a purely informative field";
                    readonly properties: {
                        readonly address: {
                            readonly description: "Address of the fiscal entity";
                            readonly title: "order_fiscal_entity_address_response";
                            readonly required: readonly ["city", "country", "external_number", "postal_code", "street1"];
                            readonly type: "object";
                            readonly properties: {
                                readonly street1: {
                                    readonly description: "Street name and number";
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly description: "Street name and number";
                                    readonly type: readonly ["string", "null"];
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly description: "Postal code";
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly description: "City";
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly description: "State";
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly external_number: {
                                    readonly description: "External number";
                                    readonly type: "string";
                                    readonly examples: readonly ["123"];
                                };
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["fiscal_entity_address"];
                                };
                            };
                        };
                        readonly email: {
                            readonly description: "Email of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["test@gmail.com"];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly description: "Metadata associated with the fiscal entity";
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                        readonly name: {
                            readonly description: "Name of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["Conekta Inc"];
                        };
                        readonly tax_id: {
                            readonly description: "Tax ID of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["324234234"];
                        };
                        readonly id: {
                            readonly description: "ID of the fiscal entity";
                            readonly type: "string";
                            readonly examples: readonly ["fis_ent_2tN85VYaSMyDvjB3M"];
                        };
                        readonly created_at: {
                            readonly description: "The time at which the object was created in seconds since the Unix epoch";
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1676328434];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["fiscal_entity"];
                        };
                        readonly phone: {
                            readonly description: "Phone of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["+525511223344"];
                        };
                    };
                    readonly required: readonly ["address", "created_at", "id", "object"];
                    readonly title: "order_fiscal_entity_response";
                    readonly type: readonly ["object", "null"];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tMtQQpDvfnNjiuFG"];
                };
                readonly is_refundable: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly line_items: {
                    readonly title: "order_response_products";
                    readonly description: "page metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly next_page_url: {
                            readonly description: "URL of the next page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                        };
                        readonly previous_page_url: {
                            readonly description: "Url of the previous page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "product_data_response";
                                readonly required: readonly ["name", "quantity", "unit_price"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly antifraud_info: {
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly brand: {
                                        readonly description: "The brand of the item.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Cohiba"];
                                    };
                                    readonly description: {
                                        readonly description: "Short description of the item";
                                        readonly maxLength: 250;
                                        readonly type: "string";
                                        readonly examples: readonly ["Imported From Mex."];
                                    };
                                    readonly metadata: {
                                        readonly description: "It is a key/value hash that can hold custom fields. Maximum 100 elements and allows special characters.";
                                        readonly maxProperties: 100;
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly name: {
                                        readonly description: "The name of the item. It will be displayed in the order.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Box of Cohiba S1s"];
                                    };
                                    readonly quantity: {
                                        readonly description: "The quantity of the item in the order.";
                                        readonly format: "int32";
                                        readonly minimum: 1;
                                        readonly type: "integer";
                                        readonly examples: readonly [1];
                                        readonly maximum: 2147483647;
                                    };
                                    readonly sku: {
                                        readonly description: "The stock keeping unit for the item. It is used to identify the item in the order.";
                                        readonly type: "string";
                                        readonly examples: readonly ["XYZ12345"];
                                    };
                                    readonly tags: {
                                        readonly description: "List of tags for the item. It is used to identify the item in the order.";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                        readonly examples: readonly ["food", "mexican food"];
                                    };
                                    readonly unit_price: {
                                        readonly description: "The price of the item in cents.";
                                        readonly format: "int32";
                                        readonly minimum: 0;
                                        readonly type: "integer";
                                        readonly examples: readonly [20000];
                                        readonly maximum: 2147483647;
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                    };
                                    readonly parent_id: {
                                        readonly type: "string";
                                    };
                                };
                            };
                        };
                    };
                };
                readonly livemode: {
                    readonly description: "Whether the object exists in live mode or test mode";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly description: "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.";
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly next_action: {
                    readonly description: "contains the following attributes that will guide to continue the flow";
                    readonly properties: {
                        readonly redirect_to_url: {
                            readonly description: "contains the following attributes that will guide to continue the flow";
                            readonly properties: {
                                readonly url: {
                                    readonly description: "pay.conekta.com/{id} Indicates the url of the Conekta component to authenticate the flow through 3DS2.";
                                    readonly format: "uri";
                                    readonly type: "string";
                                    readonly examples: readonly ["https://pay.conekta.com/6fca054a85194c43971ecea35cc519bb"];
                                };
                                readonly return_url: {
                                    readonly description: "Indicates the url to which the 3DS2 flow returns at the end, when the integration is redirected.";
                                    readonly format: "uri";
                                    readonly type: "string";
                                    readonly examples: readonly ["https://my-website.com\""];
                                };
                            };
                            readonly type: "object";
                        };
                        readonly type: {
                            readonly description: "Indicates the type of action to be taken";
                            readonly type: "string";
                            readonly examples: readonly ["redirect_to_url"];
                        };
                    };
                    readonly title: "order_next_action_response";
                    readonly type: "object";
                };
                readonly object: {
                    readonly description: "String representing the object’s type. Objects of the same type share the same value.";
                    readonly type: "string";
                    readonly examples: readonly ["order"];
                };
                readonly payment_status: {
                    readonly description: "The payment status of the order.";
                    readonly type: "string";
                    readonly examples: readonly ["paid"];
                };
                readonly processing_mode: {
                    readonly description: "Indicates the processing mode for the order, either ecommerce, recurrent or validation.";
                    readonly type: "string";
                    readonly examples: readonly ["ecommerce"];
                };
                readonly shipping_contact: {
                    readonly type: "object";
                    readonly description: "Contains the detail of the shipping addresses that the client has active or has used in Conekta";
                    readonly properties: {
                        readonly created_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1675715413];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["adr_1234567890"];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["shipping_contact"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["+525511223344"];
                        };
                        readonly receiver: {
                            readonly type: "string";
                            readonly examples: readonly ["Marvin Fuller"];
                        };
                        readonly between_streets: {
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["Ackerman Crescent"];
                        };
                        readonly address: {
                            readonly type: "object";
                            readonly properties: {
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["shipping_address"];
                                };
                                readonly street1: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly residential: {
                                    readonly type: readonly ["boolean", "null"];
                                    readonly examples: readonly [true];
                                };
                            };
                        };
                        readonly parent_id: {
                            readonly type: "string";
                        };
                        readonly default: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly metadata: {
                            readonly description: "Metadata associated with the shipping contact";
                            readonly maxProperties: 100;
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                        readonly deleted: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                    };
                };
                readonly updated_at: {
                    readonly description: "The time at which the object was last updated in seconds since the Unix epoch";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1676328434];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
            readonly title: "order_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "402": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "428": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CancelSubscription: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "subscription model";
            readonly properties: {
                readonly billing_cycle_start: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626827];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly billing_cycle_end: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626827];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly canceled_at: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1678258162];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly canceled_reason: {
                    readonly description: "Reason for cancellation. This field appears when the subscription status is 'canceled'.";
                    readonly type: "string";
                    readonly examples: readonly ["user_cancelation"];
                };
                readonly card_id: {
                    readonly type: "string";
                    readonly examples: readonly ["src_2tKcHxhTz7xU5SymL"];
                };
                readonly charge_id: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["2tKcHxhTz7xU5SymL"];
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly customer_custom_reference: {
                    readonly type: "string";
                    readonly examples: readonly ["dotnet_123456"];
                };
                readonly customer_id: {
                    readonly type: "string";
                    readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["gold-plan"];
                };
                readonly last_billing_cycle_order_id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tSoMP7bZJbLiq4z8"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["subscription"];
                };
                readonly paused_at: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1678258162];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly plan_id: {
                    readonly type: "string";
                    readonly examples: readonly ["plan_2tXx672QLQ68CkmMn"];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["past_due"];
                };
                readonly subscription_start: {
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                };
                readonly trial_start: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly trial_end: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
            readonly title: "subscription_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateApiKey: {
    readonly body: {
        readonly properties: {
            readonly description: {
                readonly description: "A name or brief explanation of what this api key is used for";
                readonly type: "string";
                readonly examples: readonly ["online store"];
            };
            readonly role: {
                readonly type: "string";
                readonly examples: readonly ["private"];
            };
        };
        readonly required: readonly ["role"];
        readonly title: "api_keys_request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "api_key_create_response";
            readonly type: "object";
            readonly description: "api keys model";
            readonly properties: {
                readonly authentication_token: {
                    readonly description: "It is occupied as a user when authenticated with basic authentication, with a blank password. This value will only appear once, in the request to create a new key. Copy and save it in a safe place.";
                    readonly type: "string";
                    readonly examples: readonly ["key_rpHzxufNgjFCdprEEFZRTKi"];
                };
                readonly active: {
                    readonly description: "Indicates if the api key is active";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly created_at: {
                    readonly description: "Unix timestamp in seconds of when the api key was created";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1684167881];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly updated_at: {
                    readonly description: "Unix timestamp in seconds of when the api key was last updated";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1684167923];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly deactivated_at: {
                    readonly description: "Unix timestamp in seconds of when the api key was deleted";
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly description: {
                    readonly description: "A name or brief explanation of what this api key is used for";
                    readonly type: "string";
                    readonly examples: readonly ["online store"];
                };
                readonly id: {
                    readonly description: "Unique identifier of the api key";
                    readonly type: "string";
                    readonly examples: readonly ["64625cc9f3e02c00163f5e4d"];
                };
                readonly livemode: {
                    readonly description: "Indicates if the api key is in production";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly deleted: {
                    readonly description: "Indicates if the api key was deleted";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object name, value is 'api_key'";
                    readonly type: "string";
                    readonly examples: readonly ["api_key"];
                };
                readonly prefix: {
                    readonly description: "The first few characters of the authentication_token";
                    readonly type: "string";
                    readonly examples: readonly ["key_rp"];
                };
                readonly role: {
                    readonly description: "Indicates if the api key is private or public";
                    readonly type: "string";
                    readonly examples: readonly ["private"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateCheckout: {
    readonly body: {
        readonly description: "It is a sub-resource of the Order model that can be stipulated in order to configure its corresponding checkout";
        readonly properties: {
            readonly allowed_payment_methods: {
                readonly description: "Those are the payment methods that will be available for the link";
                readonly items: {
                    readonly type: "string";
                };
                readonly type: "array";
                readonly examples: readonly ["cash", "card", "bank_transfer"];
            };
            readonly expires_at: {
                readonly description: "It is the time when the link will expire. It is expressed in seconds since the Unix epoch.\nThe valid range is from 2 to 365 days (the valid range will be taken from the next day of the creation date at 00:01 hrs)\n";
                readonly format: "int64";
                readonly type: "integer";
                readonly examples: readonly [1680397724];
                readonly minimum: -9223372036854776000;
                readonly maximum: 9223372036854776000;
            };
            readonly monthly_installments_enabled: {
                readonly description: "This flag allows you to specify if months without interest will be active.";
                readonly type: "boolean";
                readonly examples: readonly [true];
            };
            readonly monthly_installments_options: {
                readonly description: "This field allows you to specify the number of months without interest.";
                readonly items: {
                    readonly format: "int8";
                    readonly type: "integer";
                    readonly minimum: -128;
                    readonly maximum: 127;
                };
                readonly type: "array";
                readonly examples: readonly [3, 6, 12];
            };
            readonly three_ds_mode: {
                readonly description: "Indicates the 3DS2 mode for the order, either smart or strict.";
                readonly type: "string";
            };
            readonly name: {
                readonly description: "Reason for charge";
                readonly type: "string";
                readonly examples: readonly ["Payment Link Name 1594138857"];
            };
            readonly needs_shipping_contact: {
                readonly description: "This flag allows you to fill in the shipping information at checkout.";
                readonly type: "boolean";
                readonly examples: readonly [false];
            };
            readonly on_demand_enabled: {
                readonly description: "This flag allows you to specify if the link will be on demand.";
                readonly type: readonly ["boolean", "null"];
                readonly examples: readonly [true];
            };
            readonly order_template: {
                readonly description: "It maintains the attributes with which the order will be created when receiving a new payment.";
                readonly properties: {
                    readonly currency: {
                        readonly description: "It is the currency in which the order will be created. It must be a valid ISO 4217 currency code.";
                        readonly maxLength: 3;
                        readonly type: "string";
                        readonly examples: readonly ["MXN"];
                    };
                    readonly customer_info: {
                        readonly description: "It is the information of the customer who will be created when receiving a new payment.";
                        readonly oneOf: readonly [{
                            readonly properties: {
                                readonly name: {
                                    readonly type: "string";
                                    readonly examples: readonly ["DevTest"];
                                };
                                readonly email: {
                                    readonly format: "email";
                                    readonly type: "string";
                                    readonly examples: readonly ["test@conekta.com"];
                                };
                                readonly phone: {
                                    readonly type: "string";
                                    readonly examples: readonly ["5522997233"];
                                };
                                readonly corporate: {
                                    readonly type: "boolean";
                                };
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["customer_info"];
                                };
                            };
                            readonly required: readonly ["email", "name", "phone"];
                            readonly title: "customer_info";
                            readonly type: "object";
                        }, {
                            readonly properties: {
                                readonly customer_id: {
                                    readonly type: "string";
                                    readonly examples: readonly ["cus_23874283647"];
                                };
                            };
                            readonly required: readonly ["customer_id"];
                            readonly title: "customer_info_customer_id";
                            readonly type: "object";
                        }];
                    };
                    readonly line_items: {
                        readonly description: "They are the products to buy. Each contains the \"unit price\" and \"quantity\" parameters that are used to calculate the total amount of the order.";
                        readonly items: {
                            readonly properties: {
                                readonly antifraud_info: {
                                    readonly additionalProperties: true;
                                    readonly type: "object";
                                };
                                readonly brand: {
                                    readonly description: "The brand of the item.";
                                    readonly type: "string";
                                    readonly examples: readonly ["Cohiba"];
                                };
                                readonly description: {
                                    readonly description: "Short description of the item";
                                    readonly maxLength: 250;
                                    readonly type: "string";
                                    readonly examples: readonly ["Imported From Mex."];
                                };
                                readonly metadata: {
                                    readonly additionalProperties: true;
                                    readonly description: "It is a key/value hash that can hold custom fields. Maximum 100 elements and allows special characters.";
                                    readonly maxProperties: 100;
                                    readonly type: "object";
                                };
                                readonly name: {
                                    readonly description: "The name of the item. It will be displayed in the order.";
                                    readonly type: "string";
                                    readonly examples: readonly ["Box of Cohiba S1s"];
                                };
                                readonly quantity: {
                                    readonly description: "The quantity of the item in the order.";
                                    readonly format: "int32";
                                    readonly minimum: 1;
                                    readonly type: "integer";
                                    readonly examples: readonly [1];
                                    readonly maximum: 2147483647;
                                };
                                readonly sku: {
                                    readonly description: "The stock keeping unit for the item. It is used to identify the item in the order.";
                                    readonly type: "string";
                                    readonly examples: readonly ["XYZ12345"];
                                };
                                readonly tags: {
                                    readonly description: "List of tags for the item. It is used to identify the item in the order.";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                    readonly type: "array";
                                    readonly examples: readonly ["food", "mexican food"];
                                };
                                readonly unit_price: {
                                    readonly description: "The price of the item in cents.";
                                    readonly format: "int32";
                                    readonly minimum: 0;
                                    readonly type: "integer";
                                    readonly examples: readonly [20000];
                                    readonly maximum: 2147483647;
                                };
                            };
                            readonly required: readonly ["name", "quantity", "unit_price"];
                            readonly title: "product";
                            readonly type: "object";
                        };
                        readonly type: "array";
                    };
                    readonly metadata: {
                        readonly additionalProperties: true;
                        readonly description: "It is a set of key-value pairs that you can attach to the order. It can be used to store additional information about the order in a structured format.";
                        readonly maxProperties: 100;
                        readonly type: "object";
                    };
                };
                readonly required: readonly ["currency", "line_items"];
                readonly type: "object";
            };
            readonly payments_limit_count: {
                readonly description: "It is the number of payments that can be made through the link.";
                readonly format: "int8";
                readonly type: "integer";
                readonly examples: readonly [5];
                readonly minimum: -128;
                readonly maximum: 127;
            };
            readonly recurrent: {
                readonly description: "false: single use. true: multiple payments";
                readonly type: "boolean";
                readonly examples: readonly [false];
            };
            readonly type: {
                readonly description: "It is the type of link that will be created. It must be a valid type.";
                readonly type: "string";
                readonly examples: readonly ["PaymentLink"];
            };
        };
        readonly required: readonly ["allowed_payment_methods", "expires_at", "name", "order_template", "recurrent", "type"];
        readonly title: "checkout_request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "checkout response";
            readonly properties: {
                readonly allowed_payment_methods: {
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly examples: readonly ["cash", "card", "bank_transfer"];
                };
                readonly can_not_expire: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly emails_sent: {
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly exclude_card_networks: {
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly type: "array";
                };
                readonly expires_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1680397724];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly failure_url: {
                    readonly type: "string";
                    readonly examples: readonly ["https://pay.conekta.com/failure"];
                };
                readonly force_3ds_flow: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["b0bf16c4-18b9-445e-ba24-01604f329dbf"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly type: "object";
                };
                readonly monthly_installments_enabled: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly monthly_installments_options: {
                    readonly items: {
                        readonly format: "int8";
                        readonly type: "integer";
                        readonly minimum: -128;
                        readonly maximum: 127;
                    };
                    readonly type: "array";
                    readonly examples: readonly [3, 6, 12];
                };
                readonly name: {
                    readonly description: "Reason for charge";
                    readonly type: "string";
                    readonly examples: readonly ["Payment Link Name 1594138857"];
                };
                readonly needs_shipping_contact: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["checkout"];
                };
                readonly paid_payments_count: {
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly payments_limit_count: {
                    readonly format: "int8";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [5];
                    readonly minimum: -128;
                    readonly maximum: 127;
                };
                readonly recurrent: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly slug: {
                    readonly type: "string";
                    readonly examples: readonly ["b0bf16c418b9445eba2401604f329dbf"];
                };
                readonly sms_sent: {
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly starts_at: {
                    readonly type: "integer";
                    readonly examples: readonly [1677650400];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["Issued"];
                };
                readonly success_url: {
                    readonly type: "string";
                    readonly examples: readonly ["https://pay.conekta.com/success"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["PaymentLink"];
                };
                readonly url: {
                    readonly format: "uri";
                    readonly type: "string";
                    readonly examples: readonly ["https://pay.conekta.com/link/b0bf16c418b9445eba2401604f329dbf"];
                };
            };
            readonly required: readonly ["id", "livemode", "name", "object"];
            readonly title: "checkout_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "402": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateCustomer: {
    readonly body: {
        readonly description: "a customer";
        readonly properties: {
            readonly antifraud_info: {
                readonly properties: {
                    readonly account_created_at: {
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly examples: readonly [1484040996];
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                    readonly first_paid_at: {
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly examples: readonly [1485151007];
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                };
                readonly type: readonly ["object", "null"];
            };
            readonly corporate: {
                readonly default: false;
                readonly description: "It is a value that allows identifying if the email is corporate or not.";
                readonly type: "boolean";
                readonly examples: readonly [false];
            };
            readonly custom_reference: {
                readonly description: "It is an undefined value.";
                readonly type: "string";
            };
            readonly email: {
                readonly description: "An email address is a series of customizable characters followed by a universal Internet symbol, the at symbol (@), the name of a host server, and a web domain ending (.mx, .com, .org, . net, etc).";
                readonly format: "email";
                readonly type: "string";
                readonly examples: readonly ["miguel@gmail.com"];
            };
            readonly default_payment_source_id: {
                readonly description: "It is a parameter that allows to identify in the response, the Conekta ID of a payment method (payment_id)";
                readonly type: "string";
                readonly examples: readonly ["src_1a2b3c4d5e6f7g8h"];
            };
            readonly default_shipping_contact_id: {
                readonly description: "It is a parameter that allows to identify in the response, the Conekta ID of the shipping address (shipping_contact)";
                readonly type: "string";
                readonly examples: readonly ["ship_cont_1a2b3c4d5e6f7g8h"];
            };
            readonly fiscal_entities: {
                readonly items: {
                    readonly properties: {
                        readonly address: {
                            readonly required: readonly ["city", "postal_code", "street1"];
                            readonly type: "object";
                            readonly properties: {
                                readonly street1: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly residential: {
                                    readonly default: false;
                                    readonly type: "boolean";
                                    readonly examples: readonly [true];
                                };
                                readonly external_number: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly tax_id: {
                            readonly type: "string";
                        };
                        readonly email: {
                            readonly type: "string";
                        };
                        readonly phone: {
                            readonly type: "string";
                        };
                        readonly metadata: {
                            readonly additionalProperties: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly type: "object";
                        };
                        readonly company_name: {
                            readonly type: "string";
                            readonly examples: readonly ["conekta"];
                        };
                    };
                    readonly required: readonly ["address"];
                    readonly title: "fiscal_entity_request";
                    readonly type: "object";
                };
                readonly type: "array";
            };
            readonly metadata: {
                readonly additionalProperties: true;
                readonly maxProperties: 100;
                readonly type: "object";
            };
            readonly name: {
                readonly description: "Client's name";
                readonly type: "string";
                readonly examples: readonly ["miguel"];
            };
            readonly payment_sources: {
                readonly description: "Contains details of the payment methods that the customer has active or has used in Conekta";
                readonly items: {
                    readonly oneOf: readonly [{
                        readonly title: "payment_method_token_request";
                        readonly description: "Contains details of the payment methods that the customer has active or has used in Conekta";
                        readonly required: readonly ["token_id", "type"];
                        readonly type: "object";
                        readonly properties: {
                            readonly type: {
                                readonly description: "Type of payment method";
                                readonly type: "string";
                                readonly examples: readonly ["card | cash | spei"];
                            };
                            readonly token_id: {
                                readonly description: "Token id that will be used to create a \"card\" type payment method. See the (subscriptions)[https://developers.conekta.com/v2.1.0/reference/createsubscription] tutorial for more information on how to tokenize cards.";
                                readonly type: "string";
                                readonly examples: readonly ["tok_32hj4g234as"];
                            };
                        };
                    }, {
                        readonly title: "payment_method_cash_request";
                        readonly description: "Contains details of the payment methods that the customer has active or has used in Conekta";
                        readonly required: readonly ["type"];
                        readonly type: "object";
                        readonly properties: {
                            readonly type: {
                                readonly description: "Type of payment method";
                                readonly type: "string";
                                readonly examples: readonly ["card | cash | spei"];
                            };
                            readonly expires_at: {
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1553273553];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                        };
                    }, {
                        readonly title: "payment_method_spei_request";
                        readonly description: "Contains details of the payment methods that the customer has active or has used in Conekta";
                        readonly required: readonly ["type"];
                        readonly type: "object";
                        readonly properties: {
                            readonly type: {
                                readonly description: "Type of payment method";
                                readonly type: "string";
                                readonly examples: readonly ["card | cash | spei"];
                            };
                            readonly expires_at: {
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1553273553];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                        };
                    }];
                    readonly title: "customer_payment_methods_request";
                };
                readonly type: "array";
            };
            readonly phone: {
                readonly description: "Is the customer's phone number";
                readonly type: "string";
                readonly examples: readonly ["+5215555555555"];
            };
            readonly plan_id: {
                readonly description: "Contains the ID of a plan, which could together with name, email and phone create a client directly to a subscription";
                readonly type: "string";
                readonly examples: readonly ["plan_987234823"];
            };
            readonly shipping_contacts: {
                readonly description: "Contains the detail of the shipping addresses that the client has active or has used in Conekta";
                readonly items: {
                    readonly description: "[Shipping](https://developers.conekta.com/v2.1.0/reference/createcustomershippingcontacts)\ndetails, required in case of sending a shipping. If we do not receive a shipping_contact on the order, the default shipping_contact of the customer will be used.";
                    readonly properties: {
                        readonly phone: {
                            readonly description: "Phone contact";
                            readonly type: "string";
                            readonly examples: readonly ["+525511223344"];
                        };
                        readonly receiver: {
                            readonly description: "Name of the person who will receive the order";
                            readonly type: "string";
                            readonly examples: readonly ["Marvin Fuller"];
                        };
                        readonly between_streets: {
                            readonly description: "The street names between which the order will be delivered.";
                            readonly type: "string";
                            readonly examples: readonly ["Ackerman Crescent"];
                        };
                        readonly address: {
                            readonly description: "Address of the person who will receive the order";
                            readonly properties: {
                                readonly street1: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly residential: {
                                    readonly type: readonly ["boolean", "null"];
                                    readonly examples: readonly [true];
                                };
                            };
                            readonly type: "object";
                        };
                        readonly parent_id: {
                            readonly type: "string";
                        };
                        readonly default: {
                            readonly type: readonly ["boolean", "null"];
                        };
                        readonly deleted: {
                            readonly type: readonly ["boolean", "null"];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly description: "Metadata associated with the shipping contact";
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                    };
                    readonly required: readonly ["address"];
                    readonly title: "customer_shipping_contacts_request";
                    readonly type: "object";
                };
                readonly type: "array";
            };
            readonly subscription: {
                readonly description: "It is a parameter that allows to identify in the response, the detailed content of the plans to which the client has subscribed";
                readonly properties: {
                    readonly plan_id: {
                        readonly type: "string";
                        readonly examples: readonly ["f84gdgf5g48r15fd21g8w424fd1"];
                    };
                    readonly card_id: {
                        readonly type: "string";
                        readonly examples: readonly ["src_2qUCNd5AyQqfPMBuV"];
                    };
                    readonly trial_end: {
                        readonly type: "integer";
                        readonly examples: readonly [1484040996];
                    };
                };
                readonly required: readonly ["plan_id"];
                readonly title: "subscription_request";
                readonly type: "object";
            };
        };
        readonly required: readonly ["email", "name", "phone"];
        readonly title: "customer request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "customer response";
            readonly properties: {
                readonly antifraud_info: {
                    readonly properties: {
                        readonly first_paid_at: {
                            readonly type: "integer";
                            readonly examples: readonly [1485151007];
                        };
                        readonly account_created_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1484040996];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                    };
                    readonly title: "customer_antifraud_info_response";
                    readonly type: readonly ["object", "null"];
                };
                readonly corporate: {
                    readonly description: "true if the customer is a company";
                    readonly type: "boolean";
                };
                readonly created_at: {
                    readonly description: "Creation date of the object";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1485151007];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly custom_reference: {
                    readonly description: "Custom reference";
                    readonly type: "string";
                    readonly examples: readonly ["custom_reference"];
                };
                readonly default_fiscal_entity_id: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["fis_ent_2tKqqAfqPi21oCmEJ"];
                };
                readonly default_shipping_contact_id: {
                    readonly type: "string";
                    readonly examples: readonly ["ship_cont_2tKZsTYcsryyu7Ah8"];
                };
                readonly default_payment_source_id: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["src_2tHJfJ79KyUwpxTio"];
                };
                readonly email: {
                    readonly format: "email";
                    readonly type: "string";
                    readonly examples: readonly ["Felipe@gmail.com"];
                };
                readonly fiscal_entities: {
                    readonly title: "customer_fiscal_entities_response";
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "customer_fiscal_entities_data_response";
                                readonly required: readonly ["address", "created_at", "id", "object"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly address: {
                                        readonly required: readonly ["city", "postal_code", "street1"];
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly street1: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Nuevo Leon 254"];
                                            };
                                            readonly street2: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Departamento 404"];
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly examples: readonly ["06100"];
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly state: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly country: {
                                                readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                                readonly type: "string";
                                                readonly examples: readonly ["MX"];
                                            };
                                            readonly residential: {
                                                readonly default: false;
                                                readonly type: "boolean";
                                                readonly examples: readonly [true];
                                            };
                                            readonly external_number: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly tax_id: {
                                        readonly type: "string";
                                    };
                                    readonly email: {
                                        readonly type: "string";
                                    };
                                    readonly phone: {
                                        readonly type: "string";
                                    };
                                    readonly metadata: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "object";
                                            readonly additionalProperties: true;
                                        };
                                    };
                                    readonly company_name: {
                                        readonly type: "string";
                                        readonly examples: readonly ["conekta"];
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["ship_cont_2tKZsTYcsryyu7Ah8"];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["shipping_contact"];
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1675715413];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly parent_id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                                    };
                                    readonly default: {
                                        readonly type: "boolean";
                                    };
                                };
                            };
                        };
                    };
                };
                readonly id: {
                    readonly description: "Customer's ID";
                    readonly type: "string";
                    readonly examples: readonly ["cus_2tHJfJ79KyUwpxTik"];
                };
                readonly livemode: {
                    readonly description: "true if the object exists in live mode or the value false if the object exists in test mode";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly name: {
                    readonly description: "Customer's name";
                    readonly type: "string";
                    readonly examples: readonly ["Felipe"];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["customer"];
                };
                readonly payment_sources: {
                    readonly title: "customer_payment_methods_response";
                    readonly description: "page metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly next_page_url: {
                            readonly description: "URL of the next page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                        };
                        readonly previous_page_url: {
                            readonly description: "Url of the previous page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                        };
                        readonly data: {
                            readonly title: "customer_payment_methods_data";
                            readonly type: "array";
                            readonly items: {
                                readonly discriminator: {
                                    readonly mapping: {
                                        readonly cash: "payment_method_cash_response";
                                        readonly card: "payment_method_card_response";
                                        readonly oxxo_recurrent: "payment_method_cash_response";
                                        readonly spei_recurrent: "payment_method_spei_recurrent";
                                    };
                                    readonly propertyName: "type";
                                };
                                readonly oneOf: readonly [{
                                    readonly required: readonly ["created_at", "id", "object", "type"];
                                    readonly type: "object";
                                    readonly description: "use for cash responses";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                        };
                                        readonly id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["payment_source"];
                                        };
                                        readonly created_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [1675715413];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly parent_id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                        };
                                        readonly reference: {
                                            readonly type: "string";
                                            readonly examples: readonly ["93000262276908"];
                                        };
                                        readonly barcode: {
                                            readonly type: "string";
                                            readonly examples: readonly ["93000262276908"];
                                        };
                                        readonly barcode_url: {
                                            readonly type: "string";
                                            readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                                        };
                                        readonly expires_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [0];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly provider: {
                                            readonly type: "string";
                                            readonly examples: readonly ["Oxxo"];
                                        };
                                    };
                                }, {
                                    readonly required: readonly ["created_at", "id", "object", "type"];
                                    readonly type: "object";
                                    readonly description: "use for card responses";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                        };
                                        readonly id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["payment_source"];
                                        };
                                        readonly created_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [1675715413];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly parent_id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                        };
                                        readonly last4: {
                                            readonly type: "string";
                                            readonly examples: readonly ["6410"];
                                        };
                                        readonly bin: {
                                            readonly type: "string";
                                            readonly examples: readonly ["40276657"];
                                        };
                                        readonly card_type: {
                                            readonly type: "string";
                                            readonly examples: readonly ["debit"];
                                        };
                                        readonly exp_month: {
                                            readonly type: "string";
                                            readonly examples: readonly ["10"];
                                        };
                                        readonly exp_year: {
                                            readonly type: "string";
                                            readonly examples: readonly ["25"];
                                        };
                                        readonly brand: {
                                            readonly type: "string";
                                            readonly examples: readonly ["visa"];
                                        };
                                        readonly name: {
                                            readonly type: "string";
                                            readonly examples: readonly ["Fulano Perez\""];
                                        };
                                        readonly default: {
                                            readonly type: "boolean";
                                        };
                                        readonly visible_on_checkout: {
                                            readonly type: "boolean";
                                        };
                                        readonly payment_source_status: {
                                            readonly type: "string";
                                            readonly examples: readonly ["active"];
                                        };
                                    };
                                }, {
                                    readonly required: readonly ["created_at", "id", "object", "type"];
                                    readonly type: "object";
                                    readonly description: "use for spei responses";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                        };
                                        readonly id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["payment_source"];
                                        };
                                        readonly created_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [1675715413];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly parent_id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                        };
                                        readonly reference: {
                                            readonly type: "string";
                                            readonly examples: readonly ["93000262276908"];
                                        };
                                        readonly expires_at: {
                                            readonly type: "string";
                                            readonly examples: readonly ["none"];
                                        };
                                    };
                                }];
                                readonly title: "customer_payment_methods_data";
                            };
                        };
                    };
                };
                readonly phone: {
                    readonly description: "Customer's phone number";
                    readonly type: "string";
                    readonly examples: readonly ["+5215555555555"];
                };
                readonly shipping_contacts: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "customer_shipping_contacts_data_response";
                                readonly description: "[Shipping](https://developers.conekta.com/v2.1.0/reference/createcustomershippingcontacts)\ndetails, required in case of sending a shipping. If we do not receive a shipping_contact on the order, the default shipping_contact of the customer will be used.";
                                readonly required: readonly ["address", "created_at", "id", "object"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly phone: {
                                        readonly description: "Phone contact";
                                        readonly type: "string";
                                        readonly examples: readonly ["+525511223344"];
                                    };
                                    readonly receiver: {
                                        readonly description: "Name of the person who will receive the order";
                                        readonly type: "string";
                                        readonly examples: readonly ["Marvin Fuller"];
                                    };
                                    readonly between_streets: {
                                        readonly description: "The street names between which the order will be delivered.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Ackerman Crescent"];
                                    };
                                    readonly address: {
                                        readonly description: "Address of the person who will receive the order";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly street1: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Nuevo Leon 254"];
                                            };
                                            readonly street2: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Departamento 404"];
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly examples: readonly ["06100"];
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly state: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly country: {
                                                readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                                readonly type: "string";
                                                readonly examples: readonly ["MX"];
                                            };
                                            readonly residential: {
                                                readonly type: readonly ["boolean", "null"];
                                                readonly examples: readonly [true];
                                            };
                                        };
                                    };
                                    readonly parent_id: {
                                        readonly type: "string";
                                    };
                                    readonly default: {
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly deleted: {
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly metadata: {
                                        readonly description: "Metadata associated with the shipping contact";
                                        readonly maxProperties: 100;
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["ship_cont_2tKZsTYcsryyu7Ah8"];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["shipping_contact"];
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1675715413];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                };
                            };
                        };
                    };
                };
                readonly subscription: {
                    readonly description: "subscription model";
                    readonly properties: {
                        readonly billing_cycle_start: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1677626827];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly billing_cycle_end: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1677626827];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly canceled_at: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1678258162];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly canceled_reason: {
                            readonly description: "Reason for cancellation. This field appears when the subscription status is 'canceled'.";
                            readonly type: "string";
                            readonly examples: readonly ["user_cancelation"];
                        };
                        readonly card_id: {
                            readonly type: "string";
                            readonly examples: readonly ["src_2tKcHxhTz7xU5SymL"];
                        };
                        readonly charge_id: {
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["2tKcHxhTz7xU5SymL"];
                        };
                        readonly created_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1677626837];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly customer_custom_reference: {
                            readonly type: "string";
                            readonly examples: readonly ["dotnet_123456"];
                        };
                        readonly customer_id: {
                            readonly type: "string";
                            readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["gold-plan"];
                        };
                        readonly last_billing_cycle_order_id: {
                            readonly type: "string";
                            readonly examples: readonly ["ord_2tSoMP7bZJbLiq4z8"];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["subscription"];
                        };
                        readonly paused_at: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1678258162];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly plan_id: {
                            readonly type: "string";
                            readonly examples: readonly ["plan_2tXx672QLQ68CkmMn"];
                        };
                        readonly status: {
                            readonly type: "string";
                            readonly examples: readonly ["past_due"];
                        };
                        readonly subscription_start: {
                            readonly type: "integer";
                            readonly examples: readonly [1677626837];
                        };
                        readonly trial_start: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1677626837];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly trial_end: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1677626837];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                    };
                    readonly title: "subscription_response";
                    readonly type: "object";
                };
            };
            readonly required: readonly ["created_at", "id", "livemode", "name", "object"];
            readonly title: "customer response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "402": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateCustomerFiscalEntities: {
    readonly body: {
        readonly properties: {
            readonly address: {
                readonly required: readonly ["city", "postal_code", "street1"];
                readonly type: "object";
                readonly properties: {
                    readonly street1: {
                        readonly type: "string";
                        readonly examples: readonly ["Nuevo Leon 254"];
                    };
                    readonly street2: {
                        readonly type: "string";
                        readonly examples: readonly ["Departamento 404"];
                    };
                    readonly postal_code: {
                        readonly type: "string";
                        readonly examples: readonly ["06100"];
                    };
                    readonly city: {
                        readonly type: "string";
                        readonly examples: readonly ["Ciudad de Mexico"];
                    };
                    readonly state: {
                        readonly type: "string";
                        readonly examples: readonly ["Ciudad de Mexico"];
                    };
                    readonly country: {
                        readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                        readonly type: "string";
                        readonly examples: readonly ["MX"];
                    };
                    readonly residential: {
                        readonly default: false;
                        readonly type: "boolean";
                        readonly examples: readonly [true];
                    };
                    readonly external_number: {
                        readonly type: "string";
                    };
                };
            };
            readonly tax_id: {
                readonly type: "string";
            };
            readonly email: {
                readonly type: "string";
            };
            readonly phone: {
                readonly type: "string";
            };
            readonly metadata: {
                readonly additionalProperties: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly type: "object";
            };
            readonly company_name: {
                readonly type: "string";
                readonly examples: readonly ["conekta"];
            };
        };
        readonly required: readonly ["address"];
        readonly title: "fiscal_entity_request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "create_customer_fiscal_entities_response";
            readonly required: readonly ["address", "created_at", "id", "object"];
            readonly type: "object";
            readonly properties: {
                readonly address: {
                    readonly required: readonly ["city", "postal_code", "street1"];
                    readonly type: "object";
                    readonly properties: {
                        readonly street1: {
                            readonly type: "string";
                            readonly examples: readonly ["Nuevo Leon 254"];
                        };
                        readonly street2: {
                            readonly type: "string";
                            readonly examples: readonly ["Departamento 404"];
                        };
                        readonly postal_code: {
                            readonly type: "string";
                            readonly examples: readonly ["06100"];
                        };
                        readonly city: {
                            readonly type: "string";
                            readonly examples: readonly ["Ciudad de Mexico"];
                        };
                        readonly state: {
                            readonly type: "string";
                            readonly examples: readonly ["Ciudad de Mexico"];
                        };
                        readonly country: {
                            readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                            readonly type: "string";
                            readonly examples: readonly ["MX"];
                        };
                        readonly residential: {
                            readonly default: false;
                            readonly type: "boolean";
                            readonly examples: readonly [true];
                        };
                        readonly external_number: {
                            readonly type: "string";
                        };
                    };
                };
                readonly tax_id: {
                    readonly type: "string";
                };
                readonly email: {
                    readonly type: "string";
                };
                readonly phone: {
                    readonly type: "string";
                };
                readonly metadata: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly company_name: {
                    readonly type: "string";
                    readonly examples: readonly ["conekta"];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["ship_cont_2tKZsTYcsryyu7Ah8"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["shipping_contact"];
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1675715413];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly parent_id: {
                    readonly type: "string";
                    readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                };
                readonly default: {
                    readonly type: "boolean";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateCustomerPaymentMethods: {
    readonly body: {
        readonly description: "Contains details of the payment methods that the customer has active or has used in Conekta";
        readonly oneOf: readonly [{
            readonly title: "payment_method_token_request";
            readonly description: "Contains details of the payment methods that the customer has active or has used in Conekta";
            readonly required: readonly ["token_id", "type"];
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly description: "Type of payment method";
                    readonly type: "string";
                    readonly examples: readonly ["card | cash | spei"];
                };
                readonly token_id: {
                    readonly description: "Token id that will be used to create a \"card\" type payment method. See the (subscriptions)[https://developers.conekta.com/v2.1.0/reference/createsubscription] tutorial for more information on how to tokenize cards.";
                    readonly type: "string";
                    readonly examples: readonly ["tok_32hj4g234as"];
                };
            };
        }, {
            readonly title: "payment_method_cash_request";
            readonly description: "Contains details of the payment methods that the customer has active or has used in Conekta";
            readonly required: readonly ["type"];
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly description: "Type of payment method";
                    readonly type: "string";
                    readonly examples: readonly ["card | cash | spei"];
                };
                readonly expires_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1553273553];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
        }, {
            readonly title: "payment_method_spei_request";
            readonly description: "Contains details of the payment methods that the customer has active or has used in Conekta";
            readonly required: readonly ["type"];
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly description: "Type of payment method";
                    readonly type: "string";
                    readonly examples: readonly ["card | cash | spei"];
                };
                readonly expires_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1553273553];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
        }];
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly discriminator: {
                readonly mapping: {
                    readonly cash: "payment_method_cash_response";
                    readonly card: "payment_method_card_response";
                    readonly oxxo_recurrent: "payment_method_cash_response";
                    readonly spei_recurrent: "payment_method_spei_recurrent";
                };
                readonly propertyName: "type";
            };
            readonly oneOf: readonly [{
                readonly required: readonly ["created_at", "id", "object", "type"];
                readonly type: "object";
                readonly description: "use for cash responses";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                    };
                    readonly id: {
                        readonly type: "string";
                        readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                    };
                    readonly object: {
                        readonly type: "string";
                        readonly examples: readonly ["payment_source"];
                    };
                    readonly created_at: {
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly examples: readonly [1675715413];
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                    readonly parent_id: {
                        readonly type: "string";
                        readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                    };
                    readonly reference: {
                        readonly type: "string";
                        readonly examples: readonly ["93000262276908"];
                    };
                    readonly barcode: {
                        readonly type: "string";
                        readonly examples: readonly ["93000262276908"];
                    };
                    readonly barcode_url: {
                        readonly type: "string";
                        readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                    };
                    readonly expires_at: {
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly examples: readonly [0];
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                    readonly provider: {
                        readonly type: "string";
                        readonly examples: readonly ["Oxxo"];
                    };
                };
            }, {
                readonly required: readonly ["created_at", "id", "object", "type"];
                readonly type: "object";
                readonly description: "use for card responses";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                    };
                    readonly id: {
                        readonly type: "string";
                        readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                    };
                    readonly object: {
                        readonly type: "string";
                        readonly examples: readonly ["payment_source"];
                    };
                    readonly created_at: {
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly examples: readonly [1675715413];
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                    readonly parent_id: {
                        readonly type: "string";
                        readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                    };
                    readonly last4: {
                        readonly type: "string";
                        readonly examples: readonly ["6410"];
                    };
                    readonly bin: {
                        readonly type: "string";
                        readonly examples: readonly ["40276657"];
                    };
                    readonly card_type: {
                        readonly type: "string";
                        readonly examples: readonly ["debit"];
                    };
                    readonly exp_month: {
                        readonly type: "string";
                        readonly examples: readonly ["10"];
                    };
                    readonly exp_year: {
                        readonly type: "string";
                        readonly examples: readonly ["25"];
                    };
                    readonly brand: {
                        readonly type: "string";
                        readonly examples: readonly ["visa"];
                    };
                    readonly name: {
                        readonly type: "string";
                        readonly examples: readonly ["Fulano Perez\""];
                    };
                    readonly default: {
                        readonly type: "boolean";
                    };
                    readonly visible_on_checkout: {
                        readonly type: "boolean";
                    };
                    readonly payment_source_status: {
                        readonly type: "string";
                        readonly examples: readonly ["active"];
                    };
                };
            }, {
                readonly required: readonly ["created_at", "id", "object", "type"];
                readonly type: "object";
                readonly description: "use for spei responses";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                    };
                    readonly id: {
                        readonly type: "string";
                        readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                    };
                    readonly object: {
                        readonly type: "string";
                        readonly examples: readonly ["payment_source"];
                    };
                    readonly created_at: {
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly examples: readonly [1675715413];
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                    readonly parent_id: {
                        readonly type: "string";
                        readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                    };
                    readonly reference: {
                        readonly type: "string";
                        readonly examples: readonly ["93000262276908"];
                    };
                    readonly expires_at: {
                        readonly type: "string";
                        readonly examples: readonly ["none"];
                    };
                };
            }];
            readonly title: "create_customer_payment_methods_response";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateCustomerShippingContacts: {
    readonly body: {
        readonly description: "[Shipping](https://developers.conekta.com/v2.1.0/reference/createcustomershippingcontacts)\ndetails, required in case of sending a shipping. If we do not receive a shipping_contact on the order, the default shipping_contact of the customer will be used.";
        readonly properties: {
            readonly phone: {
                readonly description: "Phone contact";
                readonly type: "string";
                readonly examples: readonly ["+525511223344"];
            };
            readonly receiver: {
                readonly description: "Name of the person who will receive the order";
                readonly type: "string";
                readonly examples: readonly ["Marvin Fuller"];
            };
            readonly between_streets: {
                readonly description: "The street names between which the order will be delivered.";
                readonly type: "string";
                readonly examples: readonly ["Ackerman Crescent"];
            };
            readonly address: {
                readonly description: "Address of the person who will receive the order";
                readonly properties: {
                    readonly street1: {
                        readonly type: "string";
                        readonly examples: readonly ["Nuevo Leon 254"];
                    };
                    readonly street2: {
                        readonly type: "string";
                        readonly examples: readonly ["Departamento 404"];
                    };
                    readonly postal_code: {
                        readonly type: "string";
                        readonly examples: readonly ["06100"];
                    };
                    readonly city: {
                        readonly type: "string";
                        readonly examples: readonly ["Ciudad de Mexico"];
                    };
                    readonly state: {
                        readonly type: "string";
                        readonly examples: readonly ["Ciudad de Mexico"];
                    };
                    readonly country: {
                        readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                        readonly type: "string";
                        readonly examples: readonly ["MX"];
                    };
                    readonly residential: {
                        readonly type: readonly ["boolean", "null"];
                        readonly examples: readonly [true];
                    };
                };
                readonly type: "object";
            };
            readonly parent_id: {
                readonly type: "string";
            };
            readonly default: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly deleted: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly metadata: {
                readonly additionalProperties: true;
                readonly description: "Metadata associated with the shipping contact";
                readonly maxProperties: 100;
                readonly type: "object";
            };
        };
        readonly required: readonly ["address"];
        readonly title: "customer_shipping_contacts_request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "Contains the detail of the shipping addresses that the client has active or has used in Conekta";
            readonly properties: {
                readonly phone: {
                    readonly type: "string";
                    readonly examples: readonly ["+525511223344"];
                };
                readonly receiver: {
                    readonly type: "string";
                    readonly examples: readonly ["Marvin Fuller"];
                };
                readonly between_streets: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["Ackerman Crescent"];
                };
                readonly address: {
                    readonly properties: {
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["shipping_address"];
                        };
                        readonly street1: {
                            readonly type: "string";
                            readonly examples: readonly ["Nuevo Leon 254"];
                        };
                        readonly street2: {
                            readonly type: "string";
                            readonly examples: readonly ["Departamento 404"];
                        };
                        readonly postal_code: {
                            readonly type: "string";
                            readonly examples: readonly ["06100"];
                        };
                        readonly city: {
                            readonly type: "string";
                            readonly examples: readonly ["Ciudad de Mexico"];
                        };
                        readonly state: {
                            readonly type: "string";
                            readonly examples: readonly ["Ciudad de Mexico"];
                        };
                        readonly country: {
                            readonly type: "string";
                            readonly examples: readonly ["MX"];
                        };
                        readonly residential: {
                            readonly type: readonly ["boolean", "null"];
                            readonly examples: readonly [true];
                        };
                    };
                    readonly type: "object";
                };
                readonly parent_id: {
                    readonly type: "string";
                };
                readonly default: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["adr_1234567890"];
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1675715413];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly description: "Metadata associated with the shipping contact";
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["shipping_contact"];
                };
                readonly deleted: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateOrder: {
    readonly body: {
        readonly description: "a order";
        readonly properties: {
            readonly charges: {
                readonly description: "List of [charges](https://developers.conekta.com/v2.1.0/reference/orderscreatecharge) that are applied to the order";
                readonly items: {
                    readonly description: "The charges to be made";
                    readonly properties: {
                        readonly amount: {
                            readonly description: "Amount to be charged in cents";
                            readonly type: "integer";
                            readonly examples: readonly [40000];
                        };
                        readonly payment_method: {
                            readonly oneOf: readonly [{
                                readonly title: "payment_method_card_request";
                                readonly description: "Contains details of the payment methods that the customer has active or has used in Conekta";
                                readonly required: readonly ["cvc", "exp_month", "exp_year", "name", "number", "type"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly type: {
                                        readonly description: "Type of payment method";
                                        readonly type: "string";
                                        readonly examples: readonly ["card | cash | spei"];
                                    };
                                    readonly cvc: {
                                        readonly description: "Card security code";
                                        readonly maxLength: 4;
                                        readonly minLength: 3;
                                        readonly type: "string";
                                        readonly examples: readonly ["198"];
                                    };
                                    readonly exp_month: {
                                        readonly description: "Card expiration month";
                                        readonly maxLength: 2;
                                        readonly minLength: 2;
                                        readonly type: "string";
                                        readonly examples: readonly ["12"];
                                    };
                                    readonly exp_year: {
                                        readonly description: "Card expiration year";
                                        readonly maxLength: 4;
                                        readonly minLength: 4;
                                        readonly type: "string";
                                        readonly examples: readonly ["2025"];
                                    };
                                    readonly name: {
                                        readonly description: "Cardholder name";
                                        readonly type: "string";
                                        readonly examples: readonly ["John Doe"];
                                    };
                                    readonly number: {
                                        readonly description: "Card number";
                                        readonly type: "string";
                                        readonly examples: readonly ["4242424242424242"];
                                    };
                                };
                            }, {
                                readonly description: "Payment method used in the charge. Go to the [payment methods](https://developers.conekta.com/reference/m%C3%A9todos-de-pago) section for more details\n";
                                readonly properties: {
                                    readonly expires_at: {
                                        readonly description: "Method expiration date as unix timestamp";
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1677196303];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly monthly_installments: {
                                        readonly description: "How many months without interest to apply, it can be 3, 6, 9, 12 or 18";
                                        readonly format: "int8";
                                        readonly type: "integer";
                                        readonly minimum: -128;
                                        readonly maximum: 127;
                                    };
                                    readonly type: {
                                        readonly description: "Type of payment method";
                                        readonly type: "string";
                                        readonly examples: readonly ["card"];
                                    };
                                    readonly token_id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["tok_2897348234"];
                                    };
                                    readonly payment_source_id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["src_2tLkkyfMPh6v7pFry"];
                                    };
                                    readonly cvc: {
                                        readonly description: "Optional, It is a value that allows identifying the security code of the card. Only for PCI merchants";
                                        readonly type: "string";
                                        readonly examples: readonly ["123"];
                                    };
                                    readonly contract_id: {
                                        readonly description: "Optional id sent to indicate the bank contract for recurrent card charges.";
                                        readonly type: "string";
                                        readonly examples: readonly ["S781317595"];
                                    };
                                };
                                readonly required: readonly ["type"];
                                readonly title: "payment_method_general_request";
                                readonly type: "object";
                            }];
                            readonly title: "charge_request_payment_method";
                        };
                        readonly reference_id: {
                            readonly description: "Custom reference to add to the charge";
                            readonly type: "string";
                            readonly examples: readonly ["string"];
                        };
                    };
                    readonly required: readonly ["payment_method"];
                    readonly title: "charges";
                    readonly type: "object";
                };
                readonly type: "array";
            };
            readonly checkout: {
                readonly description: "[Checkout](https://developers.conekta.com/v2.1.0/reference/payment-link) details\n";
                readonly properties: {
                    readonly allowed_payment_methods: {
                        readonly description: "Are the payment methods available for this link";
                        readonly items: {
                            readonly type: "string";
                        };
                        readonly type: "array";
                        readonly examples: readonly ["cash", "card", "bank_transfer"];
                    };
                    readonly expires_at: {
                        readonly description: "Unix timestamp of checkout expiration";
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                    readonly failure_url: {
                        readonly description: "Redirection url back to the site in case of failed payment, applies only to HostedPayment.";
                        readonly type: "string";
                    };
                    readonly monthly_installments_enabled: {
                        readonly type: "boolean";
                        readonly examples: readonly [false];
                    };
                    readonly monthly_installments_options: {
                        readonly items: {
                            readonly format: "int8";
                            readonly type: "integer";
                            readonly minimum: -128;
                            readonly maximum: 127;
                        };
                        readonly type: "array";
                        readonly examples: readonly [3, 6, 12];
                    };
                    readonly name: {
                        readonly description: "Reason for payment";
                        readonly type: "string";
                    };
                    readonly on_demand_enabled: {
                        readonly type: "boolean";
                        readonly examples: readonly [true];
                    };
                    readonly redirection_time: {
                        readonly description: "number of seconds to wait before redirecting to the success_url";
                        readonly format: "int8";
                        readonly type: "integer";
                        readonly examples: readonly [10];
                        readonly minimum: -128;
                        readonly maximum: 127;
                    };
                    readonly success_url: {
                        readonly description: "Redirection url back to the site in case of successful payment, applies only to HostedPayment";
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly description: "This field represents the type of checkout";
                        readonly type: "string";
                        readonly examples: readonly ["Integration"];
                    };
                };
                readonly required: readonly ["allowed_payment_methods"];
                readonly title: "order_checkout_request";
                readonly type: "object";
            };
            readonly currency: {
                readonly description: "Currency with which the payment will be made. It uses the 3-letter code of the [International Standard ISO 4217.](https://es.wikipedia.org/wiki/ISO_4217)";
                readonly maxLength: 3;
                readonly type: "string";
                readonly examples: readonly ["MXN"];
            };
            readonly customer_info: {
                readonly description: "Customer information";
                readonly oneOf: readonly [{
                    readonly properties: {
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["DevTest"];
                        };
                        readonly email: {
                            readonly format: "email";
                            readonly type: "string";
                            readonly examples: readonly ["test@conekta.com"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["5522997233"];
                        };
                        readonly corporate: {
                            readonly type: "boolean";
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["customer_info"];
                        };
                    };
                    readonly required: readonly ["email", "name", "phone"];
                    readonly title: "customer_info";
                    readonly type: "object";
                }, {
                    readonly properties: {
                        readonly customer_id: {
                            readonly type: "string";
                            readonly examples: readonly ["cus_23874283647"];
                        };
                    };
                    readonly required: readonly ["customer_id"];
                    readonly title: "customer_info_customer_id";
                    readonly type: "object";
                }];
            };
            readonly discount_lines: {
                readonly description: "List of [discounts](https://developers.conekta.com/v2.1.0/reference/orderscreatediscountline) that are applied to the order. You must have at least one discount.";
                readonly items: {
                    readonly description: "List of discounts that apply to the order.";
                    readonly properties: {
                        readonly amount: {
                            readonly description: "The amount to be deducted from the total sum of all payments, in cents.";
                            readonly format: "int64";
                            readonly minimum: 0;
                            readonly type: "integer";
                            readonly examples: readonly [500];
                            readonly maximum: 9223372036854776000;
                        };
                        readonly code: {
                            readonly description: "Discount code.";
                            readonly type: "string";
                            readonly examples: readonly ["123"];
                        };
                        readonly type: {
                            readonly description: "It can be 'loyalty', 'campaign', 'coupon' o 'sign'";
                            readonly type: "string";
                            readonly examples: readonly ["loyalty"];
                        };
                    };
                    readonly required: readonly ["amount", "code", "type"];
                    readonly title: "order_discount_lines_request";
                    readonly type: "object";
                };
                readonly type: "array";
            };
            readonly fiscal_entity: {
                readonly description: "Fiscal entity of the order, Currently it is a purely informative field";
                readonly properties: {
                    readonly address: {
                        readonly description: "Address of the fiscal entity";
                        readonly properties: {
                            readonly street1: {
                                readonly description: "Street name and number";
                                readonly type: "string";
                                readonly examples: readonly ["Nuevo Leon 254"];
                            };
                            readonly street2: {
                                readonly description: "Street name and number";
                                readonly type: readonly ["string", "null"];
                                readonly examples: readonly ["Departamento 404"];
                            };
                            readonly postal_code: {
                                readonly description: "Postal code";
                                readonly type: "string";
                                readonly examples: readonly ["06100"];
                            };
                            readonly city: {
                                readonly description: "City";
                                readonly type: "string";
                                readonly examples: readonly ["Ciudad de Mexico"];
                            };
                            readonly state: {
                                readonly description: "State";
                                readonly type: "string";
                                readonly examples: readonly ["Ciudad de Mexico"];
                            };
                            readonly country: {
                                readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                readonly type: "string";
                                readonly examples: readonly ["MX"];
                            };
                            readonly external_number: {
                                readonly description: "External number";
                                readonly type: "string";
                                readonly examples: readonly ["123"];
                            };
                        };
                        readonly required: readonly ["city", "country", "external_number", "postal_code", "street1"];
                        readonly title: "order_fiscal_entity_address_request";
                        readonly type: "object";
                    };
                    readonly email: {
                        readonly description: "Email of the fiscal entity";
                        readonly type: "string";
                        readonly examples: readonly ["test@gmail.com"];
                    };
                    readonly metadata: {
                        readonly additionalProperties: true;
                        readonly description: "Metadata associated with the fiscal entity";
                        readonly maxProperties: 100;
                        readonly type: "object";
                    };
                    readonly name: {
                        readonly description: "Name of the fiscal entity";
                        readonly type: readonly ["string", "null"];
                        readonly examples: readonly ["Conekta Inc"];
                    };
                    readonly phone: {
                        readonly description: "Phone of the fiscal entity";
                        readonly type: "string";
                        readonly examples: readonly ["+525511223344"];
                    };
                    readonly tax_id: {
                        readonly description: "Tax ID of the fiscal entity";
                        readonly type: readonly ["string", "null"];
                        readonly examples: readonly ["AAA010101AAA"];
                    };
                };
                readonly required: readonly ["address"];
                readonly title: "order_fiscal_entity_request";
                readonly type: "object";
            };
            readonly line_items: {
                readonly description: "List of [products](https://developers.conekta.com/v2.1.0/reference/orderscreateproduct) that are sold in the order. You must have at least one product.";
                readonly items: {
                    readonly properties: {
                        readonly antifraud_info: {
                            readonly additionalProperties: true;
                            readonly type: "object";
                        };
                        readonly brand: {
                            readonly description: "The brand of the item.";
                            readonly type: "string";
                            readonly examples: readonly ["Cohiba"];
                        };
                        readonly description: {
                            readonly description: "Short description of the item";
                            readonly maxLength: 250;
                            readonly type: "string";
                            readonly examples: readonly ["Imported From Mex."];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly description: "It is a key/value hash that can hold custom fields. Maximum 100 elements and allows special characters.";
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                        readonly name: {
                            readonly description: "The name of the item. It will be displayed in the order.";
                            readonly type: "string";
                            readonly examples: readonly ["Box of Cohiba S1s"];
                        };
                        readonly quantity: {
                            readonly description: "The quantity of the item in the order.";
                            readonly format: "int32";
                            readonly minimum: 1;
                            readonly type: "integer";
                            readonly examples: readonly [1];
                            readonly maximum: 2147483647;
                        };
                        readonly sku: {
                            readonly description: "The stock keeping unit for the item. It is used to identify the item in the order.";
                            readonly type: "string";
                            readonly examples: readonly ["XYZ12345"];
                        };
                        readonly tags: {
                            readonly description: "List of tags for the item. It is used to identify the item in the order.";
                            readonly items: {
                                readonly type: "string";
                                readonly examples: readonly ["string"];
                            };
                            readonly type: "array";
                            readonly examples: readonly ["food", "mexican food"];
                        };
                        readonly unit_price: {
                            readonly description: "The price of the item in cents.";
                            readonly format: "int32";
                            readonly minimum: 0;
                            readonly type: "integer";
                            readonly examples: readonly [20000];
                            readonly maximum: 2147483647;
                        };
                    };
                    readonly required: readonly ["name", "quantity", "unit_price"];
                    readonly title: "product";
                    readonly type: "object";
                };
                readonly type: "array";
            };
            readonly metadata: {
                readonly additionalProperties: true;
                readonly description: "Metadata associated with the order";
                readonly maxProperties: 100;
                readonly type: "object";
            };
            readonly needs_shipping_contact: {
                readonly description: "Allows you to fill out the shipping information at checkout";
                readonly type: "boolean";
                readonly examples: readonly [false];
            };
            readonly pre_authorize: {
                readonly default: false;
                readonly description: "Indicates whether the order charges must be preauthorized";
                readonly type: "boolean";
            };
            readonly processing_mode: {
                readonly description: "Indicates the processing mode for the order, either ecommerce, recurrent or validation.";
                readonly type: "string";
                readonly examples: readonly ["ecommerce"];
            };
            readonly return_url: {
                readonly description: "Indicates the redirection callback upon completion of the 3DS2 flow. Do not use this parameter if your order has a checkout parameter";
                readonly format: "uri";
                readonly type: "string";
                readonly examples: readonly ["https://my-website.com"];
            };
            readonly shipping_contact: {
                readonly description: "[Shipping](https://developers.conekta.com/v2.1.0/reference/createcustomershippingcontacts)\ndetails, required in case of sending a shipping. If we do not receive a shipping_contact on the order, the default shipping_contact of the customer will be used.";
                readonly properties: {
                    readonly phone: {
                        readonly description: "Phone contact";
                        readonly type: "string";
                        readonly examples: readonly ["+525511223344"];
                    };
                    readonly receiver: {
                        readonly description: "Name of the person who will receive the order";
                        readonly type: "string";
                        readonly examples: readonly ["Marvin Fuller"];
                    };
                    readonly between_streets: {
                        readonly description: "The street names between which the order will be delivered.";
                        readonly type: "string";
                        readonly examples: readonly ["Ackerman Crescent"];
                    };
                    readonly address: {
                        readonly description: "Address of the person who will receive the order";
                        readonly properties: {
                            readonly street1: {
                                readonly type: "string";
                                readonly examples: readonly ["Nuevo Leon 254"];
                            };
                            readonly street2: {
                                readonly type: "string";
                                readonly examples: readonly ["Departamento 404"];
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly examples: readonly ["06100"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly examples: readonly ["Ciudad de Mexico"];
                            };
                            readonly state: {
                                readonly type: "string";
                                readonly examples: readonly ["Ciudad de Mexico"];
                            };
                            readonly country: {
                                readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                readonly type: "string";
                                readonly examples: readonly ["MX"];
                            };
                            readonly residential: {
                                readonly type: readonly ["boolean", "null"];
                                readonly examples: readonly [true];
                            };
                        };
                        readonly type: "object";
                    };
                    readonly parent_id: {
                        readonly type: "string";
                        readonly examples: readonly ["string"];
                    };
                    readonly default: {
                        readonly type: readonly ["boolean", "null"];
                        readonly examples: readonly [true];
                    };
                    readonly deleted: {
                        readonly type: readonly ["boolean", "null"];
                        readonly examples: readonly [true];
                    };
                    readonly metadata: {
                        readonly additionalProperties: true;
                        readonly description: "Metadata associated with the shipping contact";
                        readonly maxProperties: 100;
                        readonly type: "object";
                    };
                };
                readonly required: readonly ["address"];
                readonly title: "customer_shipping_contacts_request";
                readonly type: "object";
            };
            readonly shipping_lines: {
                readonly description: "List of [shipping costs](https://developers.conekta.com/v2.1.0/reference/orderscreateshipping). If the online store offers digital products.";
                readonly items: {
                    readonly properties: {
                        readonly amount: {
                            readonly description: "Shipping amount in cents";
                            readonly format: "int64";
                            readonly minimum: 0;
                            readonly type: "integer";
                            readonly examples: readonly [100];
                            readonly maximum: 9223372036854776000;
                        };
                        readonly carrier: {
                            readonly description: "Carrier name for the shipment";
                            readonly type: "string";
                            readonly examples: readonly ["FEDEX"];
                        };
                        readonly tracking_number: {
                            readonly description: "Tracking number can be used to track the shipment";
                            readonly type: "string";
                            readonly examples: readonly ["TRACK123"];
                        };
                        readonly method: {
                            readonly description: "Method of shipment";
                            readonly type: "string";
                            readonly examples: readonly ["Same day"];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly description: "Hash where the user can send additional information for each 'shipping'.";
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                    };
                    readonly required: readonly ["amount"];
                    readonly title: "shipping_request";
                    readonly type: "object";
                };
                readonly type: "array";
            };
            readonly tax_lines: {
                readonly description: "List of [taxes](https://developers.conekta.com/v2.1.0/reference/orderscreatetaxes) that are applied to the order.";
                readonly items: {
                    readonly description: "create new taxes for an existing order";
                    readonly properties: {
                        readonly amount: {
                            readonly description: "The amount to be collected for tax in cents";
                            readonly format: "int64";
                            readonly minimum: 0;
                            readonly type: "integer";
                            readonly examples: readonly [100];
                            readonly maximum: 9223372036854776000;
                        };
                        readonly description: {
                            readonly description: "description or tax's name";
                            readonly minLength: 2;
                            readonly type: "string";
                            readonly examples: readonly ["testing"];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                    };
                    readonly required: readonly ["amount", "description"];
                    readonly type: "object";
                };
                readonly type: "array";
            };
            readonly three_ds_mode: {
                readonly description: "Indicates the 3DS2 mode for the order, either smart or strict.";
                readonly type: "string";
            };
        };
        readonly required: readonly ["currency", "customer_info", "line_items"];
        readonly title: "a order";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "order response";
            readonly properties: {
                readonly amount: {
                    readonly description: "The total amount to be collected in cents";
                    readonly type: "integer";
                    readonly examples: readonly [21605];
                };
                readonly amount_refunded: {
                    readonly description: "The total amount refunded in cents";
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly channel: {
                    readonly properties: {
                        readonly segment: {
                            readonly type: "string";
                            readonly examples: readonly ["Checkout"];
                        };
                        readonly checkout_request_id: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                        };
                        readonly checkout_request_type: {
                            readonly type: "string";
                            readonly examples: readonly ["HostedPayment"];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                        };
                    };
                    readonly type: "object";
                };
                readonly charges: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "charges_data_response";
                                readonly type: "object";
                                readonly properties: {
                                    readonly amount: {
                                        readonly type: "integer";
                                        readonly examples: readonly [4321];
                                    };
                                    readonly channel: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly segment: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Checkout"];
                                            };
                                            readonly checkout_request_id: {
                                                readonly type: "string";
                                                readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                                            };
                                            readonly checkout_request_type: {
                                                readonly type: "string";
                                                readonly examples: readonly ["HostedPayment"];
                                            };
                                            readonly id: {
                                                readonly type: "string";
                                                readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                                            };
                                        };
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1676386026];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly currency: {
                                        readonly type: "string";
                                        readonly examples: readonly ["MXN"];
                                    };
                                    readonly customer_id: {
                                        readonly type: "string";
                                    };
                                    readonly description: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Payment from order"];
                                    };
                                    readonly device_fingerprint: {
                                        readonly type: "string";
                                        readonly examples: readonly ["6FR3chaU4Y1nGAW5NAGd1rcjAKa142Ba"];
                                    };
                                    readonly failure_code: {
                                        readonly type: "string";
                                        readonly examples: readonly ["suspected_fraud"];
                                    };
                                    readonly failure_message: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Este cargo ha sido declinado porque el comportamiento del comprador es sospechoso."];
                                    };
                                    readonly id: {
                                        readonly description: "Charge ID";
                                        readonly type: "string";
                                        readonly examples: readonly ["63efa757cf65380001aec040"];
                                    };
                                    readonly livemode: {
                                        readonly description: "Whether the charge was made in live mode or not";
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["charge"];
                                    };
                                    readonly order_id: {
                                        readonly description: "Order ID";
                                        readonly type: "string";
                                        readonly examples: readonly ["ord_2tN73UdUSNrYRPD9r"];
                                    };
                                    readonly paid_at: {
                                        readonly description: "Payment date";
                                        readonly format: "int64";
                                        readonly type: readonly ["integer", "null"];
                                        readonly examples: readonly [1676390742];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly payment_method: {
                                        readonly discriminator: {
                                            readonly mapping: {
                                                readonly cash_payment: "payment_method_cash";
                                                readonly card_payment: "payment_method_card";
                                                readonly bank_transfer_payment: "payment_method_bank_transfer";
                                            };
                                            readonly propertyName: "object";
                                        };
                                        readonly oneOf: readonly [{
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for cash responses";
                                            readonly title: "charge_data_payment_method_cash_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly auth_code: {
                                                    readonly type: readonly ["integer", "null"];
                                                    readonly examples: readonly [542563];
                                                };
                                                readonly cashier_id: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly examples: readonly ["OINM01010"];
                                                };
                                                readonly reference: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["93000262276908"];
                                                };
                                                readonly barcode_url: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                                                };
                                                readonly expires_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [0];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly service_name: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["OxxoPay"];
                                                };
                                                readonly store: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly examples: readonly ["10MON50EDI"];
                                                };
                                                readonly store_name: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["OXXO"];
                                                };
                                            };
                                        }, {
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for card responses";
                                            readonly title: "charge_data_payment_method_card_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly account_type: {
                                                    readonly description: "Account type of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Credit"];
                                                };
                                                readonly auth_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["867372"];
                                                };
                                                readonly brand: {
                                                    readonly description: "Brand of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["visa"];
                                                };
                                                readonly contract_id: {
                                                    readonly description: "Id sent for recurrent charges.";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["S781317595"];
                                                };
                                                readonly country: {
                                                    readonly description: "Country of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["MX"];
                                                };
                                                readonly exp_month: {
                                                    readonly description: "Expiration month of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["02"];
                                                };
                                                readonly exp_year: {
                                                    readonly description: "Expiration year of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["2026"];
                                                };
                                                readonly fraud_indicators: {
                                                    readonly type: "array";
                                                    readonly items: {};
                                                };
                                                readonly issuer: {
                                                    readonly description: "Issuer of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["BANAMEX"];
                                                };
                                                readonly last4: {
                                                    readonly description: "Last 4 digits of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["4242"];
                                                };
                                                readonly name: {
                                                    readonly description: "Name of the cardholder";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Fulanito Perez"];
                                                };
                                            };
                                        }, {
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for bank transfer responses";
                                            readonly title: "charge_data_payment_method_bank_transfer_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly bank: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["STP"];
                                                };
                                                readonly clabe: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["646180111805034237"];
                                                };
                                                readonly description: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly executed_at: {
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly expires_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [1683053729];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly issuing_account_bank: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_number: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_holder_name: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_tax_id: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly payment_attempts: {
                                                    readonly type: "array";
                                                    readonly items: {};
                                                };
                                                readonly receiving_account_holder_name: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly receiving_account_number: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["646180111805034237"];
                                                };
                                                readonly receiving_account_bank: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["STP"];
                                                };
                                                readonly receiving_account_tax_id: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly reference_number: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly tracking_code: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                        }];
                                        readonly title: "charge_response_payment_method";
                                    };
                                    readonly reference_id: {
                                        readonly description: "Reference ID of the charge";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["ref_2tN73UdUSNrYRPD9r"];
                                    };
                                    readonly refunds: {
                                        readonly title: "charge_response_refunds";
                                        readonly type: readonly ["object", "null"];
                                        readonly description: "page metadata";
                                        readonly required: readonly ["has_more", "object"];
                                        readonly properties: {
                                            readonly has_more: {
                                                readonly description: "Indicates if there are more pages to be requested";
                                                readonly type: "boolean";
                                                readonly examples: readonly [false];
                                            };
                                            readonly object: {
                                                readonly description: "Object type, in this case is list";
                                                readonly type: "string";
                                                readonly examples: readonly ["list"];
                                            };
                                            readonly next_page_url: {
                                                readonly description: "URL of the next page.";
                                                readonly type: readonly ["string", "null"];
                                                readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                                            };
                                            readonly previous_page_url: {
                                                readonly description: "Url of the previous page.";
                                                readonly type: readonly ["string", "null"];
                                                readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                                            };
                                            readonly data: {
                                                readonly description: "refunds";
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly required: readonly ["amount", "created_at", "id", "object"];
                                                    readonly title: "charge_response_refunds_data";
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly amount: {
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [-15000];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly auth_code: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["867372"];
                                                        };
                                                        readonly created_at: {
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [1678226878];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly expires_at: {
                                                            readonly description: "refund expiration date";
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [1678226878];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly id: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["6407b5bee1329a000175ba11"];
                                                        };
                                                        readonly object: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["refund"];
                                                        };
                                                        readonly status: {
                                                            readonly description: "refund status";
                                                            readonly type: "string";
                                                            readonly examples: readonly ["pending"];
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly status: {
                                        readonly type: "string";
                                        readonly examples: readonly ["pending_payment"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly checkout: {
                    readonly properties: {
                        readonly allowed_payment_methods: {
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly type: "array";
                        };
                        readonly can_not_expire: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly emails_sent: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly exclude_card_networks: {
                            readonly items: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly type: "array";
                        };
                        readonly expires_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1676613599];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly failure_url: {
                            readonly type: "string";
                            readonly examples: readonly ["http://187.216.228.66:2222/SysVentasPagos/Acceso.aspx"];
                        };
                        readonly force_3ds_flow: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                        };
                        readonly is_redirect_on_failure: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly livemode: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                        readonly monthly_installments_enabled: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly monthly_installments_options: {
                            readonly items: {
                                readonly format: "int8";
                                readonly type: "integer";
                                readonly minimum: -128;
                                readonly maximum: 127;
                            };
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["ord-2tNDzhA4Akmzj11AS"];
                        };
                        readonly needs_shipping_contact: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["checkout"];
                        };
                        readonly on_demand_enabled: {
                            readonly type: readonly ["boolean", "null"];
                            readonly examples: readonly [true];
                        };
                        readonly paid_payments_count: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly recurrent: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly redirection_time: {
                            readonly description: "number of seconds to wait before redirecting to the success_url";
                            readonly format: "int8";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [2];
                            readonly minimum: -128;
                            readonly maximum: 127;
                        };
                        readonly slug: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a85194c43971ecea35cc519bb"];
                        };
                        readonly sms_sent: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly success_url: {
                            readonly type: "string";
                            readonly examples: readonly ["http://187.216.228.66:2222/SysVentasPagos/Acceso.aspx"];
                        };
                        readonly starts_at: {
                            readonly type: "integer";
                            readonly examples: readonly [1676354400];
                        };
                        readonly status: {
                            readonly type: "string";
                            readonly examples: readonly ["Issued"];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly examples: readonly ["HostedPayment"];
                        };
                        readonly url: {
                            readonly type: "string";
                            readonly examples: readonly ["https://pay.stg.conekta.io/checkout/6fca054a85194c43971ecea35cc519bb"];
                        };
                    };
                    readonly type: "object";
                };
                readonly created_at: {
                    readonly description: "The time at which the object was created in seconds since the Unix epoch";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1676328434];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly description: "The three-letter ISO 4217 currency code. The currency of the order.";
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly customer_info: {
                    readonly type: "object";
                    readonly title: "order_customer_info_response";
                    readonly properties: {
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["customer_info"];
                        };
                        readonly customer_custom_reference: {
                            readonly description: "Custom reference";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["custom_reference"];
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["DevTest"];
                        };
                        readonly email: {
                            readonly format: "email";
                            readonly type: "string";
                            readonly examples: readonly ["test@conekta.com"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["5522997233"];
                        };
                        readonly corporate: {
                            readonly default: false;
                            readonly type: "boolean";
                        };
                        readonly customer_id: {
                            readonly type: "string";
                            readonly examples: readonly ["cus_23874283647"];
                        };
                    };
                };
                readonly discount_lines: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "discount_lines_data_response";
                                readonly description: "List of discounts that apply to the order.";
                                readonly required: readonly ["amount", "code", "id", "object", "parent_id", "type"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly amount: {
                                        readonly description: "The amount to be deducted from the total sum of all payments, in cents.";
                                        readonly format: "int64";
                                        readonly minimum: 0;
                                        readonly type: "integer";
                                        readonly examples: readonly [500];
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly code: {
                                        readonly description: "Discount code.";
                                        readonly type: "string";
                                        readonly examples: readonly ["123"];
                                    };
                                    readonly type: {
                                        readonly description: "It can be 'loyalty', 'campaign', 'coupon' o 'sign'";
                                        readonly type: "string";
                                        readonly examples: readonly ["loyalty"];
                                    };
                                    readonly id: {
                                        readonly description: "The discount line id";
                                        readonly type: "string";
                                        readonly examples: readonly ["dis_lin_2tQQ58HPgPw7StE8z"];
                                    };
                                    readonly object: {
                                        readonly description: "The object name";
                                        readonly type: "string";
                                        readonly examples: readonly ["discount_line"];
                                    };
                                    readonly parent_id: {
                                        readonly description: "The order id";
                                        readonly type: "string";
                                        readonly examples: readonly ["ord_2tPAmKCEJqh8RE6nY"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly fiscal_entity: {
                    readonly description: "Fiscal entity of the order, Currently it is a purely informative field";
                    readonly properties: {
                        readonly address: {
                            readonly description: "Address of the fiscal entity";
                            readonly title: "order_fiscal_entity_address_response";
                            readonly required: readonly ["city", "country", "external_number", "postal_code", "street1"];
                            readonly type: "object";
                            readonly properties: {
                                readonly street1: {
                                    readonly description: "Street name and number";
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly description: "Street name and number";
                                    readonly type: readonly ["string", "null"];
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly description: "Postal code";
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly description: "City";
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly description: "State";
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly external_number: {
                                    readonly description: "External number";
                                    readonly type: "string";
                                    readonly examples: readonly ["123"];
                                };
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["fiscal_entity_address"];
                                };
                            };
                        };
                        readonly email: {
                            readonly description: "Email of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["test@gmail.com"];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly description: "Metadata associated with the fiscal entity";
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                        readonly name: {
                            readonly description: "Name of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["Conekta Inc"];
                        };
                        readonly tax_id: {
                            readonly description: "Tax ID of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["324234234"];
                        };
                        readonly id: {
                            readonly description: "ID of the fiscal entity";
                            readonly type: "string";
                            readonly examples: readonly ["fis_ent_2tN85VYaSMyDvjB3M"];
                        };
                        readonly created_at: {
                            readonly description: "The time at which the object was created in seconds since the Unix epoch";
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1676328434];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["fiscal_entity"];
                        };
                        readonly phone: {
                            readonly description: "Phone of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["+525511223344"];
                        };
                    };
                    readonly required: readonly ["address", "created_at", "id", "object"];
                    readonly title: "order_fiscal_entity_response";
                    readonly type: readonly ["object", "null"];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tMtQQpDvfnNjiuFG"];
                };
                readonly is_refundable: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly line_items: {
                    readonly title: "order_response_products";
                    readonly description: "page metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly next_page_url: {
                            readonly description: "URL of the next page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                        };
                        readonly previous_page_url: {
                            readonly description: "Url of the previous page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "product_data_response";
                                readonly required: readonly ["name", "quantity", "unit_price"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly antifraud_info: {
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly brand: {
                                        readonly description: "The brand of the item.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Cohiba"];
                                    };
                                    readonly description: {
                                        readonly description: "Short description of the item";
                                        readonly maxLength: 250;
                                        readonly type: "string";
                                        readonly examples: readonly ["Imported From Mex."];
                                    };
                                    readonly metadata: {
                                        readonly description: "It is a key/value hash that can hold custom fields. Maximum 100 elements and allows special characters.";
                                        readonly maxProperties: 100;
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly name: {
                                        readonly description: "The name of the item. It will be displayed in the order.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Box of Cohiba S1s"];
                                    };
                                    readonly quantity: {
                                        readonly description: "The quantity of the item in the order.";
                                        readonly format: "int32";
                                        readonly minimum: 1;
                                        readonly type: "integer";
                                        readonly examples: readonly [1];
                                        readonly maximum: 2147483647;
                                    };
                                    readonly sku: {
                                        readonly description: "The stock keeping unit for the item. It is used to identify the item in the order.";
                                        readonly type: "string";
                                        readonly examples: readonly ["XYZ12345"];
                                    };
                                    readonly tags: {
                                        readonly description: "List of tags for the item. It is used to identify the item in the order.";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                        readonly examples: readonly ["food", "mexican food"];
                                    };
                                    readonly unit_price: {
                                        readonly description: "The price of the item in cents.";
                                        readonly format: "int32";
                                        readonly minimum: 0;
                                        readonly type: "integer";
                                        readonly examples: readonly [20000];
                                        readonly maximum: 2147483647;
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                    };
                                    readonly parent_id: {
                                        readonly type: "string";
                                    };
                                };
                            };
                        };
                    };
                };
                readonly livemode: {
                    readonly description: "Whether the object exists in live mode or test mode";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly description: "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.";
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly next_action: {
                    readonly description: "contains the following attributes that will guide to continue the flow";
                    readonly properties: {
                        readonly redirect_to_url: {
                            readonly description: "contains the following attributes that will guide to continue the flow";
                            readonly properties: {
                                readonly url: {
                                    readonly description: "pay.conekta.com/{id} Indicates the url of the Conekta component to authenticate the flow through 3DS2.";
                                    readonly format: "uri";
                                    readonly type: "string";
                                    readonly examples: readonly ["https://pay.conekta.com/6fca054a85194c43971ecea35cc519bb"];
                                };
                                readonly return_url: {
                                    readonly description: "Indicates the url to which the 3DS2 flow returns at the end, when the integration is redirected.";
                                    readonly format: "uri";
                                    readonly type: "string";
                                    readonly examples: readonly ["https://my-website.com\""];
                                };
                            };
                            readonly type: "object";
                        };
                        readonly type: {
                            readonly description: "Indicates the type of action to be taken";
                            readonly type: "string";
                            readonly examples: readonly ["redirect_to_url"];
                        };
                    };
                    readonly title: "order_next_action_response";
                    readonly type: "object";
                };
                readonly object: {
                    readonly description: "String representing the object’s type. Objects of the same type share the same value.";
                    readonly type: "string";
                    readonly examples: readonly ["order"];
                };
                readonly payment_status: {
                    readonly description: "The payment status of the order.";
                    readonly type: "string";
                    readonly examples: readonly ["paid"];
                };
                readonly processing_mode: {
                    readonly description: "Indicates the processing mode for the order, either ecommerce, recurrent or validation.";
                    readonly type: "string";
                    readonly examples: readonly ["ecommerce"];
                };
                readonly shipping_contact: {
                    readonly type: "object";
                    readonly description: "Contains the detail of the shipping addresses that the client has active or has used in Conekta";
                    readonly properties: {
                        readonly created_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1675715413];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["adr_1234567890"];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["shipping_contact"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["+525511223344"];
                        };
                        readonly receiver: {
                            readonly type: "string";
                            readonly examples: readonly ["Marvin Fuller"];
                        };
                        readonly between_streets: {
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["Ackerman Crescent"];
                        };
                        readonly address: {
                            readonly type: "object";
                            readonly properties: {
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["shipping_address"];
                                };
                                readonly street1: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly residential: {
                                    readonly type: readonly ["boolean", "null"];
                                    readonly examples: readonly [true];
                                };
                            };
                        };
                        readonly parent_id: {
                            readonly type: "string";
                        };
                        readonly default: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly metadata: {
                            readonly description: "Metadata associated with the shipping contact";
                            readonly maxProperties: 100;
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                        readonly deleted: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                    };
                };
                readonly updated_at: {
                    readonly description: "The time at which the object was last updated in seconds since the Unix epoch";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1676328434];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
            readonly title: "order_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "402": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreatePayoutOrder: {
    readonly body: {
        readonly description: "a payout order";
        readonly properties: {
            readonly allowed_payout_methods: {
                readonly description: "The payout methods that are allowed for the payout order.";
                readonly items: {
                    readonly type: "string";
                };
                readonly type: "array";
                readonly examples: readonly ["cashout"];
            };
            readonly amount: {
                readonly description: "The amount of the payout order.";
                readonly type: "integer";
                readonly examples: readonly [100];
            };
            readonly currency: {
                readonly default: "MXN";
                readonly description: "The currency in which the payout order is made.";
                readonly type: "string";
                readonly examples: readonly ["MXN"];
            };
            readonly customer_info: {
                readonly properties: {
                    readonly customer_id: {
                        readonly type: "string";
                        readonly examples: readonly ["cus_23874283647"];
                    };
                };
                readonly required: readonly ["customer_id"];
                readonly title: "customer_info_customer_id";
                readonly type: "object";
            };
            readonly metadata: {
                readonly additionalProperties: true;
                readonly description: "The metadata of the payout order.";
                readonly maxProperties: 100;
                readonly type: "object";
            };
            readonly payout: {
                readonly description: "The payout information of the payout order.";
                readonly properties: {
                    readonly payout_method: {
                        readonly description: "The payout method of the payout order.";
                        readonly properties: {
                            readonly type: {
                                readonly description: "The type of the payout method.";
                                readonly type: "string";
                                readonly examples: readonly ["cashout"];
                            };
                        };
                        readonly required: readonly ["type"];
                        readonly title: "payout_method";
                        readonly type: "object";
                    };
                };
                readonly required: readonly ["payout_method"];
                readonly title: "payout";
                readonly type: "object";
            };
            readonly reason: {
                readonly description: "The reason for the payout order.";
                readonly type: "string";
                readonly examples: readonly ["Payout order for the customer"];
            };
        };
        readonly required: readonly ["allowed_payout_methods", "amount", "currency", "customer_info", "payout", "reason"];
        readonly title: "payout order request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "payout order model response";
            readonly properties: {
                readonly allowed_payout_methods: {
                    readonly description: "The payout methods that are allowed for the payout order.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly examples: readonly ["cashout"];
                };
                readonly amount: {
                    readonly description: "The amount of the payout order.";
                    readonly type: "integer";
                    readonly examples: readonly [100];
                };
                readonly created_at: {
                    readonly description: "The creation date of the payout order.";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly default: "MXN";
                    readonly description: "The currency in which the payout order is made.";
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly customer_info: {
                    readonly description: "The customer information of the payout order.";
                    readonly required: readonly ["id"];
                    readonly type: "object";
                    readonly title: "order_customer_info_response";
                    readonly properties: {
                        readonly id: {
                            readonly description: "The id of the customer.";
                            readonly type: "string";
                            readonly examples: readonly ["cus_23874283647"];
                        };
                        readonly customer_custom_reference: {
                            readonly description: "Custom reference";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["custom_reference"];
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["DevTest"];
                        };
                        readonly email: {
                            readonly format: "email";
                            readonly type: "string";
                            readonly examples: readonly ["test@conekta.com"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["5522997233"];
                        };
                        readonly corporate: {
                            readonly default: false;
                            readonly type: "boolean";
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["customer_info"];
                        };
                    };
                };
                readonly expires_at: {
                    readonly description: "The expiration date of the payout order.";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly id: {
                    readonly description: "The id of the payout order.";
                    readonly type: "string";
                    readonly examples: readonly ["f2654d66-d740-457a-9a8c-f96b5196f44e"];
                };
                readonly livemode: {
                    readonly description: "The live mode of the payout order.";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly object: {
                    readonly description: "The object of the payout order.";
                    readonly type: "string";
                    readonly examples: readonly ["payout_order"];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly description: "The metadata of the payout order.";
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly payouts: {
                    readonly description: "The payout information of the payout order.";
                    readonly items: {
                        readonly properties: {
                            readonly amount: {
                                readonly description: "The amount of the payout.";
                                readonly type: "integer";
                                readonly examples: readonly [3000];
                            };
                            readonly currency: {
                                readonly description: "The currency in which the payout is made.";
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                            readonly expires_at: {
                                readonly description: "The expiration date of the payout.";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1677626837];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly id: {
                                readonly description: "The id of the payout.";
                                readonly type: "string";
                                readonly examples: readonly ["payout_2vZwsRAhhGp2dFDJx"];
                            };
                            readonly livemode: {
                                readonly description: "The live mode of the payout.";
                                readonly type: "boolean";
                                readonly examples: readonly [true];
                            };
                            readonly object: {
                                readonly description: "The object of the payout.";
                                readonly type: "string";
                                readonly examples: readonly ["payout"];
                            };
                            readonly payout_order_id: {
                                readonly description: "The id of the payout order.";
                                readonly type: "string";
                                readonly examples: readonly ["f2654d66-d740-457a-9a8c-f96b5196f44e"];
                            };
                            readonly status: {
                                readonly description: "The status of the payout.";
                                readonly type: "string";
                                readonly examples: readonly ["open"];
                            };
                        };
                        readonly required: readonly ["amount", "currency", "id", "livemode", "object"];
                        readonly title: "payout_order_payouts_item";
                        readonly type: "object";
                    };
                    readonly title: "payout_order_payouts";
                    readonly type: "array";
                };
                readonly reason: {
                    readonly description: "The reason for the payout order.";
                    readonly type: "string";
                    readonly examples: readonly ["Payout order for the customer"];
                };
                readonly status: {
                    readonly description: "The status of the payout order.";
                    readonly type: "string";
                    readonly examples: readonly ["open"];
                };
                readonly updated_at: {
                    readonly description: "The update date of the payout order.";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
            readonly required: readonly ["allowed_payout_methods", "amount", "created_at", "currency", "customer_info", "id", "livemode", "object", "payouts", "reason", "updated_at"];
            readonly title: "payout_order_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "402": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreatePlan: {
    readonly body: {
        readonly description: "a plan";
        readonly properties: {
            readonly amount: {
                readonly description: "The amount in cents that will be charged on the interval specified.";
                readonly minimum: 1;
                readonly type: "integer";
                readonly examples: readonly [10000];
            };
            readonly currency: {
                readonly description: "ISO 4217 for currencies, for the Mexican peso it is MXN/USD";
                readonly maxLength: 3;
                readonly type: "string";
                readonly examples: readonly ["MXN"];
            };
            readonly expiry_count: {
                readonly description: "Number of repetitions of the frequency NUMBER OF CHARGES TO BE MADE, considering the interval and frequency, this evolves over time, but is subject to the expiration count.";
                readonly type: "integer";
                readonly examples: readonly [12];
            };
            readonly frequency: {
                readonly description: "Frequency of the charge, which together with the interval, can be every 3 weeks, every 4 months, every 2 years, every 5 fortnights";
                readonly minimum: 1;
                readonly type: "integer";
                readonly examples: readonly [1];
            };
            readonly id: {
                readonly description: "internal reference id";
                readonly type: "string";
                readonly examples: readonly ["plan_24234"];
            };
            readonly interval: {
                readonly description: "The interval of time between each charge.";
                readonly enum: readonly ["week", "half_month", "month", "year"];
                readonly type: readonly ["string", "null"];
            };
            readonly name: {
                readonly description: "The name of the plan.";
                readonly type: "string";
                readonly examples: readonly ["Extra Plan3"];
            };
            readonly trial_period_days: {
                readonly description: "The number of days the customer will have a free trial.";
                readonly type: "integer";
                readonly examples: readonly [0];
            };
        };
        readonly required: readonly ["amount", "frequency", "interval", "name"];
        readonly title: "a plan";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "plans model";
            readonly properties: {
                readonly amount: {
                    readonly type: "integer";
                    readonly examples: readonly [10000];
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1666900846];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly maxLength: 3;
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly expiry_count: {
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [12];
                };
                readonly frequency: {
                    readonly type: "integer";
                    readonly examples: readonly [1];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["gold-plan"];
                };
                readonly interval: {
                    readonly type: "string";
                    readonly examples: readonly ["month"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly name: {
                    readonly type: "string";
                    readonly examples: readonly ["Extra Plan3"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["plan"];
                };
                readonly trial_period_days: {
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [0];
                };
            };
            readonly title: "plan_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateRuleBlacklist: {
    readonly body: {
        readonly properties: {
            readonly description: {
                readonly description: "Description of the rule";
                readonly type: "string";
                readonly examples: readonly ["this client email was verified at 20/09/22 by internal process"];
            };
            readonly field: {
                readonly description: "Field to be used for the rule";
                readonly type: "string";
                readonly examples: readonly ["email | phone | card_token"];
            };
            readonly value: {
                readonly description: "Value to be used for the rule";
                readonly type: "string";
                readonly examples: readonly ["email@example.com | 818081808180 | src_2qUCNd5AyQqfPMBuV"];
            };
        };
        readonly required: readonly ["description", "field", "value"];
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly properties: {
                readonly id: {
                    readonly description: "Blacklist rule id";
                    readonly type: "string";
                    readonly examples: readonly ["2fw8EWJusiRrxdPzT"];
                };
                readonly field: {
                    readonly description: "field used for blacklists rule";
                    readonly type: "string";
                    readonly examples: readonly ["email"];
                };
                readonly value: {
                    readonly description: "value used for blacklists rule";
                    readonly type: "string";
                    readonly examples: readonly ["email@example.com"];
                };
                readonly description: {
                    readonly description: "use an description for blacklisted rule";
                    readonly type: "string";
                    readonly examples: readonly ["secure customer example@example.com"];
                };
            };
            readonly title: "blacklist_rule_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateRuleWhitelist: {
    readonly body: {
        readonly properties: {
            readonly description: {
                readonly description: "Description of the rule";
                readonly type: "string";
                readonly examples: readonly ["this client email was verified at 20/09/22 by internal process"];
            };
            readonly field: {
                readonly description: "Field to be used for the rule";
                readonly type: "string";
                readonly examples: readonly ["email | phone | card_token"];
            };
            readonly value: {
                readonly description: "Value to be used for the rule";
                readonly type: "string";
                readonly examples: readonly ["email@example.com | 818081808180 | src_2qUCNd5AyQqfPMBuV"];
            };
        };
        readonly required: readonly ["description", "field", "value"];
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly properties: {
                readonly id: {
                    readonly description: "Whitelist rule id";
                    readonly type: "string";
                    readonly examples: readonly ["2fw8EWJusiRrxdPzT"];
                };
                readonly field: {
                    readonly description: "field used for whitelists rule";
                    readonly type: "string";
                    readonly examples: readonly ["email"];
                };
                readonly value: {
                    readonly description: "value used for whitelists rule";
                    readonly type: "string";
                    readonly examples: readonly ["email@example.com"];
                };
                readonly description: {
                    readonly description: "use an description for whitelisted rule";
                    readonly type: "string";
                    readonly examples: readonly ["banned customer example@example.com"];
                };
            };
            readonly title: "whitelistlist_rule_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateSubscription: {
    readonly body: {
        readonly description: "It is a parameter that allows to identify in the response, the detailed content of the plans to which the client has subscribed";
        readonly properties: {
            readonly plan_id: {
                readonly type: "string";
                readonly examples: readonly ["f84gdgf5g48r15fd21g8w424fd1"];
            };
            readonly card_id: {
                readonly type: "string";
                readonly examples: readonly ["src_2qUCNd5AyQqfPMBuV"];
            };
            readonly trial_end: {
                readonly type: "integer";
                readonly examples: readonly [1484040996];
            };
        };
        readonly required: readonly ["plan_id"];
        readonly title: "subscription_request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "subscription model";
            readonly properties: {
                readonly billing_cycle_start: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626827];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly billing_cycle_end: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626827];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly canceled_at: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1678258162];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly canceled_reason: {
                    readonly description: "Reason for cancellation. This field appears when the subscription status is 'canceled'.";
                    readonly type: "string";
                    readonly examples: readonly ["user_cancelation"];
                };
                readonly card_id: {
                    readonly type: "string";
                    readonly examples: readonly ["src_2tKcHxhTz7xU5SymL"];
                };
                readonly charge_id: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["2tKcHxhTz7xU5SymL"];
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly customer_custom_reference: {
                    readonly type: "string";
                    readonly examples: readonly ["dotnet_123456"];
                };
                readonly customer_id: {
                    readonly type: "string";
                    readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["gold-plan"];
                };
                readonly last_billing_cycle_order_id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tSoMP7bZJbLiq4z8"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["subscription"];
                };
                readonly paused_at: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1678258162];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly plan_id: {
                    readonly type: "string";
                    readonly examples: readonly ["plan_2tXx672QLQ68CkmMn"];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["past_due"];
                };
                readonly subscription_start: {
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                };
                readonly trial_start: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly trial_end: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
            readonly title: "subscription_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateToken: {
    readonly body: {
        readonly description: "a token";
        readonly properties: {
            readonly card: {
                readonly properties: {
                    readonly cvc: {
                        readonly description: "It is a value that allows identifying the security code of the card.";
                        readonly maxLength: 4;
                        readonly type: "string";
                        readonly examples: readonly ["123"];
                    };
                    readonly device_fingerprint: {
                        readonly description: "It is a value that allows identifying the device fingerprint.";
                        readonly type: "string";
                        readonly examples: readonly ["zptcxk4p6w1ijwz85snf1l3bqe5g09ie"];
                    };
                    readonly exp_month: {
                        readonly description: "It is a value that allows identifying the expiration month of the card.";
                        readonly maxLength: 2;
                        readonly type: "string";
                        readonly examples: readonly ["12"];
                    };
                    readonly exp_year: {
                        readonly description: "It is a value that allows identifying the expiration year of the card.";
                        readonly maxLength: 2;
                        readonly type: "string";
                        readonly examples: readonly ["26"];
                    };
                    readonly name: {
                        readonly description: "It is a value that allows identifying the name of the cardholder.";
                        readonly type: "string";
                        readonly examples: readonly ["Miguel"];
                    };
                    readonly number: {
                        readonly description: "It is a value that allows identifying the number of the card.";
                        readonly type: "string";
                        readonly examples: readonly ["4242424242424242"];
                    };
                };
                readonly required: readonly ["cvc", "exp_month", "exp_year", "name", "number"];
                readonly type: readonly ["object", "null"];
            };
            readonly checkout: {
                readonly deprecated: true;
                readonly properties: {
                    readonly returns_control_on: {
                        readonly description: "It is a value that allows identifying the returns control on.";
                        readonly type: "string";
                        readonly examples: readonly ["Token"];
                    };
                };
                readonly type: readonly ["object", "null"];
            };
        };
        readonly title: "token request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "token response";
            readonly properties: {
                readonly checkout: {
                    readonly deprecated: true;
                    readonly properties: {
                        readonly allowed_payment_methods: {
                            readonly items: {
                                readonly type: "string";
                                readonly examples: readonly ["card"];
                            };
                            readonly type: "array";
                        };
                        readonly can_not_expire: {
                            readonly description: "Indicates if the checkout can not expire.";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly emails_sent: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly exclude_card_networks: {
                            readonly items: {
                                readonly type: "string";
                                readonly examples: readonly ["visa"];
                            };
                            readonly type: "array";
                        };
                        readonly expires_at: {
                            readonly description: "Date and time when the checkout expires.";
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1675715413];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly failure_url: {
                            readonly description: "URL to redirect the customer to if the payment process fails.";
                            readonly type: "string";
                            readonly examples: readonly ["https://example.com/failure"];
                        };
                        readonly force_3ds_flow: {
                            readonly description: "Indicates if the checkout forces the 3DS flow.";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["524f9d2f-8c2e-4e64-a33d-6006711a91bd"];
                        };
                        readonly livemode: {
                            readonly type: "boolean";
                            readonly examples: readonly [true];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly type: "object";
                        };
                        readonly monthly_installments_enabled: {
                            readonly description: "Indicates if the checkout allows monthly installments.";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly monthly_installments_options: {
                            readonly description: "List of monthly installments options.";
                            readonly items: {
                                readonly type: "integer";
                                readonly examples: readonly [3];
                            };
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["tok-2toNoPZpJgRU4PvgZ"];
                        };
                        readonly needs_shipping_contact: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Indicates the type of object, in this case checkout.";
                            readonly type: "string";
                            readonly examples: readonly ["checkout"];
                        };
                        readonly on_demand_enabled: {
                            readonly description: "Indicates if the checkout allows on demand payments.";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly paid_payments_count: {
                            readonly description: "Number of payments that have been paid.";
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly recurrent: {
                            readonly description: "Indicates if the checkout is recurrent.";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly sms_sent: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly starts_at: {
                            readonly description: "Date and time when the checkout starts.";
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1675715413];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly status: {
                            readonly description: "Status of the checkout.";
                            readonly type: "string";
                            readonly examples: readonly ["Issued"];
                        };
                        readonly success_url: {
                            readonly description: "URL to redirect the customer to after the payment process is completed.";
                            readonly type: "string";
                            readonly examples: readonly ["https://example.com/success"];
                        };
                        readonly type: {
                            readonly description: "Type of checkout.";
                            readonly type: "string";
                            readonly examples: readonly ["Integration"];
                        };
                    };
                    readonly type: readonly ["object", "null"];
                };
                readonly id: {
                    readonly description: "Unique identifier for the token generated by Conekta.";
                    readonly type: "string";
                    readonly examples: readonly ["cus_2tHJfJ79KyUwpxTik"];
                };
                readonly livemode: {
                    readonly description: "Indicates whether the token is in live mode or test mode.";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly object: {
                    readonly description: "Indicates the type of object, in this case token";
                    readonly type: "string";
                    readonly examples: readonly ["token"];
                };
                readonly used: {
                    readonly description: "Indicates if the token has been used";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
            };
            readonly required: readonly ["id", "livemode", "object", "used"];
            readonly title: "token response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateWebhook: {
    readonly body: {
        readonly description: "a webhook";
        readonly properties: {
            readonly url: {
                readonly description: "Here you must place the URL of your Webhook remember that you must program what you will do with the events received. Also do not forget to handle the HTTPS protocol for greater security.";
                readonly format: "url";
                readonly pattern: "^(?!.*(localhost|127\\.0\\.0\\.1)).*$";
                readonly type: "string";
                readonly examples: readonly ["https://webhook.site/89277eaa-a8e4-4306-8dc5-f55c80703dc8"];
            };
            readonly synchronous: {
                readonly default: false;
                readonly description: "It is a value that allows to decide if the events will be synchronous or asynchronous. We recommend asynchronous = false";
                readonly type: "boolean";
                readonly examples: readonly [false];
            };
        };
        readonly required: readonly ["synchronous", "url"];
        readonly title: "a webhook";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "webhooks model";
            readonly properties: {
                readonly deleted: {
                    readonly type: readonly ["boolean", "null"];
                    readonly examples: readonly [false];
                };
                readonly development_enabled: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["event"];
                };
                readonly production_enabled: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["listening"];
                };
                readonly subscribed_events: {
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly examples: readonly ["charge.created", "charge.paid", "charge.under_fraud_review", "charge.fraudulent", "charge.refunded", "charge.preauthorized", "charge.declined", "charge.canceled", "charge.reversed", "charge.pending_confirmation"];
                };
                readonly synchronous: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly url: {
                    readonly type: "string";
                    readonly examples: readonly ["https://username:password@mockoon.stg.conekta.io/payments-api/cash/merchant_approval"];
                };
            };
            readonly title: "webhook_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const CreateWebhookKey: {
    readonly body: {
        readonly properties: {
            readonly active: {
                readonly default: true;
                readonly description: "Indicates if the webhook key is active";
                readonly type: "boolean";
                readonly examples: readonly [true];
            };
        };
        readonly title: "webhook_key_request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "webhook keys model";
            readonly properties: {
                readonly active: {
                    readonly description: "Indicates if the webhook key is active";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly created_at: {
                    readonly description: "Unix timestamp in seconds with the creation date of the webhook key";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1577836800];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly id: {
                    readonly description: "Unique identifier of the webhook key";
                    readonly type: "string";
                    readonly examples: readonly ["62730ba6fb7dfd6a712f118e"];
                };
                readonly livemode: {
                    readonly description: "Indicates if the webhook key is in live mode";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object name, value is webhook_key";
                    readonly type: "string";
                    readonly examples: readonly ["webhook_key"];
                };
                readonly public_key: {
                    readonly description: "Public key to be used in the webhook";
                    readonly type: "string";
                    readonly examples: readonly ["-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqULpUc6D6mSAq5a0yLY/\\noOjd1mWm6q+QI8y/FI4STr2F+XgKeNnMxSqnyFrHtKQ/ut4Zi45WFnJLfEQL7aW5\\n67yE2dWyo6GaL7yZUfLC0Y3sHPGzaGtvDF36ISW7LliYNoMiA3Bx5/1Sr0G23pGW\\n0Mp8IO1Nlz0sJWuU/d7zCz/UN6cl9g/BP4eaQ7deS56YuWcj5sTlwqFTlwN12kpA\\nIzMZ7gnvYQnZTpPny5lben6QEuxTvZcPApcyOweiESjMnXfkfWOyuYtgMrbsU6oL\\nA6sWa6j0pePW7AYeBqB4tyAlenkCSqzHg8bMk5Bm7hiT6I9Pls774lJbnOYmmuNE\\n8QIDAQAB\\n-----END PUBLIC KEY-----\\n"];
                };
            };
            readonly title: "webhook_key_create_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const DeleteApiKey: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "delete_api_keys_response";
            readonly description: "api keys model";
            readonly type: "object";
            readonly properties: {
                readonly active: {
                    readonly description: "Indicates if the api key is active";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly created_at: {
                    readonly description: "Unix timestamp in seconds of when the api key was created";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1684167881];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly description: {
                    readonly description: "A name or brief explanation of what this api key is used for";
                    readonly type: "string";
                    readonly examples: readonly ["online store"];
                };
                readonly livemode: {
                    readonly description: "Indicates if the api key is in production";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly prefix: {
                    readonly description: "The first few characters of the authentication_token";
                    readonly type: "string";
                    readonly examples: readonly ["key_rp"];
                };
                readonly id: {
                    readonly description: "Unique identifier of the api key";
                    readonly type: "string";
                    readonly examples: readonly ["64625cc9f3e02c00163f5e4d"];
                };
                readonly object: {
                    readonly description: "Object name, value is 'api_key'";
                    readonly type: "string";
                    readonly examples: readonly ["api_key"];
                };
                readonly deleted: {
                    readonly description: "Indicates if the api key was deleted";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly role: {
                    readonly description: "Indicates if the api key is private or public";
                    readonly type: "string";
                    readonly examples: readonly ["private"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const DeleteCustomerById: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "customer response";
            readonly properties: {
                readonly antifraud_info: {
                    readonly properties: {
                        readonly first_paid_at: {
                            readonly type: "integer";
                            readonly examples: readonly [1485151007];
                        };
                        readonly account_created_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1484040996];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                    };
                    readonly title: "customer_antifraud_info_response";
                    readonly type: readonly ["object", "null"];
                };
                readonly corporate: {
                    readonly description: "true if the customer is a company";
                    readonly type: "boolean";
                };
                readonly created_at: {
                    readonly description: "Creation date of the object";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1485151007];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly custom_reference: {
                    readonly description: "Custom reference";
                    readonly type: "string";
                    readonly examples: readonly ["custom_reference"];
                };
                readonly default_fiscal_entity_id: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["fis_ent_2tKqqAfqPi21oCmEJ"];
                };
                readonly default_shipping_contact_id: {
                    readonly type: "string";
                    readonly examples: readonly ["ship_cont_2tKZsTYcsryyu7Ah8"];
                };
                readonly default_payment_source_id: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["src_2tHJfJ79KyUwpxTio"];
                };
                readonly email: {
                    readonly format: "email";
                    readonly type: "string";
                    readonly examples: readonly ["Felipe@gmail.com"];
                };
                readonly fiscal_entities: {
                    readonly title: "customer_fiscal_entities_response";
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "customer_fiscal_entities_data_response";
                                readonly required: readonly ["address", "created_at", "id", "object"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly address: {
                                        readonly required: readonly ["city", "postal_code", "street1"];
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly street1: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Nuevo Leon 254"];
                                            };
                                            readonly street2: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Departamento 404"];
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly examples: readonly ["06100"];
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly state: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly country: {
                                                readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                                readonly type: "string";
                                                readonly examples: readonly ["MX"];
                                            };
                                            readonly residential: {
                                                readonly default: false;
                                                readonly type: "boolean";
                                                readonly examples: readonly [true];
                                            };
                                            readonly external_number: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly tax_id: {
                                        readonly type: "string";
                                    };
                                    readonly email: {
                                        readonly type: "string";
                                    };
                                    readonly phone: {
                                        readonly type: "string";
                                    };
                                    readonly metadata: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "object";
                                            readonly additionalProperties: true;
                                        };
                                    };
                                    readonly company_name: {
                                        readonly type: "string";
                                        readonly examples: readonly ["conekta"];
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["ship_cont_2tKZsTYcsryyu7Ah8"];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["shipping_contact"];
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1675715413];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly parent_id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                                    };
                                    readonly default: {
                                        readonly type: "boolean";
                                    };
                                };
                            };
                        };
                    };
                };
                readonly id: {
                    readonly description: "Customer's ID";
                    readonly type: "string";
                    readonly examples: readonly ["cus_2tHJfJ79KyUwpxTik"];
                };
                readonly livemode: {
                    readonly description: "true if the object exists in live mode or the value false if the object exists in test mode";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly name: {
                    readonly description: "Customer's name";
                    readonly type: "string";
                    readonly examples: readonly ["Felipe"];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["customer"];
                };
                readonly payment_sources: {
                    readonly title: "customer_payment_methods_response";
                    readonly description: "page metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly next_page_url: {
                            readonly description: "URL of the next page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                        };
                        readonly previous_page_url: {
                            readonly description: "Url of the previous page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                        };
                        readonly data: {
                            readonly title: "customer_payment_methods_data";
                            readonly type: "array";
                            readonly items: {
                                readonly discriminator: {
                                    readonly mapping: {
                                        readonly cash: "payment_method_cash_response";
                                        readonly card: "payment_method_card_response";
                                        readonly oxxo_recurrent: "payment_method_cash_response";
                                        readonly spei_recurrent: "payment_method_spei_recurrent";
                                    };
                                    readonly propertyName: "type";
                                };
                                readonly oneOf: readonly [{
                                    readonly required: readonly ["created_at", "id", "object", "type"];
                                    readonly type: "object";
                                    readonly description: "use for cash responses";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                        };
                                        readonly id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["payment_source"];
                                        };
                                        readonly created_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [1675715413];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly parent_id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                        };
                                        readonly reference: {
                                            readonly type: "string";
                                            readonly examples: readonly ["93000262276908"];
                                        };
                                        readonly barcode: {
                                            readonly type: "string";
                                            readonly examples: readonly ["93000262276908"];
                                        };
                                        readonly barcode_url: {
                                            readonly type: "string";
                                            readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                                        };
                                        readonly expires_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [0];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly provider: {
                                            readonly type: "string";
                                            readonly examples: readonly ["Oxxo"];
                                        };
                                    };
                                }, {
                                    readonly required: readonly ["created_at", "id", "object", "type"];
                                    readonly type: "object";
                                    readonly description: "use for card responses";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                        };
                                        readonly id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["payment_source"];
                                        };
                                        readonly created_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [1675715413];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly parent_id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                        };
                                        readonly last4: {
                                            readonly type: "string";
                                            readonly examples: readonly ["6410"];
                                        };
                                        readonly bin: {
                                            readonly type: "string";
                                            readonly examples: readonly ["40276657"];
                                        };
                                        readonly card_type: {
                                            readonly type: "string";
                                            readonly examples: readonly ["debit"];
                                        };
                                        readonly exp_month: {
                                            readonly type: "string";
                                            readonly examples: readonly ["10"];
                                        };
                                        readonly exp_year: {
                                            readonly type: "string";
                                            readonly examples: readonly ["25"];
                                        };
                                        readonly brand: {
                                            readonly type: "string";
                                            readonly examples: readonly ["visa"];
                                        };
                                        readonly name: {
                                            readonly type: "string";
                                            readonly examples: readonly ["Fulano Perez\""];
                                        };
                                        readonly default: {
                                            readonly type: "boolean";
                                        };
                                        readonly visible_on_checkout: {
                                            readonly type: "boolean";
                                        };
                                        readonly payment_source_status: {
                                            readonly type: "string";
                                            readonly examples: readonly ["active"];
                                        };
                                    };
                                }, {
                                    readonly required: readonly ["created_at", "id", "object", "type"];
                                    readonly type: "object";
                                    readonly description: "use for spei responses";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                        };
                                        readonly id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["payment_source"];
                                        };
                                        readonly created_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [1675715413];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly parent_id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                        };
                                        readonly reference: {
                                            readonly type: "string";
                                            readonly examples: readonly ["93000262276908"];
                                        };
                                        readonly expires_at: {
                                            readonly type: "string";
                                            readonly examples: readonly ["none"];
                                        };
                                    };
                                }];
                                readonly title: "customer_payment_methods_data";
                            };
                        };
                    };
                };
                readonly phone: {
                    readonly description: "Customer's phone number";
                    readonly type: "string";
                    readonly examples: readonly ["+5215555555555"];
                };
                readonly shipping_contacts: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "customer_shipping_contacts_data_response";
                                readonly description: "[Shipping](https://developers.conekta.com/v2.1.0/reference/createcustomershippingcontacts)\ndetails, required in case of sending a shipping. If we do not receive a shipping_contact on the order, the default shipping_contact of the customer will be used.";
                                readonly required: readonly ["address", "created_at", "id", "object"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly phone: {
                                        readonly description: "Phone contact";
                                        readonly type: "string";
                                        readonly examples: readonly ["+525511223344"];
                                    };
                                    readonly receiver: {
                                        readonly description: "Name of the person who will receive the order";
                                        readonly type: "string";
                                        readonly examples: readonly ["Marvin Fuller"];
                                    };
                                    readonly between_streets: {
                                        readonly description: "The street names between which the order will be delivered.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Ackerman Crescent"];
                                    };
                                    readonly address: {
                                        readonly description: "Address of the person who will receive the order";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly street1: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Nuevo Leon 254"];
                                            };
                                            readonly street2: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Departamento 404"];
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly examples: readonly ["06100"];
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly state: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly country: {
                                                readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                                readonly type: "string";
                                                readonly examples: readonly ["MX"];
                                            };
                                            readonly residential: {
                                                readonly type: readonly ["boolean", "null"];
                                                readonly examples: readonly [true];
                                            };
                                        };
                                    };
                                    readonly parent_id: {
                                        readonly type: "string";
                                    };
                                    readonly default: {
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly deleted: {
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly metadata: {
                                        readonly description: "Metadata associated with the shipping contact";
                                        readonly maxProperties: 100;
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["ship_cont_2tKZsTYcsryyu7Ah8"];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["shipping_contact"];
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1675715413];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                };
                            };
                        };
                    };
                };
                readonly subscription: {
                    readonly description: "subscription model";
                    readonly properties: {
                        readonly billing_cycle_start: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1677626827];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly billing_cycle_end: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1677626827];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly canceled_at: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1678258162];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly canceled_reason: {
                            readonly description: "Reason for cancellation. This field appears when the subscription status is 'canceled'.";
                            readonly type: "string";
                            readonly examples: readonly ["user_cancelation"];
                        };
                        readonly card_id: {
                            readonly type: "string";
                            readonly examples: readonly ["src_2tKcHxhTz7xU5SymL"];
                        };
                        readonly charge_id: {
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["2tKcHxhTz7xU5SymL"];
                        };
                        readonly created_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1677626837];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly customer_custom_reference: {
                            readonly type: "string";
                            readonly examples: readonly ["dotnet_123456"];
                        };
                        readonly customer_id: {
                            readonly type: "string";
                            readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["gold-plan"];
                        };
                        readonly last_billing_cycle_order_id: {
                            readonly type: "string";
                            readonly examples: readonly ["ord_2tSoMP7bZJbLiq4z8"];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["subscription"];
                        };
                        readonly paused_at: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1678258162];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly plan_id: {
                            readonly type: "string";
                            readonly examples: readonly ["plan_2tXx672QLQ68CkmMn"];
                        };
                        readonly status: {
                            readonly type: "string";
                            readonly examples: readonly ["past_due"];
                        };
                        readonly subscription_start: {
                            readonly type: "integer";
                            readonly examples: readonly [1677626837];
                        };
                        readonly trial_start: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1677626837];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly trial_end: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1677626837];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                    };
                    readonly title: "subscription_response";
                    readonly type: "object";
                };
            };
            readonly required: readonly ["created_at", "id", "livemode", "name", "object"];
            readonly title: "customer response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const DeleteCustomerPaymentMethods: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
                readonly payment_method_id: {
                    readonly type: "string";
                    readonly examples: readonly ["src_2tQ974hSHcsdeSZHG"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the payment method";
                };
            };
            readonly required: readonly ["id", "payment_method_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly discriminator: {
                readonly mapping: {
                    readonly cash: "payment_method_cash_response";
                    readonly card: "payment_method_card_response";
                    readonly oxxo_recurrent: "payment_method_cash_response";
                    readonly spei_recurrent: "payment_method_spei_recurrent";
                };
                readonly propertyName: "type";
            };
            readonly oneOf: readonly [{
                readonly required: readonly ["created_at", "id", "object", "type"];
                readonly type: "object";
                readonly description: "use for cash responses";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                    };
                    readonly id: {
                        readonly type: "string";
                        readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                    };
                    readonly object: {
                        readonly type: "string";
                        readonly examples: readonly ["payment_source"];
                    };
                    readonly created_at: {
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly examples: readonly [1675715413];
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                    readonly parent_id: {
                        readonly type: "string";
                        readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                    };
                    readonly reference: {
                        readonly type: "string";
                        readonly examples: readonly ["93000262276908"];
                    };
                    readonly barcode: {
                        readonly type: "string";
                        readonly examples: readonly ["93000262276908"];
                    };
                    readonly barcode_url: {
                        readonly type: "string";
                        readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                    };
                    readonly expires_at: {
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly examples: readonly [0];
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                    readonly provider: {
                        readonly type: "string";
                        readonly examples: readonly ["Oxxo"];
                    };
                };
            }, {
                readonly required: readonly ["created_at", "id", "object", "type"];
                readonly type: "object";
                readonly description: "use for card responses";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                    };
                    readonly id: {
                        readonly type: "string";
                        readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                    };
                    readonly object: {
                        readonly type: "string";
                        readonly examples: readonly ["payment_source"];
                    };
                    readonly created_at: {
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly examples: readonly [1675715413];
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                    readonly parent_id: {
                        readonly type: "string";
                        readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                    };
                    readonly last4: {
                        readonly type: "string";
                        readonly examples: readonly ["6410"];
                    };
                    readonly bin: {
                        readonly type: "string";
                        readonly examples: readonly ["40276657"];
                    };
                    readonly card_type: {
                        readonly type: "string";
                        readonly examples: readonly ["debit"];
                    };
                    readonly exp_month: {
                        readonly type: "string";
                        readonly examples: readonly ["10"];
                    };
                    readonly exp_year: {
                        readonly type: "string";
                        readonly examples: readonly ["25"];
                    };
                    readonly brand: {
                        readonly type: "string";
                        readonly examples: readonly ["visa"];
                    };
                    readonly name: {
                        readonly type: "string";
                        readonly examples: readonly ["Fulano Perez\""];
                    };
                    readonly default: {
                        readonly type: "boolean";
                    };
                    readonly visible_on_checkout: {
                        readonly type: "boolean";
                    };
                    readonly payment_source_status: {
                        readonly type: "string";
                        readonly examples: readonly ["active"];
                    };
                };
            }, {
                readonly required: readonly ["created_at", "id", "object", "type"];
                readonly type: "object";
                readonly description: "use for spei responses";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                    };
                    readonly id: {
                        readonly type: "string";
                        readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                    };
                    readonly object: {
                        readonly type: "string";
                        readonly examples: readonly ["payment_source"];
                    };
                    readonly created_at: {
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly examples: readonly [1675715413];
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                    readonly parent_id: {
                        readonly type: "string";
                        readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                    };
                    readonly reference: {
                        readonly type: "string";
                        readonly examples: readonly ["93000262276908"];
                    };
                    readonly expires_at: {
                        readonly type: "string";
                        readonly examples: readonly ["none"];
                    };
                };
            }];
            readonly title: "update_customer_payment_methods_response";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const DeleteCustomerShippingContacts: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
                readonly shipping_contacts_id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "identifier";
                };
            };
            readonly required: readonly ["id", "shipping_contacts_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "Contains the detail of the shipping addresses that the client has active or has used in Conekta";
            readonly properties: {
                readonly phone: {
                    readonly type: "string";
                    readonly examples: readonly ["+525511223344"];
                };
                readonly receiver: {
                    readonly type: "string";
                    readonly examples: readonly ["Marvin Fuller"];
                };
                readonly between_streets: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["Ackerman Crescent"];
                };
                readonly address: {
                    readonly properties: {
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["shipping_address"];
                        };
                        readonly street1: {
                            readonly type: "string";
                            readonly examples: readonly ["Nuevo Leon 254"];
                        };
                        readonly street2: {
                            readonly type: "string";
                            readonly examples: readonly ["Departamento 404"];
                        };
                        readonly postal_code: {
                            readonly type: "string";
                            readonly examples: readonly ["06100"];
                        };
                        readonly city: {
                            readonly type: "string";
                            readonly examples: readonly ["Ciudad de Mexico"];
                        };
                        readonly state: {
                            readonly type: "string";
                            readonly examples: readonly ["Ciudad de Mexico"];
                        };
                        readonly country: {
                            readonly type: "string";
                            readonly examples: readonly ["MX"];
                        };
                        readonly residential: {
                            readonly type: readonly ["boolean", "null"];
                            readonly examples: readonly [true];
                        };
                    };
                    readonly type: "object";
                };
                readonly parent_id: {
                    readonly type: "string";
                };
                readonly default: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["adr_1234567890"];
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1675715413];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly description: "Metadata associated with the shipping contact";
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["shipping_contact"];
                };
                readonly deleted: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const DeletePlan: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "plans model";
            readonly properties: {
                readonly amount: {
                    readonly type: "integer";
                    readonly examples: readonly [10000];
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1666900846];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly maxLength: 3;
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly expiry_count: {
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [12];
                };
                readonly frequency: {
                    readonly type: "integer";
                    readonly examples: readonly [1];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["gold-plan"];
                };
                readonly interval: {
                    readonly type: "string";
                    readonly examples: readonly ["month"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly name: {
                    readonly type: "string";
                    readonly examples: readonly ["Extra Plan3"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["plan"];
                };
                readonly trial_period_days: {
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [0];
                };
            };
            readonly title: "plan_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const DeleteRuleBlacklist: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly properties: {
                readonly id: {
                    readonly description: "Blacklist rule id";
                    readonly type: "string";
                    readonly examples: readonly ["2fw8EWJusiRrxdPzT"];
                };
                readonly field: {
                    readonly description: "field used for blacklists rule deleted";
                    readonly type: "string";
                    readonly examples: readonly ["email"];
                };
                readonly value: {
                    readonly description: "value used for blacklists rule deleted";
                    readonly type: "string";
                    readonly examples: readonly ["email@example.com"];
                };
                readonly description: {
                    readonly description: "use an description for blacklisted rule";
                    readonly type: "string";
                    readonly examples: readonly ["banned customer example@example.com"];
                };
            };
            readonly title: "deleted_blacklist_rule_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const DeleteRuleWhitelist: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly properties: {
                readonly id: {
                    readonly description: "Whitelist rule id";
                    readonly type: "string";
                    readonly examples: readonly ["2fw8EWJusiRrxdPzT"];
                };
                readonly field: {
                    readonly description: "field used for whitelists rule deleted";
                    readonly type: "string";
                    readonly examples: readonly ["email"];
                };
                readonly value: {
                    readonly description: "value used for whitelists rule deleted";
                    readonly type: "string";
                    readonly examples: readonly ["email@example.com"];
                };
                readonly description: {
                    readonly description: "use an description for whitelisted rule";
                    readonly type: "string";
                    readonly examples: readonly ["secure customer example@example.com"];
                };
            };
            readonly title: "deleted_whitelist_rule_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const DeleteWebhook: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "webhooks model";
            readonly properties: {
                readonly deleted: {
                    readonly type: readonly ["boolean", "null"];
                    readonly examples: readonly [false];
                };
                readonly development_enabled: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["event"];
                };
                readonly production_enabled: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["listening"];
                };
                readonly subscribed_events: {
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly examples: readonly ["charge.created", "charge.paid", "charge.under_fraud_review", "charge.fraudulent", "charge.refunded", "charge.preauthorized", "charge.declined", "charge.canceled", "charge.reversed", "charge.pending_confirmation"];
                };
                readonly synchronous: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly url: {
                    readonly type: "string";
                    readonly examples: readonly ["https://username:password@mockoon.stg.conekta.io/payments-api/cash/merchant_approval"];
                };
            };
            readonly title: "webhook_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const DeleteWebhookKey: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "webhook keys model";
            readonly properties: {
                readonly active: {
                    readonly description: "Indicates if the webhook key is active";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly created_at: {
                    readonly description: "Unix timestamp in seconds with the creation date of the webhook key";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1577836800];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly deleted: {
                    readonly description: "Indicates if the webhook key is deleted";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly id: {
                    readonly description: "Unique identifier of the webhook key";
                    readonly type: "string";
                    readonly examples: readonly ["62730ba6fb7dfd6a712f118e"];
                };
                readonly livemode: {
                    readonly description: "Indicates if the webhook key is in live mode";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object name, value is webhook_key";
                    readonly type: "string";
                    readonly examples: readonly ["webhook_key"];
                };
            };
            readonly title: "webhook_key_delete_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const EmailCheckout: {
    readonly body: {
        readonly properties: {
            readonly email: {
                readonly format: "email";
                readonly type: "string";
                readonly examples: readonly ["example@conekta.com"];
            };
        };
        readonly required: readonly ["email"];
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "checkout response";
            readonly properties: {
                readonly allowed_payment_methods: {
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly examples: readonly ["cash", "card", "bank_transfer"];
                };
                readonly can_not_expire: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly emails_sent: {
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly exclude_card_networks: {
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly type: "array";
                };
                readonly expires_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1680397724];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly failure_url: {
                    readonly type: "string";
                    readonly examples: readonly ["https://pay.conekta.com/failure"];
                };
                readonly force_3ds_flow: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["b0bf16c4-18b9-445e-ba24-01604f329dbf"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly type: "object";
                };
                readonly monthly_installments_enabled: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly monthly_installments_options: {
                    readonly items: {
                        readonly format: "int8";
                        readonly type: "integer";
                        readonly minimum: -128;
                        readonly maximum: 127;
                    };
                    readonly type: "array";
                    readonly examples: readonly [3, 6, 12];
                };
                readonly name: {
                    readonly description: "Reason for charge";
                    readonly type: "string";
                    readonly examples: readonly ["Payment Link Name 1594138857"];
                };
                readonly needs_shipping_contact: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["checkout"];
                };
                readonly paid_payments_count: {
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly payments_limit_count: {
                    readonly format: "int8";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [5];
                    readonly minimum: -128;
                    readonly maximum: 127;
                };
                readonly recurrent: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly slug: {
                    readonly type: "string";
                    readonly examples: readonly ["b0bf16c418b9445eba2401604f329dbf"];
                };
                readonly sms_sent: {
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly starts_at: {
                    readonly type: "integer";
                    readonly examples: readonly [1677650400];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["Issued"];
                };
                readonly success_url: {
                    readonly type: "string";
                    readonly examples: readonly ["https://pay.conekta.com/success"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["PaymentLink"];
                };
                readonly url: {
                    readonly format: "uri";
                    readonly type: "string";
                    readonly examples: readonly ["https://pay.conekta.com/link/b0bf16c418b9445eba2401604f329dbf"];
                };
            };
            readonly required: readonly ["id", "livemode", "name", "object"];
            readonly title: "checkout_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "402": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetAllEventsFromSubscription: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "subscription_events_response";
            readonly description: "page metadata";
            readonly required: readonly ["has_more", "object"];
            readonly type: "object";
            readonly properties: {
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly description: "event model";
                        readonly title: "event_response";
                        readonly type: "object";
                        readonly properties: {
                            readonly created_at: {
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1661445644];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly data: {
                                readonly maxProperties: 100;
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly id: {
                                readonly type: "string";
                                readonly examples: readonly ["6307a60c41de27127515a575"];
                            };
                            readonly livemode: {
                                readonly type: "boolean";
                                readonly examples: readonly [true];
                            };
                            readonly object: {
                                readonly type: "string";
                                readonly examples: readonly ["event"];
                            };
                            readonly type: {
                                readonly type: "string";
                                readonly examples: readonly ["webhook_ping"];
                            };
                            readonly webhook_logs: {
                                readonly type: "array";
                                readonly items: {
                                    readonly title: "WebhookLog";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly failed_attempts: {
                                            readonly type: "integer";
                                            readonly examples: readonly [10];
                                        };
                                        readonly id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["webhl_2svd2sh6GbqzyWBNZ"];
                                        };
                                        readonly last_attempted_at: {
                                            readonly type: "integer";
                                            readonly examples: readonly [1669651274];
                                        };
                                        readonly last_http_response_status: {
                                            readonly format: "int32";
                                            readonly type: "integer";
                                            readonly examples: readonly [200];
                                            readonly minimum: -2147483648;
                                            readonly maximum: 2147483647;
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["webhook_log"];
                                        };
                                        readonly response_data: {
                                            readonly maxProperties: 100;
                                            readonly type: "object";
                                            readonly additionalProperties: true;
                                        };
                                        readonly url: {
                                            readonly format: "uri";
                                            readonly type: "string";
                                            readonly examples: readonly ["https://username:password@mockoon.stg.conekta.io/payments-api/cash/merchant_approval"];
                                        };
                                    };
                                };
                            };
                            readonly webhook_status: {
                                readonly type: "string";
                                readonly examples: readonly ["successful"];
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "402": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetApiKey: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "api keys model";
            readonly properties: {
                readonly active: {
                    readonly description: "Indicates if the api key is active";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly created_at: {
                    readonly description: "Unix timestamp in seconds of when the api key was created";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1684167881];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly updated_at: {
                    readonly description: "Unix timestamp in seconds of when the api key was last updated";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1684167923];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly deactivated_at: {
                    readonly description: "Unix timestamp in seconds of when the api key was deleted";
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly description: {
                    readonly description: "A name or brief explanation of what this api key is used for";
                    readonly type: "string";
                    readonly examples: readonly ["online store"];
                };
                readonly id: {
                    readonly description: "Unique identifier of the api key";
                    readonly type: "string";
                    readonly examples: readonly ["64625cc9f3e02c00163f5e4d"];
                };
                readonly livemode: {
                    readonly description: "Indicates if the api key is in production";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly deleted: {
                    readonly description: "Indicates if the api key was deleted";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object name, value is 'api_key'";
                    readonly type: "string";
                    readonly examples: readonly ["api_key"];
                };
                readonly prefix: {
                    readonly description: "The first few characters of the authentication_token";
                    readonly type: "string";
                    readonly examples: readonly ["key_rp"];
                };
                readonly role: {
                    readonly description: "Indicates if the api key is private or public";
                    readonly type: "string";
                    readonly examples: readonly ["private"];
                };
            };
            readonly title: "api_key_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetApiKeys: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly default: 20;
                    readonly format: "int32";
                    readonly maximum: 250;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The numbers of items to return, the maximum value is 250";
                };
                readonly next: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "next page";
                };
                readonly previous: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "previous page";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "General search, e.g. by id, description, prefix";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "get_api_keys_response";
            readonly description: "pagination metadata";
            readonly type: "object";
            readonly required: readonly ["has_more", "object"];
            readonly properties: {
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly description: "api keys model";
                        readonly title: "api_key_response";
                        readonly type: "object";
                        readonly properties: {
                            readonly active: {
                                readonly description: "Indicates if the api key is active";
                                readonly type: "boolean";
                                readonly examples: readonly [true];
                            };
                            readonly created_at: {
                                readonly description: "Unix timestamp in seconds of when the api key was created";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1684167881];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly updated_at: {
                                readonly description: "Unix timestamp in seconds of when the api key was last updated";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1684167923];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly deactivated_at: {
                                readonly description: "Unix timestamp in seconds of when the api key was deleted";
                                readonly format: "int64";
                                readonly type: readonly ["integer", "null"];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly description: {
                                readonly description: "A name or brief explanation of what this api key is used for";
                                readonly type: "string";
                                readonly examples: readonly ["online store"];
                            };
                            readonly id: {
                                readonly description: "Unique identifier of the api key";
                                readonly type: "string";
                                readonly examples: readonly ["64625cc9f3e02c00163f5e4d"];
                            };
                            readonly livemode: {
                                readonly description: "Indicates if the api key is in production";
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly deleted: {
                                readonly description: "Indicates if the api key was deleted";
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly object: {
                                readonly description: "Object name, value is 'api_key'";
                                readonly type: "string";
                                readonly examples: readonly ["api_key"];
                            };
                            readonly prefix: {
                                readonly description: "The first few characters of the authentication_token";
                                readonly type: "string";
                                readonly examples: readonly ["key_rp"];
                            };
                            readonly role: {
                                readonly description: "Indicates if the api key is private or public";
                                readonly type: "string";
                                readonly examples: readonly ["private"];
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetBalance: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "balance model";
            readonly properties: {
                readonly available: {
                    readonly description: "The balance's available";
                    readonly items: {
                        readonly description: "balance common fields model";
                        readonly properties: {
                            readonly amount: {
                                readonly description: "The balance's amount";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [100];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly currency: {
                                readonly description: "The balance's currency";
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                        };
                        readonly title: "balance_common_fiels_response";
                        readonly type: "object";
                    };
                    readonly type: "array";
                };
                readonly cashout_retention_amount: {
                    readonly description: "The balance's cashout retention amount";
                    readonly items: {
                        readonly description: "balance common fields model";
                        readonly properties: {
                            readonly amount: {
                                readonly description: "The balance's amount";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [100];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly currency: {
                                readonly description: "The balance's currency";
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                        };
                        readonly title: "balance_common_fiels_response";
                        readonly type: "object";
                    };
                    readonly type: "array";
                };
                readonly conekta_retention: {
                    readonly description: "The balance's conekta retention";
                    readonly items: {
                        readonly description: "balance common fields model";
                        readonly properties: {
                            readonly amount: {
                                readonly description: "The balance's amount";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [100];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly currency: {
                                readonly description: "The balance's currency";
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                        };
                        readonly title: "balance_common_fiels_response";
                        readonly type: "object";
                    };
                    readonly type: "array";
                };
                readonly gateway: {
                    readonly description: "The balance's gateway";
                    readonly items: {
                        readonly description: "balance common fields model";
                        readonly properties: {
                            readonly amount: {
                                readonly description: "The balance's amount";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [100];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly currency: {
                                readonly description: "The balance's currency";
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                        };
                        readonly title: "balance_common_fiels_response";
                        readonly type: "object";
                    };
                    readonly type: "array";
                };
                readonly pending: {
                    readonly description: "The balance's pending";
                    readonly items: {
                        readonly description: "balance common fields model";
                        readonly properties: {
                            readonly amount: {
                                readonly description: "The balance's amount";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [100];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly currency: {
                                readonly description: "The balance's currency";
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                        };
                        readonly title: "balance_common_fiels_response";
                        readonly type: "object";
                    };
                    readonly type: "array";
                };
                readonly retained: {
                    readonly description: "The balance's retained";
                    readonly items: {
                        readonly description: "balance common fields model";
                        readonly properties: {
                            readonly amount: {
                                readonly description: "The balance's amount";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [100];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly currency: {
                                readonly description: "The balance's currency";
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                        };
                        readonly title: "balance_common_fiels_response";
                        readonly type: "object";
                    };
                    readonly type: "array";
                };
                readonly retention_amount: {
                    readonly description: "The balance's retention amount";
                    readonly items: {
                        readonly description: "balance common fields model";
                        readonly properties: {
                            readonly amount: {
                                readonly description: "The balance's amount";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [100];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly currency: {
                                readonly description: "The balance's currency";
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                        };
                        readonly title: "balance_common_fiels_response";
                        readonly type: "object";
                    };
                    readonly type: "array";
                };
                readonly target_collateral_amount: {
                    readonly description: "The balance's target collateral amount";
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly target_retention_amount: {
                    readonly description: "The balance's target retention amount";
                    readonly items: {
                        readonly description: "balance common fields model";
                        readonly properties: {
                            readonly amount: {
                                readonly description: "The balance's amount";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [100];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly currency: {
                                readonly description: "The balance's currency";
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                        };
                        readonly title: "balance_common_fiels_response";
                        readonly type: "object";
                    };
                    readonly type: "array";
                };
                readonly temporarily_retained: {
                    readonly description: "The balance's temporarily retained";
                    readonly items: {
                        readonly description: "balance common fields model";
                        readonly properties: {
                            readonly amount: {
                                readonly description: "The balance's amount";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [100];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly currency: {
                                readonly description: "The balance's currency";
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                        };
                        readonly title: "balance_common_fiels_response";
                        readonly type: "object";
                    };
                    readonly type: "array";
                };
            };
            readonly title: "balance_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetCharges: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly default: 20;
                    readonly format: "int32";
                    readonly maximum: 250;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The numbers of items to return, the maximum value is 250";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "General order search, e.g. by mail, reference etc.";
                };
                readonly next: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "next page";
                };
                readonly previous: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "previous page";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "get_charges_response";
            readonly description: "page metadata";
            readonly required: readonly ["has_more", "object"];
            readonly type: "object";
            readonly properties: {
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "charges_data_response";
                        readonly type: "object";
                        readonly properties: {
                            readonly amount: {
                                readonly type: "integer";
                                readonly examples: readonly [4321];
                            };
                            readonly channel: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly segment: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Checkout"];
                                    };
                                    readonly checkout_request_id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                                    };
                                    readonly checkout_request_type: {
                                        readonly type: "string";
                                        readonly examples: readonly ["HostedPayment"];
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                                    };
                                };
                            };
                            readonly created_at: {
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1676386026];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly currency: {
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                            readonly customer_id: {
                                readonly type: "string";
                            };
                            readonly description: {
                                readonly type: "string";
                                readonly examples: readonly ["Payment from order"];
                            };
                            readonly device_fingerprint: {
                                readonly type: "string";
                                readonly examples: readonly ["6FR3chaU4Y1nGAW5NAGd1rcjAKa142Ba"];
                            };
                            readonly failure_code: {
                                readonly type: "string";
                                readonly examples: readonly ["suspected_fraud"];
                            };
                            readonly failure_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Este cargo ha sido declinado porque el comportamiento del comprador es sospechoso."];
                            };
                            readonly id: {
                                readonly description: "Charge ID";
                                readonly type: "string";
                                readonly examples: readonly ["63efa757cf65380001aec040"];
                            };
                            readonly livemode: {
                                readonly description: "Whether the charge was made in live mode or not";
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly object: {
                                readonly type: "string";
                                readonly examples: readonly ["charge"];
                            };
                            readonly order_id: {
                                readonly description: "Order ID";
                                readonly type: "string";
                                readonly examples: readonly ["ord_2tN73UdUSNrYRPD9r"];
                            };
                            readonly paid_at: {
                                readonly description: "Payment date";
                                readonly format: "int64";
                                readonly type: readonly ["integer", "null"];
                                readonly examples: readonly [1676390742];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly payment_method: {
                                readonly discriminator: {
                                    readonly mapping: {
                                        readonly cash_payment: "payment_method_cash";
                                        readonly card_payment: "payment_method_card";
                                        readonly bank_transfer_payment: "payment_method_bank_transfer";
                                    };
                                    readonly propertyName: "object";
                                };
                                readonly oneOf: readonly [{
                                    readonly required: readonly ["object"];
                                    readonly type: "object";
                                    readonly description: "use for cash responses";
                                    readonly title: "charge_data_payment_method_cash_response";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["payment_source"];
                                        };
                                        readonly auth_code: {
                                            readonly type: readonly ["integer", "null"];
                                            readonly examples: readonly [542563];
                                        };
                                        readonly cashier_id: {
                                            readonly type: readonly ["string", "null"];
                                            readonly examples: readonly ["OINM01010"];
                                        };
                                        readonly reference: {
                                            readonly type: "string";
                                            readonly examples: readonly ["93000262276908"];
                                        };
                                        readonly barcode_url: {
                                            readonly type: "string";
                                            readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                                        };
                                        readonly expires_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [0];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly service_name: {
                                            readonly type: "string";
                                            readonly examples: readonly ["OxxoPay"];
                                        };
                                        readonly store: {
                                            readonly type: readonly ["string", "null"];
                                            readonly examples: readonly ["10MON50EDI"];
                                        };
                                        readonly store_name: {
                                            readonly type: "string";
                                            readonly examples: readonly ["OXXO"];
                                        };
                                    };
                                }, {
                                    readonly required: readonly ["object"];
                                    readonly type: "object";
                                    readonly description: "use for card responses";
                                    readonly title: "charge_data_payment_method_card_response";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["payment_source"];
                                        };
                                        readonly account_type: {
                                            readonly description: "Account type of the card";
                                            readonly type: "string";
                                            readonly examples: readonly ["Credit"];
                                        };
                                        readonly auth_code: {
                                            readonly type: "string";
                                            readonly examples: readonly ["867372"];
                                        };
                                        readonly brand: {
                                            readonly description: "Brand of the card";
                                            readonly type: "string";
                                            readonly examples: readonly ["visa"];
                                        };
                                        readonly contract_id: {
                                            readonly description: "Id sent for recurrent charges.";
                                            readonly type: "string";
                                            readonly examples: readonly ["S781317595"];
                                        };
                                        readonly country: {
                                            readonly description: "Country of the card";
                                            readonly type: "string";
                                            readonly examples: readonly ["MX"];
                                        };
                                        readonly exp_month: {
                                            readonly description: "Expiration month of the card";
                                            readonly type: "string";
                                            readonly examples: readonly ["02"];
                                        };
                                        readonly exp_year: {
                                            readonly description: "Expiration year of the card";
                                            readonly type: "string";
                                            readonly examples: readonly ["2026"];
                                        };
                                        readonly fraud_indicators: {
                                            readonly type: "array";
                                            readonly items: {};
                                        };
                                        readonly issuer: {
                                            readonly description: "Issuer of the card";
                                            readonly type: "string";
                                            readonly examples: readonly ["BANAMEX"];
                                        };
                                        readonly last4: {
                                            readonly description: "Last 4 digits of the card";
                                            readonly type: "string";
                                            readonly examples: readonly ["4242"];
                                        };
                                        readonly name: {
                                            readonly description: "Name of the cardholder";
                                            readonly type: "string";
                                            readonly examples: readonly ["Fulanito Perez"];
                                        };
                                    };
                                }, {
                                    readonly required: readonly ["object"];
                                    readonly type: "object";
                                    readonly description: "use for bank transfer responses";
                                    readonly title: "charge_data_payment_method_bank_transfer_response";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["payment_source"];
                                        };
                                        readonly bank: {
                                            readonly type: "string";
                                            readonly examples: readonly ["STP"];
                                        };
                                        readonly clabe: {
                                            readonly type: "string";
                                            readonly examples: readonly ["646180111805034237"];
                                        };
                                        readonly description: {
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly executed_at: {
                                            readonly type: readonly ["integer", "null"];
                                        };
                                        readonly expires_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [1683053729];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly issuing_account_bank: {
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly issuing_account_number: {
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly issuing_account_holder_name: {
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly issuing_account_tax_id: {
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly payment_attempts: {
                                            readonly type: "array";
                                            readonly items: {};
                                        };
                                        readonly receiving_account_holder_name: {
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly receiving_account_number: {
                                            readonly type: "string";
                                            readonly examples: readonly ["646180111805034237"];
                                        };
                                        readonly receiving_account_bank: {
                                            readonly type: "string";
                                            readonly examples: readonly ["STP"];
                                        };
                                        readonly receiving_account_tax_id: {
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly reference_number: {
                                            readonly type: readonly ["string", "null"];
                                        };
                                        readonly tracking_code: {
                                            readonly type: readonly ["string", "null"];
                                        };
                                    };
                                }];
                                readonly title: "charge_response_payment_method";
                            };
                            readonly reference_id: {
                                readonly description: "Reference ID of the charge";
                                readonly type: readonly ["string", "null"];
                                readonly examples: readonly ["ref_2tN73UdUSNrYRPD9r"];
                            };
                            readonly refunds: {
                                readonly title: "charge_response_refunds";
                                readonly type: readonly ["object", "null"];
                                readonly description: "page metadata";
                                readonly required: readonly ["has_more", "object"];
                                readonly properties: {
                                    readonly has_more: {
                                        readonly description: "Indicates if there are more pages to be requested";
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly object: {
                                        readonly description: "Object type, in this case is list";
                                        readonly type: "string";
                                        readonly examples: readonly ["list"];
                                    };
                                    readonly next_page_url: {
                                        readonly description: "URL of the next page.";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                                    };
                                    readonly previous_page_url: {
                                        readonly description: "Url of the previous page.";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                                    };
                                    readonly data: {
                                        readonly description: "refunds";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly required: readonly ["amount", "created_at", "id", "object"];
                                            readonly title: "charge_response_refunds_data";
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly amount: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [-15000];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly auth_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["867372"];
                                                };
                                                readonly created_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [1678226878];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly expires_at: {
                                                    readonly description: "refund expiration date";
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [1678226878];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly id: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["6407b5bee1329a000175ba11"];
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["refund"];
                                                };
                                                readonly status: {
                                                    readonly description: "refund status";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["pending"];
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly status: {
                                readonly type: "string";
                                readonly examples: readonly ["pending_payment"];
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetCheckout: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "checkout response";
            readonly properties: {
                readonly allowed_payment_methods: {
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly examples: readonly ["cash", "card", "bank_transfer"];
                };
                readonly can_not_expire: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly emails_sent: {
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly exclude_card_networks: {
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly type: "array";
                };
                readonly expires_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1680397724];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly failure_url: {
                    readonly type: "string";
                    readonly examples: readonly ["https://pay.conekta.com/failure"];
                };
                readonly force_3ds_flow: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["b0bf16c4-18b9-445e-ba24-01604f329dbf"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly type: "object";
                };
                readonly monthly_installments_enabled: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly monthly_installments_options: {
                    readonly items: {
                        readonly format: "int8";
                        readonly type: "integer";
                        readonly minimum: -128;
                        readonly maximum: 127;
                    };
                    readonly type: "array";
                    readonly examples: readonly [3, 6, 12];
                };
                readonly name: {
                    readonly description: "Reason for charge";
                    readonly type: "string";
                    readonly examples: readonly ["Payment Link Name 1594138857"];
                };
                readonly needs_shipping_contact: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["checkout"];
                };
                readonly paid_payments_count: {
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly payments_limit_count: {
                    readonly format: "int8";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [5];
                    readonly minimum: -128;
                    readonly maximum: 127;
                };
                readonly recurrent: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly slug: {
                    readonly type: "string";
                    readonly examples: readonly ["b0bf16c418b9445eba2401604f329dbf"];
                };
                readonly sms_sent: {
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly starts_at: {
                    readonly type: "integer";
                    readonly examples: readonly [1677650400];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["Issued"];
                };
                readonly success_url: {
                    readonly type: "string";
                    readonly examples: readonly ["https://pay.conekta.com/success"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["PaymentLink"];
                };
                readonly url: {
                    readonly format: "uri";
                    readonly type: "string";
                    readonly examples: readonly ["https://pay.conekta.com/link/b0bf16c418b9445eba2401604f329dbf"];
                };
            };
            readonly required: readonly ["id", "livemode", "name", "object"];
            readonly title: "checkout_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "402": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetCheckouts: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly default: 20;
                    readonly format: "int32";
                    readonly maximum: 250;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The numbers of items to return, the maximum value is 250";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "General order search, e.g. by mail, reference etc.";
                };
                readonly next: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "next page";
                };
                readonly previous: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "previous page";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "checkouts_response";
            readonly description: "page metadata";
            readonly required: readonly ["has_more", "object"];
            readonly type: "object";
            readonly properties: {
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly description: "checkout response";
                        readonly required: readonly ["id", "livemode", "name", "object"];
                        readonly title: "checkout_response";
                        readonly type: "object";
                        readonly properties: {
                            readonly allowed_payment_methods: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                                readonly examples: readonly ["cash", "card", "bank_transfer"];
                            };
                            readonly can_not_expire: {
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly emails_sent: {
                                readonly type: "integer";
                                readonly examples: readonly [0];
                            };
                            readonly exclude_card_networks: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                            };
                            readonly expires_at: {
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1680397724];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly failure_url: {
                                readonly type: "string";
                                readonly examples: readonly ["https://pay.conekta.com/failure"];
                            };
                            readonly force_3ds_flow: {
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly id: {
                                readonly type: "string";
                                readonly examples: readonly ["b0bf16c4-18b9-445e-ba24-01604f329dbf"];
                            };
                            readonly livemode: {
                                readonly type: "boolean";
                                readonly examples: readonly [true];
                            };
                            readonly metadata: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly monthly_installments_enabled: {
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly monthly_installments_options: {
                                readonly type: "array";
                                readonly items: {
                                    readonly format: "int8";
                                    readonly type: "integer";
                                    readonly minimum: -128;
                                    readonly maximum: 127;
                                };
                                readonly examples: readonly [3, 6, 12];
                            };
                            readonly name: {
                                readonly description: "Reason for charge";
                                readonly type: "string";
                                readonly examples: readonly ["Payment Link Name 1594138857"];
                            };
                            readonly needs_shipping_contact: {
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly object: {
                                readonly type: "string";
                                readonly examples: readonly ["checkout"];
                            };
                            readonly paid_payments_count: {
                                readonly type: "integer";
                                readonly examples: readonly [0];
                            };
                            readonly payments_limit_count: {
                                readonly format: "int8";
                                readonly type: readonly ["integer", "null"];
                                readonly examples: readonly [5];
                                readonly minimum: -128;
                                readonly maximum: 127;
                            };
                            readonly recurrent: {
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly slug: {
                                readonly type: "string";
                                readonly examples: readonly ["b0bf16c418b9445eba2401604f329dbf"];
                            };
                            readonly sms_sent: {
                                readonly type: "integer";
                                readonly examples: readonly [0];
                            };
                            readonly starts_at: {
                                readonly type: "integer";
                                readonly examples: readonly [1677650400];
                            };
                            readonly status: {
                                readonly type: "string";
                                readonly examples: readonly ["Issued"];
                            };
                            readonly success_url: {
                                readonly type: "string";
                                readonly examples: readonly ["https://pay.conekta.com/success"];
                            };
                            readonly type: {
                                readonly type: "string";
                                readonly examples: readonly ["PaymentLink"];
                            };
                            readonly url: {
                                readonly format: "uri";
                                readonly type: "string";
                                readonly examples: readonly ["https://pay.conekta.com/link/b0bf16c418b9445eba2401604f329dbf"];
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "402": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetCompanies: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly default: 20;
                    readonly format: "int32";
                    readonly maximum: 250;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The numbers of items to return, the maximum value is 250";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "General order search, e.g. by mail, reference etc.";
                };
                readonly next: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "next page";
                };
                readonly previous: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "previous page";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "get_companies_response";
            readonly description: "page metadata";
            readonly required: readonly ["has_more", "object"];
            readonly type: "object";
            readonly properties: {
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly description: "Company model";
                        readonly title: "company_response";
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly description: "The child company's unique identifier";
                                readonly type: "string";
                                readonly examples: readonly ["6441bb27659a060465da7335"];
                            };
                            readonly created_at: {
                                readonly description: "The resource's creation date (unix timestamp)";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1680397724];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly name: {
                                readonly description: "The child company's name";
                                readonly type: "string";
                                readonly examples: readonly ["Child Company A"];
                            };
                            readonly object: {
                                readonly description: "The resource's type\n\n`company`";
                                readonly enum: readonly ["company"];
                                readonly type: "string";
                            };
                            readonly parent_company_id: {
                                readonly description: "Id of the parent company";
                                readonly type: "string";
                                readonly examples: readonly ["6441bb3c62db5812e7920c31"];
                            };
                            readonly use_parent_fiscal_data: {
                                readonly description: "Whether the parent company's fiscal data is to be used for liquidation and tax purposes";
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly payout_destination: {
                                readonly description: "Company payout destination model";
                                readonly title: "company_payout_destination_response";
                                readonly type: "object";
                                readonly properties: {
                                    readonly object: {
                                        readonly description: "The resource's type\n\n`payout_destination`";
                                        readonly enum: readonly ["payout_destination"];
                                        readonly type: "string";
                                    };
                                    readonly currency: {
                                        readonly description: "currency of the receiving account";
                                        readonly type: "string";
                                        readonly examples: readonly ["MXN"];
                                    };
                                    readonly account_holder_name: {
                                        readonly description: "Name of the account holder";
                                        readonly type: "string";
                                        readonly examples: readonly ["Child Company A"];
                                    };
                                    readonly bank: {
                                        readonly description: "Name of the bank";
                                        readonly type: "string";
                                        readonly examples: readonly ["BBVA"];
                                    };
                                    readonly type: {
                                        readonly description: "Type of the payout destination\n\n`bank_account`";
                                        readonly enum: readonly ["bank_account"];
                                        readonly type: "string";
                                    };
                                    readonly account_number: {
                                        readonly description: "Account number of the receiving account";
                                        readonly type: "string";
                                        readonly examples: readonly ["123456789012345678"];
                                    };
                                };
                            };
                            readonly fiscal_info: {
                                readonly description: "Company fiscal info model";
                                readonly title: "company_fiscal_info_response";
                                readonly type: "object";
                                readonly properties: {
                                    readonly object: {
                                        readonly description: "The resource's type\n\n`fiscal_info`";
                                        readonly enum: readonly ["fiscal_info"];
                                        readonly type: "string";
                                    };
                                    readonly tax_id: {
                                        readonly description: "Tax ID of the company";
                                        readonly type: "string";
                                        readonly examples: readonly ["XAXX010101000"];
                                    };
                                    readonly legal_entity_name: {
                                        readonly description: "Legal name of the company";
                                        readonly type: "string";
                                        readonly examples: readonly ["Child Company A"];
                                    };
                                    readonly business_type: {
                                        readonly description: "Business type of the company";
                                        readonly type: "string";
                                        readonly examples: readonly ["persona_moral"];
                                    };
                                    readonly phone: {
                                        readonly description: "Phone number of the company";
                                        readonly type: "string";
                                        readonly examples: readonly ["5555555555"];
                                    };
                                    readonly physical_person_business_type: {
                                        readonly description: "Business type if 'persona_fisica'";
                                        readonly type: "string";
                                    };
                                    readonly address: {
                                        readonly description: "Company fiscal info address model";
                                        readonly title: "company_fiscal_info_address_response";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly object: {
                                                readonly description: "The resource's type\n\n`address`";
                                                readonly enum: readonly ["address"];
                                                readonly type: "string";
                                            };
                                            readonly street1: {
                                                readonly description: "Street Address";
                                                readonly type: "string";
                                                readonly examples: readonly ["Calle 13"];
                                            };
                                            readonly street2: {
                                                readonly description: "Colonia";
                                                readonly type: "string";
                                                readonly examples: readonly ["Navarte"];
                                            };
                                            readonly city: {
                                                readonly description: "City";
                                                readonly type: "string";
                                                readonly examples: readonly ["Cuauhtémoc"];
                                            };
                                            readonly state: {
                                                readonly description: "State";
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de México"];
                                            };
                                            readonly country: {
                                                readonly description: "Country";
                                                readonly type: "string";
                                                readonly examples: readonly ["MX"];
                                            };
                                            readonly postal_code: {
                                                readonly description: "Postal code";
                                                readonly type: "string";
                                                readonly examples: readonly ["3072"];
                                            };
                                            readonly external_number: {
                                                readonly description: "Street number";
                                                readonly type: "string";
                                                readonly examples: readonly ["123"];
                                            };
                                            readonly internal_number: {
                                                readonly description: "Unit / apartment number";
                                                readonly type: "string";
                                                readonly examples: readonly ["123"];
                                            };
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetCompany: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "Company model";
            readonly properties: {
                readonly id: {
                    readonly description: "The child company's unique identifier";
                    readonly type: "string";
                    readonly examples: readonly ["6441bb27659a060465da7335"];
                };
                readonly created_at: {
                    readonly description: "The resource's creation date (unix timestamp)";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1680397724];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly name: {
                    readonly description: "The child company's name";
                    readonly type: "string";
                    readonly examples: readonly ["Child Company A"];
                };
                readonly object: {
                    readonly description: "The resource's type\n\n`company`";
                    readonly enum: readonly ["company"];
                    readonly type: "string";
                };
                readonly parent_company_id: {
                    readonly description: "Id of the parent company";
                    readonly type: "string";
                    readonly examples: readonly ["6441bb3c62db5812e7920c31"];
                };
                readonly use_parent_fiscal_data: {
                    readonly description: "Whether the parent company's fiscal data is to be used for liquidation and tax purposes";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly payout_destination: {
                    readonly description: "Company payout destination model";
                    readonly properties: {
                        readonly object: {
                            readonly description: "The resource's type\n\n`payout_destination`";
                            readonly enum: readonly ["payout_destination"];
                            readonly type: "string";
                        };
                        readonly currency: {
                            readonly description: "currency of the receiving account";
                            readonly type: "string";
                            readonly examples: readonly ["MXN"];
                        };
                        readonly account_holder_name: {
                            readonly description: "Name of the account holder";
                            readonly type: "string";
                            readonly examples: readonly ["Child Company A"];
                        };
                        readonly bank: {
                            readonly description: "Name of the bank";
                            readonly type: "string";
                            readonly examples: readonly ["BBVA"];
                        };
                        readonly type: {
                            readonly description: "Type of the payout destination\n\n`bank_account`";
                            readonly enum: readonly ["bank_account"];
                            readonly type: "string";
                        };
                        readonly account_number: {
                            readonly description: "Account number of the receiving account";
                            readonly type: "string";
                            readonly examples: readonly ["123456789012345678"];
                        };
                    };
                    readonly title: "company_payout_destination_response";
                    readonly type: "object";
                };
                readonly fiscal_info: {
                    readonly description: "Company fiscal info model";
                    readonly properties: {
                        readonly object: {
                            readonly description: "The resource's type\n\n`fiscal_info`";
                            readonly enum: readonly ["fiscal_info"];
                            readonly type: "string";
                        };
                        readonly tax_id: {
                            readonly description: "Tax ID of the company";
                            readonly type: "string";
                            readonly examples: readonly ["XAXX010101000"];
                        };
                        readonly legal_entity_name: {
                            readonly description: "Legal name of the company";
                            readonly type: "string";
                            readonly examples: readonly ["Child Company A"];
                        };
                        readonly business_type: {
                            readonly description: "Business type of the company";
                            readonly type: "string";
                            readonly examples: readonly ["persona_moral"];
                        };
                        readonly phone: {
                            readonly description: "Phone number of the company";
                            readonly type: "string";
                            readonly examples: readonly ["5555555555"];
                        };
                        readonly physical_person_business_type: {
                            readonly description: "Business type if 'persona_fisica'";
                            readonly type: "string";
                        };
                        readonly address: {
                            readonly description: "Company fiscal info address model";
                            readonly properties: {
                                readonly object: {
                                    readonly description: "The resource's type\n\n`address`";
                                    readonly enum: readonly ["address"];
                                    readonly type: "string";
                                };
                                readonly street1: {
                                    readonly description: "Street Address";
                                    readonly type: "string";
                                    readonly examples: readonly ["Calle 13"];
                                };
                                readonly street2: {
                                    readonly description: "Colonia";
                                    readonly type: "string";
                                    readonly examples: readonly ["Navarte"];
                                };
                                readonly city: {
                                    readonly description: "City";
                                    readonly type: "string";
                                    readonly examples: readonly ["Cuauhtémoc"];
                                };
                                readonly state: {
                                    readonly description: "State";
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de México"];
                                };
                                readonly country: {
                                    readonly description: "Country";
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly postal_code: {
                                    readonly description: "Postal code";
                                    readonly type: "string";
                                    readonly examples: readonly ["3072"];
                                };
                                readonly external_number: {
                                    readonly description: "Street number";
                                    readonly type: "string";
                                    readonly examples: readonly ["123"];
                                };
                                readonly internal_number: {
                                    readonly description: "Unit / apartment number";
                                    readonly type: "string";
                                    readonly examples: readonly ["123"];
                                };
                            };
                            readonly title: "company_fiscal_info_address_response";
                            readonly type: "object";
                        };
                    };
                    readonly title: "company_fiscal_info_response";
                    readonly type: "object";
                };
            };
            readonly title: "company_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetCustomerById: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "customer response";
            readonly properties: {
                readonly antifraud_info: {
                    readonly properties: {
                        readonly first_paid_at: {
                            readonly type: "integer";
                            readonly examples: readonly [1485151007];
                        };
                        readonly account_created_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1484040996];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                    };
                    readonly title: "customer_antifraud_info_response";
                    readonly type: readonly ["object", "null"];
                };
                readonly corporate: {
                    readonly description: "true if the customer is a company";
                    readonly type: "boolean";
                };
                readonly created_at: {
                    readonly description: "Creation date of the object";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1485151007];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly custom_reference: {
                    readonly description: "Custom reference";
                    readonly type: "string";
                    readonly examples: readonly ["custom_reference"];
                };
                readonly default_fiscal_entity_id: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["fis_ent_2tKqqAfqPi21oCmEJ"];
                };
                readonly default_shipping_contact_id: {
                    readonly type: "string";
                    readonly examples: readonly ["ship_cont_2tKZsTYcsryyu7Ah8"];
                };
                readonly default_payment_source_id: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["src_2tHJfJ79KyUwpxTio"];
                };
                readonly email: {
                    readonly format: "email";
                    readonly type: "string";
                    readonly examples: readonly ["Felipe@gmail.com"];
                };
                readonly fiscal_entities: {
                    readonly title: "customer_fiscal_entities_response";
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "customer_fiscal_entities_data_response";
                                readonly required: readonly ["address", "created_at", "id", "object"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly address: {
                                        readonly required: readonly ["city", "postal_code", "street1"];
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly street1: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Nuevo Leon 254"];
                                            };
                                            readonly street2: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Departamento 404"];
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly examples: readonly ["06100"];
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly state: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly country: {
                                                readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                                readonly type: "string";
                                                readonly examples: readonly ["MX"];
                                            };
                                            readonly residential: {
                                                readonly default: false;
                                                readonly type: "boolean";
                                                readonly examples: readonly [true];
                                            };
                                            readonly external_number: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly tax_id: {
                                        readonly type: "string";
                                    };
                                    readonly email: {
                                        readonly type: "string";
                                    };
                                    readonly phone: {
                                        readonly type: "string";
                                    };
                                    readonly metadata: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "object";
                                            readonly additionalProperties: true;
                                        };
                                    };
                                    readonly company_name: {
                                        readonly type: "string";
                                        readonly examples: readonly ["conekta"];
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["ship_cont_2tKZsTYcsryyu7Ah8"];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["shipping_contact"];
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1675715413];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly parent_id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                                    };
                                    readonly default: {
                                        readonly type: "boolean";
                                    };
                                };
                            };
                        };
                    };
                };
                readonly id: {
                    readonly description: "Customer's ID";
                    readonly type: "string";
                    readonly examples: readonly ["cus_2tHJfJ79KyUwpxTik"];
                };
                readonly livemode: {
                    readonly description: "true if the object exists in live mode or the value false if the object exists in test mode";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly name: {
                    readonly description: "Customer's name";
                    readonly type: "string";
                    readonly examples: readonly ["Felipe"];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["customer"];
                };
                readonly payment_sources: {
                    readonly title: "customer_payment_methods_response";
                    readonly description: "page metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly next_page_url: {
                            readonly description: "URL of the next page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                        };
                        readonly previous_page_url: {
                            readonly description: "Url of the previous page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                        };
                        readonly data: {
                            readonly title: "customer_payment_methods_data";
                            readonly type: "array";
                            readonly items: {
                                readonly discriminator: {
                                    readonly mapping: {
                                        readonly cash: "payment_method_cash_response";
                                        readonly card: "payment_method_card_response";
                                        readonly oxxo_recurrent: "payment_method_cash_response";
                                        readonly spei_recurrent: "payment_method_spei_recurrent";
                                    };
                                    readonly propertyName: "type";
                                };
                                readonly oneOf: readonly [{
                                    readonly required: readonly ["created_at", "id", "object", "type"];
                                    readonly type: "object";
                                    readonly description: "use for cash responses";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                        };
                                        readonly id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["payment_source"];
                                        };
                                        readonly created_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [1675715413];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly parent_id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                        };
                                        readonly reference: {
                                            readonly type: "string";
                                            readonly examples: readonly ["93000262276908"];
                                        };
                                        readonly barcode: {
                                            readonly type: "string";
                                            readonly examples: readonly ["93000262276908"];
                                        };
                                        readonly barcode_url: {
                                            readonly type: "string";
                                            readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                                        };
                                        readonly expires_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [0];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly provider: {
                                            readonly type: "string";
                                            readonly examples: readonly ["Oxxo"];
                                        };
                                    };
                                }, {
                                    readonly required: readonly ["created_at", "id", "object", "type"];
                                    readonly type: "object";
                                    readonly description: "use for card responses";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                        };
                                        readonly id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["payment_source"];
                                        };
                                        readonly created_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [1675715413];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly parent_id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                        };
                                        readonly last4: {
                                            readonly type: "string";
                                            readonly examples: readonly ["6410"];
                                        };
                                        readonly bin: {
                                            readonly type: "string";
                                            readonly examples: readonly ["40276657"];
                                        };
                                        readonly card_type: {
                                            readonly type: "string";
                                            readonly examples: readonly ["debit"];
                                        };
                                        readonly exp_month: {
                                            readonly type: "string";
                                            readonly examples: readonly ["10"];
                                        };
                                        readonly exp_year: {
                                            readonly type: "string";
                                            readonly examples: readonly ["25"];
                                        };
                                        readonly brand: {
                                            readonly type: "string";
                                            readonly examples: readonly ["visa"];
                                        };
                                        readonly name: {
                                            readonly type: "string";
                                            readonly examples: readonly ["Fulano Perez\""];
                                        };
                                        readonly default: {
                                            readonly type: "boolean";
                                        };
                                        readonly visible_on_checkout: {
                                            readonly type: "boolean";
                                        };
                                        readonly payment_source_status: {
                                            readonly type: "string";
                                            readonly examples: readonly ["active"];
                                        };
                                    };
                                }, {
                                    readonly required: readonly ["created_at", "id", "object", "type"];
                                    readonly type: "object";
                                    readonly description: "use for spei responses";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                        };
                                        readonly id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["payment_source"];
                                        };
                                        readonly created_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [1675715413];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly parent_id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                        };
                                        readonly reference: {
                                            readonly type: "string";
                                            readonly examples: readonly ["93000262276908"];
                                        };
                                        readonly expires_at: {
                                            readonly type: "string";
                                            readonly examples: readonly ["none"];
                                        };
                                    };
                                }];
                                readonly title: "customer_payment_methods_data";
                            };
                        };
                    };
                };
                readonly phone: {
                    readonly description: "Customer's phone number";
                    readonly type: "string";
                    readonly examples: readonly ["+5215555555555"];
                };
                readonly shipping_contacts: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "customer_shipping_contacts_data_response";
                                readonly description: "[Shipping](https://developers.conekta.com/v2.1.0/reference/createcustomershippingcontacts)\ndetails, required in case of sending a shipping. If we do not receive a shipping_contact on the order, the default shipping_contact of the customer will be used.";
                                readonly required: readonly ["address", "created_at", "id", "object"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly phone: {
                                        readonly description: "Phone contact";
                                        readonly type: "string";
                                        readonly examples: readonly ["+525511223344"];
                                    };
                                    readonly receiver: {
                                        readonly description: "Name of the person who will receive the order";
                                        readonly type: "string";
                                        readonly examples: readonly ["Marvin Fuller"];
                                    };
                                    readonly between_streets: {
                                        readonly description: "The street names between which the order will be delivered.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Ackerman Crescent"];
                                    };
                                    readonly address: {
                                        readonly description: "Address of the person who will receive the order";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly street1: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Nuevo Leon 254"];
                                            };
                                            readonly street2: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Departamento 404"];
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly examples: readonly ["06100"];
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly state: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly country: {
                                                readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                                readonly type: "string";
                                                readonly examples: readonly ["MX"];
                                            };
                                            readonly residential: {
                                                readonly type: readonly ["boolean", "null"];
                                                readonly examples: readonly [true];
                                            };
                                        };
                                    };
                                    readonly parent_id: {
                                        readonly type: "string";
                                    };
                                    readonly default: {
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly deleted: {
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly metadata: {
                                        readonly description: "Metadata associated with the shipping contact";
                                        readonly maxProperties: 100;
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["ship_cont_2tKZsTYcsryyu7Ah8"];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["shipping_contact"];
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1675715413];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                };
                            };
                        };
                    };
                };
                readonly subscription: {
                    readonly description: "subscription model";
                    readonly properties: {
                        readonly billing_cycle_start: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1677626827];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly billing_cycle_end: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1677626827];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly canceled_at: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1678258162];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly canceled_reason: {
                            readonly description: "Reason for cancellation. This field appears when the subscription status is 'canceled'.";
                            readonly type: "string";
                            readonly examples: readonly ["user_cancelation"];
                        };
                        readonly card_id: {
                            readonly type: "string";
                            readonly examples: readonly ["src_2tKcHxhTz7xU5SymL"];
                        };
                        readonly charge_id: {
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["2tKcHxhTz7xU5SymL"];
                        };
                        readonly created_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1677626837];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly customer_custom_reference: {
                            readonly type: "string";
                            readonly examples: readonly ["dotnet_123456"];
                        };
                        readonly customer_id: {
                            readonly type: "string";
                            readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["gold-plan"];
                        };
                        readonly last_billing_cycle_order_id: {
                            readonly type: "string";
                            readonly examples: readonly ["ord_2tSoMP7bZJbLiq4z8"];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["subscription"];
                        };
                        readonly paused_at: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1678258162];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly plan_id: {
                            readonly type: "string";
                            readonly examples: readonly ["plan_2tXx672QLQ68CkmMn"];
                        };
                        readonly status: {
                            readonly type: "string";
                            readonly examples: readonly ["past_due"];
                        };
                        readonly subscription_start: {
                            readonly type: "integer";
                            readonly examples: readonly [1677626837];
                        };
                        readonly trial_start: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1677626837];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly trial_end: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1677626837];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                    };
                    readonly title: "subscription_response";
                    readonly type: "object";
                };
            };
            readonly required: readonly ["created_at", "id", "livemode", "name", "object"];
            readonly title: "customer response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetCustomerPaymentMethods: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly default: 20;
                    readonly format: "int32";
                    readonly maximum: 250;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The numbers of items to return, the maximum value is 250";
                };
                readonly next: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "next page";
                };
                readonly previous: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "previous page";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "General order search, e.g. by mail, reference etc.";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "get_payment_method_response";
            readonly description: "page metadata";
            readonly required: readonly ["has_more", "object"];
            readonly type: "object";
            readonly properties: {
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly discriminator: {
                            readonly mapping: {
                                readonly cash: "payment_method_cash_response";
                                readonly card: "payment_method_card_response";
                                readonly oxxo_recurrent: "payment_method_cash_response";
                                readonly spei_recurrent: "payment_method_spei_recurrent";
                            };
                            readonly propertyName: "type";
                        };
                        readonly oneOf: readonly [{
                            readonly required: readonly ["created_at", "id", "object", "type"];
                            readonly type: "object";
                            readonly description: "use for cash responses";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                };
                                readonly id: {
                                    readonly type: "string";
                                    readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                };
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["payment_source"];
                                };
                                readonly created_at: {
                                    readonly format: "int64";
                                    readonly type: "integer";
                                    readonly examples: readonly [1675715413];
                                    readonly minimum: -9223372036854776000;
                                    readonly maximum: 9223372036854776000;
                                };
                                readonly parent_id: {
                                    readonly type: "string";
                                    readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                };
                                readonly reference: {
                                    readonly type: "string";
                                    readonly examples: readonly ["93000262276908"];
                                };
                                readonly barcode: {
                                    readonly type: "string";
                                    readonly examples: readonly ["93000262276908"];
                                };
                                readonly barcode_url: {
                                    readonly type: "string";
                                    readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                                };
                                readonly expires_at: {
                                    readonly format: "int64";
                                    readonly type: "integer";
                                    readonly examples: readonly [0];
                                    readonly minimum: -9223372036854776000;
                                    readonly maximum: 9223372036854776000;
                                };
                                readonly provider: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Oxxo"];
                                };
                            };
                        }, {
                            readonly required: readonly ["created_at", "id", "object", "type"];
                            readonly type: "object";
                            readonly description: "use for card responses";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                };
                                readonly id: {
                                    readonly type: "string";
                                    readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                };
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["payment_source"];
                                };
                                readonly created_at: {
                                    readonly format: "int64";
                                    readonly type: "integer";
                                    readonly examples: readonly [1675715413];
                                    readonly minimum: -9223372036854776000;
                                    readonly maximum: 9223372036854776000;
                                };
                                readonly parent_id: {
                                    readonly type: "string";
                                    readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                };
                                readonly last4: {
                                    readonly type: "string";
                                    readonly examples: readonly ["6410"];
                                };
                                readonly bin: {
                                    readonly type: "string";
                                    readonly examples: readonly ["40276657"];
                                };
                                readonly card_type: {
                                    readonly type: "string";
                                    readonly examples: readonly ["debit"];
                                };
                                readonly exp_month: {
                                    readonly type: "string";
                                    readonly examples: readonly ["10"];
                                };
                                readonly exp_year: {
                                    readonly type: "string";
                                    readonly examples: readonly ["25"];
                                };
                                readonly brand: {
                                    readonly type: "string";
                                    readonly examples: readonly ["visa"];
                                };
                                readonly name: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Fulano Perez\""];
                                };
                                readonly default: {
                                    readonly type: "boolean";
                                };
                                readonly visible_on_checkout: {
                                    readonly type: "boolean";
                                };
                                readonly payment_source_status: {
                                    readonly type: "string";
                                    readonly examples: readonly ["active"];
                                };
                            };
                        }, {
                            readonly required: readonly ["created_at", "id", "object", "type"];
                            readonly type: "object";
                            readonly description: "use for spei responses";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                };
                                readonly id: {
                                    readonly type: "string";
                                    readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                };
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["payment_source"];
                                };
                                readonly created_at: {
                                    readonly format: "int64";
                                    readonly type: "integer";
                                    readonly examples: readonly [1675715413];
                                    readonly minimum: -9223372036854776000;
                                    readonly maximum: 9223372036854776000;
                                };
                                readonly parent_id: {
                                    readonly type: "string";
                                    readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                };
                                readonly reference: {
                                    readonly type: "string";
                                    readonly examples: readonly ["93000262276908"];
                                };
                                readonly expires_at: {
                                    readonly type: "string";
                                    readonly examples: readonly ["none"];
                                };
                            };
                        }];
                        readonly title: "get_customer_payment_method_data_response";
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetCustomers: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly default: 20;
                    readonly format: "int32";
                    readonly maximum: 250;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The numbers of items to return, the maximum value is 250";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "General order search, e.g. by mail, reference etc.";
                };
                readonly next: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "next page";
                };
                readonly previous: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "previous page";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "customers_response";
            readonly type: "object";
            readonly description: "page metadata";
            readonly required: readonly ["has_more", "object"];
            readonly properties: {
                readonly data: {
                    readonly title: "customers_data_response";
                    readonly type: "array";
                    readonly items: {
                        readonly description: "customer response";
                        readonly required: readonly ["created_at", "id", "livemode", "name", "object"];
                        readonly title: "customer response";
                        readonly type: "object";
                        readonly properties: {
                            readonly antifraud_info: {
                                readonly title: "customer_antifraud_info_response";
                                readonly type: readonly ["object", "null"];
                                readonly properties: {
                                    readonly first_paid_at: {
                                        readonly type: "integer";
                                        readonly examples: readonly [1485151007];
                                    };
                                    readonly account_created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1484040996];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                };
                            };
                            readonly corporate: {
                                readonly description: "true if the customer is a company";
                                readonly type: "boolean";
                            };
                            readonly created_at: {
                                readonly description: "Creation date of the object";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1485151007];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly custom_reference: {
                                readonly description: "Custom reference";
                                readonly type: "string";
                                readonly examples: readonly ["custom_reference"];
                            };
                            readonly default_fiscal_entity_id: {
                                readonly type: readonly ["string", "null"];
                                readonly examples: readonly ["fis_ent_2tKqqAfqPi21oCmEJ"];
                            };
                            readonly default_shipping_contact_id: {
                                readonly type: "string";
                                readonly examples: readonly ["ship_cont_2tKZsTYcsryyu7Ah8"];
                            };
                            readonly default_payment_source_id: {
                                readonly type: readonly ["string", "null"];
                                readonly examples: readonly ["src_2tHJfJ79KyUwpxTio"];
                            };
                            readonly email: {
                                readonly format: "email";
                                readonly type: "string";
                                readonly examples: readonly ["Felipe@gmail.com"];
                            };
                            readonly fiscal_entities: {
                                readonly title: "customer_fiscal_entities_response";
                                readonly description: "pagination metadata";
                                readonly required: readonly ["has_more", "object"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly has_more: {
                                        readonly description: "Indicates if there are more pages to be requested";
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly object: {
                                        readonly description: "Object type, in this case is list";
                                        readonly type: "string";
                                        readonly examples: readonly ["list"];
                                    };
                                    readonly data: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly title: "customer_fiscal_entities_data_response";
                                            readonly required: readonly ["address", "created_at", "id", "object"];
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly address: {
                                                    readonly required: readonly ["city", "postal_code", "street1"];
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly street1: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["Nuevo Leon 254"];
                                                        };
                                                        readonly street2: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["Departamento 404"];
                                                        };
                                                        readonly postal_code: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["06100"];
                                                        };
                                                        readonly city: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["Ciudad de Mexico"];
                                                        };
                                                        readonly state: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["Ciudad de Mexico"];
                                                        };
                                                        readonly country: {
                                                            readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                                            readonly type: "string";
                                                            readonly examples: readonly ["MX"];
                                                        };
                                                        readonly residential: {
                                                            readonly default: false;
                                                            readonly type: "boolean";
                                                            readonly examples: readonly [true];
                                                        };
                                                        readonly external_number: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly tax_id: {
                                                    readonly type: "string";
                                                };
                                                readonly email: {
                                                    readonly type: "string";
                                                };
                                                readonly phone: {
                                                    readonly type: "string";
                                                };
                                                readonly metadata: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                                readonly company_name: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["conekta"];
                                                };
                                                readonly id: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["ship_cont_2tKZsTYcsryyu7Ah8"];
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["shipping_contact"];
                                                };
                                                readonly created_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [1675715413];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly parent_id: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                                                };
                                                readonly default: {
                                                    readonly type: "boolean";
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly id: {
                                readonly description: "Customer's ID";
                                readonly type: "string";
                                readonly examples: readonly ["cus_2tHJfJ79KyUwpxTik"];
                            };
                            readonly livemode: {
                                readonly description: "true if the object exists in live mode or the value false if the object exists in test mode";
                                readonly type: "boolean";
                                readonly examples: readonly [true];
                            };
                            readonly name: {
                                readonly description: "Customer's name";
                                readonly type: "string";
                                readonly examples: readonly ["Felipe"];
                            };
                            readonly metadata: {
                                readonly maxProperties: 100;
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly object: {
                                readonly type: "string";
                                readonly examples: readonly ["customer"];
                            };
                            readonly payment_sources: {
                                readonly title: "customer_payment_methods_response";
                                readonly description: "page metadata";
                                readonly required: readonly ["has_more", "object"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly has_more: {
                                        readonly description: "Indicates if there are more pages to be requested";
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly object: {
                                        readonly description: "Object type, in this case is list";
                                        readonly type: "string";
                                        readonly examples: readonly ["list"];
                                    };
                                    readonly next_page_url: {
                                        readonly description: "URL of the next page.";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                                    };
                                    readonly previous_page_url: {
                                        readonly description: "Url of the previous page.";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                                    };
                                    readonly data: {
                                        readonly title: "customer_payment_methods_data";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly discriminator: {
                                                readonly mapping: {
                                                    readonly cash: "payment_method_cash_response";
                                                    readonly card: "payment_method_card_response";
                                                    readonly oxxo_recurrent: "payment_method_cash_response";
                                                    readonly spei_recurrent: "payment_method_spei_recurrent";
                                                };
                                                readonly propertyName: "type";
                                            };
                                            readonly oneOf: readonly [{
                                                readonly required: readonly ["created_at", "id", "object", "type"];
                                                readonly type: "object";
                                                readonly description: "use for cash responses";
                                                readonly properties: {
                                                    readonly type: {
                                                        readonly type: "string";
                                                    };
                                                    readonly id: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                                    };
                                                    readonly object: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["payment_source"];
                                                    };
                                                    readonly created_at: {
                                                        readonly format: "int64";
                                                        readonly type: "integer";
                                                        readonly examples: readonly [1675715413];
                                                        readonly minimum: -9223372036854776000;
                                                        readonly maximum: 9223372036854776000;
                                                    };
                                                    readonly parent_id: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                                    };
                                                    readonly reference: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["93000262276908"];
                                                    };
                                                    readonly barcode: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["93000262276908"];
                                                    };
                                                    readonly barcode_url: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                                                    };
                                                    readonly expires_at: {
                                                        readonly format: "int64";
                                                        readonly type: "integer";
                                                        readonly examples: readonly [0];
                                                        readonly minimum: -9223372036854776000;
                                                        readonly maximum: 9223372036854776000;
                                                    };
                                                    readonly provider: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["Oxxo"];
                                                    };
                                                };
                                            }, {
                                                readonly required: readonly ["created_at", "id", "object", "type"];
                                                readonly type: "object";
                                                readonly description: "use for card responses";
                                                readonly properties: {
                                                    readonly type: {
                                                        readonly type: "string";
                                                    };
                                                    readonly id: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                                    };
                                                    readonly object: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["payment_source"];
                                                    };
                                                    readonly created_at: {
                                                        readonly format: "int64";
                                                        readonly type: "integer";
                                                        readonly examples: readonly [1675715413];
                                                        readonly minimum: -9223372036854776000;
                                                        readonly maximum: 9223372036854776000;
                                                    };
                                                    readonly parent_id: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                                    };
                                                    readonly last4: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["6410"];
                                                    };
                                                    readonly bin: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["40276657"];
                                                    };
                                                    readonly card_type: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["debit"];
                                                    };
                                                    readonly exp_month: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["10"];
                                                    };
                                                    readonly exp_year: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["25"];
                                                    };
                                                    readonly brand: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["visa"];
                                                    };
                                                    readonly name: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["Fulano Perez\""];
                                                    };
                                                    readonly default: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly visible_on_checkout: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly payment_source_status: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["active"];
                                                    };
                                                };
                                            }, {
                                                readonly required: readonly ["created_at", "id", "object", "type"];
                                                readonly type: "object";
                                                readonly description: "use for spei responses";
                                                readonly properties: {
                                                    readonly type: {
                                                        readonly type: "string";
                                                    };
                                                    readonly id: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                                    };
                                                    readonly object: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["payment_source"];
                                                    };
                                                    readonly created_at: {
                                                        readonly format: "int64";
                                                        readonly type: "integer";
                                                        readonly examples: readonly [1675715413];
                                                        readonly minimum: -9223372036854776000;
                                                        readonly maximum: 9223372036854776000;
                                                    };
                                                    readonly parent_id: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                                    };
                                                    readonly reference: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["93000262276908"];
                                                    };
                                                    readonly expires_at: {
                                                        readonly type: "string";
                                                        readonly examples: readonly ["none"];
                                                    };
                                                };
                                            }];
                                            readonly title: "customer_payment_methods_data";
                                        };
                                    };
                                };
                            };
                            readonly phone: {
                                readonly description: "Customer's phone number";
                                readonly type: "string";
                                readonly examples: readonly ["+5215555555555"];
                            };
                            readonly shipping_contacts: {
                                readonly description: "pagination metadata";
                                readonly required: readonly ["has_more", "object"];
                                readonly title: "pagination metadata";
                                readonly type: "object";
                                readonly properties: {
                                    readonly has_more: {
                                        readonly description: "Indicates if there are more pages to be requested";
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly object: {
                                        readonly description: "Object type, in this case is list";
                                        readonly type: "string";
                                        readonly examples: readonly ["list"];
                                    };
                                    readonly data: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly title: "customer_shipping_contacts_data_response";
                                            readonly description: "[Shipping](https://developers.conekta.com/v2.1.0/reference/createcustomershippingcontacts)\ndetails, required in case of sending a shipping. If we do not receive a shipping_contact on the order, the default shipping_contact of the customer will be used.";
                                            readonly required: readonly ["address", "created_at", "id", "object"];
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly phone: {
                                                    readonly description: "Phone contact";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["+525511223344"];
                                                };
                                                readonly receiver: {
                                                    readonly description: "Name of the person who will receive the order";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Marvin Fuller"];
                                                };
                                                readonly between_streets: {
                                                    readonly description: "The street names between which the order will be delivered.";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Ackerman Crescent"];
                                                };
                                                readonly address: {
                                                    readonly description: "Address of the person who will receive the order";
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly street1: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["Nuevo Leon 254"];
                                                        };
                                                        readonly street2: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["Departamento 404"];
                                                        };
                                                        readonly postal_code: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["06100"];
                                                        };
                                                        readonly city: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["Ciudad de Mexico"];
                                                        };
                                                        readonly state: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["Ciudad de Mexico"];
                                                        };
                                                        readonly country: {
                                                            readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                                            readonly type: "string";
                                                            readonly examples: readonly ["MX"];
                                                        };
                                                        readonly residential: {
                                                            readonly type: readonly ["boolean", "null"];
                                                            readonly examples: readonly [true];
                                                        };
                                                    };
                                                };
                                                readonly parent_id: {
                                                    readonly type: "string";
                                                };
                                                readonly default: {
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly deleted: {
                                                    readonly type: readonly ["boolean", "null"];
                                                };
                                                readonly metadata: {
                                                    readonly description: "Metadata associated with the shipping contact";
                                                    readonly maxProperties: 100;
                                                    readonly type: "object";
                                                    readonly additionalProperties: true;
                                                };
                                                readonly id: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["ship_cont_2tKZsTYcsryyu7Ah8"];
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["shipping_contact"];
                                                };
                                                readonly created_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [1675715413];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly subscription: {
                                readonly description: "subscription model";
                                readonly title: "subscription_response";
                                readonly type: "object";
                                readonly properties: {
                                    readonly billing_cycle_start: {
                                        readonly format: "int64";
                                        readonly type: readonly ["integer", "null"];
                                        readonly examples: readonly [1677626827];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly billing_cycle_end: {
                                        readonly format: "int64";
                                        readonly type: readonly ["integer", "null"];
                                        readonly examples: readonly [1677626827];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly canceled_at: {
                                        readonly format: "int64";
                                        readonly type: readonly ["integer", "null"];
                                        readonly examples: readonly [1678258162];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly canceled_reason: {
                                        readonly description: "Reason for cancellation. This field appears when the subscription status is 'canceled'.";
                                        readonly type: "string";
                                        readonly examples: readonly ["user_cancelation"];
                                    };
                                    readonly card_id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["src_2tKcHxhTz7xU5SymL"];
                                    };
                                    readonly charge_id: {
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["2tKcHxhTz7xU5SymL"];
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1677626837];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly customer_custom_reference: {
                                        readonly type: "string";
                                        readonly examples: readonly ["dotnet_123456"];
                                    };
                                    readonly customer_id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["gold-plan"];
                                    };
                                    readonly last_billing_cycle_order_id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["ord_2tSoMP7bZJbLiq4z8"];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["subscription"];
                                    };
                                    readonly paused_at: {
                                        readonly format: "int64";
                                        readonly type: readonly ["integer", "null"];
                                        readonly examples: readonly [1678258162];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly plan_id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["plan_2tXx672QLQ68CkmMn"];
                                    };
                                    readonly status: {
                                        readonly type: "string";
                                        readonly examples: readonly ["past_due"];
                                    };
                                    readonly subscription_start: {
                                        readonly type: "integer";
                                        readonly examples: readonly [1677626837];
                                    };
                                    readonly trial_start: {
                                        readonly format: "int64";
                                        readonly type: readonly ["integer", "null"];
                                        readonly examples: readonly [1677626837];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly trial_end: {
                                        readonly format: "int64";
                                        readonly type: readonly ["integer", "null"];
                                        readonly examples: readonly [1677626837];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                };
                            };
                        };
                    };
                };
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetEvent: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "event model";
            readonly properties: {
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1661445644];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly data: {
                    readonly additionalProperties: true;
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["event"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["webhook_ping"];
                };
                readonly webhook_logs: {
                    readonly items: {
                        readonly properties: {
                            readonly failed_attempts: {
                                readonly type: "integer";
                                readonly examples: readonly [10];
                            };
                            readonly id: {
                                readonly type: "string";
                                readonly examples: readonly ["webhl_2svd2sh6GbqzyWBNZ"];
                            };
                            readonly last_attempted_at: {
                                readonly type: "integer";
                                readonly examples: readonly [1669651274];
                            };
                            readonly last_http_response_status: {
                                readonly format: "int32";
                                readonly type: "integer";
                                readonly examples: readonly [200];
                                readonly minimum: -2147483648;
                                readonly maximum: 2147483647;
                            };
                            readonly object: {
                                readonly type: "string";
                                readonly examples: readonly ["webhook_log"];
                            };
                            readonly response_data: {
                                readonly additionalProperties: true;
                                readonly maxProperties: 100;
                                readonly type: "object";
                            };
                            readonly url: {
                                readonly format: "uri";
                                readonly type: "string";
                                readonly examples: readonly ["https://username:password@mockoon.stg.conekta.io/payments-api/cash/merchant_approval"];
                            };
                        };
                        readonly title: "WebhookLog";
                        readonly type: "object";
                    };
                    readonly type: "array";
                };
                readonly webhook_status: {
                    readonly type: "string";
                    readonly examples: readonly ["successful"];
                };
            };
            readonly title: "event_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetEvents: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly default: 20;
                    readonly format: "int32";
                    readonly maximum: 250;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The numbers of items to return, the maximum value is 250";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "General order search, e.g. by mail, reference etc.";
                };
                readonly next: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "next page";
                };
                readonly previous: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "previous page";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "get_events_response";
            readonly description: "page metadata";
            readonly required: readonly ["has_more", "object"];
            readonly type: "object";
            readonly properties: {
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly description: "event model";
                        readonly title: "event_response";
                        readonly type: "object";
                        readonly properties: {
                            readonly created_at: {
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1661445644];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly data: {
                                readonly maxProperties: 100;
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly id: {
                                readonly type: "string";
                                readonly examples: readonly ["6307a60c41de27127515a575"];
                            };
                            readonly livemode: {
                                readonly type: "boolean";
                                readonly examples: readonly [true];
                            };
                            readonly object: {
                                readonly type: "string";
                                readonly examples: readonly ["event"];
                            };
                            readonly type: {
                                readonly type: "string";
                                readonly examples: readonly ["webhook_ping"];
                            };
                            readonly webhook_logs: {
                                readonly type: "array";
                                readonly items: {
                                    readonly title: "WebhookLog";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly failed_attempts: {
                                            readonly type: "integer";
                                            readonly examples: readonly [10];
                                        };
                                        readonly id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["webhl_2svd2sh6GbqzyWBNZ"];
                                        };
                                        readonly last_attempted_at: {
                                            readonly type: "integer";
                                            readonly examples: readonly [1669651274];
                                        };
                                        readonly last_http_response_status: {
                                            readonly format: "int32";
                                            readonly type: "integer";
                                            readonly examples: readonly [200];
                                            readonly minimum: -2147483648;
                                            readonly maximum: 2147483647;
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["webhook_log"];
                                        };
                                        readonly response_data: {
                                            readonly maxProperties: 100;
                                            readonly type: "object";
                                            readonly additionalProperties: true;
                                        };
                                        readonly url: {
                                            readonly format: "uri";
                                            readonly type: "string";
                                            readonly examples: readonly ["https://username:password@mockoon.stg.conekta.io/payments-api/cash/merchant_approval"];
                                        };
                                    };
                                };
                            };
                            readonly webhook_status: {
                                readonly type: "string";
                                readonly examples: readonly ["successful"];
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLogById: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "log model";
            readonly properties: {
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1661445644];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                };
                readonly ip_address: {
                    readonly format: "ipv4";
                    readonly type: "string";
                    readonly examples: readonly ["54.235.131.48"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly loggable_id: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["ord_87632467832"];
                };
                readonly loggable_type: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["order"];
                };
                readonly method: {
                    readonly type: "string";
                    readonly examples: readonly ["POST"];
                };
                readonly oauth_token_id: {
                    readonly type: readonly ["string", "null"];
                };
                readonly query_string: {
                    readonly additionalProperties: true;
                    readonly type: "object";
                };
                readonly related: {
                    readonly type: "string";
                    readonly examples: readonly ["FilterResource"];
                };
                readonly request_body: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly request_headers: {
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                    readonly type: "object";
                };
                readonly response_body: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly response_headers: {
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                    readonly type: "object";
                };
                readonly searchable_tags: {
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly examples: readonly ["6307a60c41de27127515a575", "6307a60c41de27127515a571"];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["200"];
                };
                readonly updated_at: {
                    readonly type: "string";
                    readonly examples: readonly ["2022-08-25T16:40:44.887Z"];
                };
                readonly url: {
                    readonly type: "string";
                    readonly examples: readonly ["/filter_resource"];
                };
                readonly user_account_id: {
                    readonly type: "string";
                    readonly examples: readonly ["5a0b7001edbb6e1725b0b2c6"];
                };
                readonly version: {
                    readonly type: "string";
                    readonly examples: readonly ["2.1.0"];
                };
            };
            readonly required: readonly ["created_at", "id", "livemode"];
            readonly title: "log response for request";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetLogs: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly default: 20;
                    readonly format: "int32";
                    readonly maximum: 250;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The numbers of items to return, the maximum value is 250";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "General order search, e.g. by mail, reference etc.";
                };
                readonly next: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "next page";
                };
                readonly previous: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "previous page";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "logs model";
            readonly properties: {
                readonly has_more: {
                    readonly description: "True, if there are more pages.";
                    readonly readOnly: true;
                    readonly type: "boolean";
                };
                readonly object: {
                    readonly description: "The object type";
                    readonly readOnly: true;
                    readonly type: "string";
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                };
                readonly data: {
                    readonly description: "set to page results.";
                    readonly items: {
                        readonly properties: {
                            readonly created_at: {
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1661445644];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly id: {
                                readonly type: "string";
                                readonly examples: readonly ["6307a60c41de27127515a575"];
                            };
                            readonly ip_address: {
                                readonly format: "ipv4";
                                readonly type: "string";
                                readonly examples: readonly ["54.235.131.48"];
                            };
                            readonly livemode: {
                                readonly type: "boolean";
                                readonly examples: readonly [true];
                            };
                            readonly loggable_id: {
                                readonly type: readonly ["string", "null"];
                                readonly examples: readonly ["ord_87632467832"];
                            };
                            readonly loggable_type: {
                                readonly type: readonly ["string", "null"];
                                readonly examples: readonly ["order"];
                            };
                            readonly method: {
                                readonly type: "string";
                                readonly examples: readonly ["POST"];
                            };
                            readonly oauth_token_id: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly query_string: {
                                readonly additionalProperties: true;
                                readonly type: "object";
                            };
                            readonly related: {
                                readonly type: "string";
                                readonly examples: readonly ["FilterResource"];
                            };
                            readonly request_body: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly request_headers: {
                                readonly additionalProperties: {
                                    readonly type: "string";
                                };
                                readonly type: "object";
                            };
                            readonly response_body: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly response_headers: {
                                readonly additionalProperties: {
                                    readonly type: "string";
                                };
                                readonly type: "object";
                            };
                            readonly searchable_tags: {
                                readonly items: {
                                    readonly type: "string";
                                };
                                readonly type: "array";
                                readonly examples: readonly ["6307a60c41de27127515a575", "6307a60c41de27127515a571"];
                            };
                            readonly status: {
                                readonly type: "string";
                                readonly examples: readonly ["200"];
                            };
                            readonly updated_at: {
                                readonly type: "string";
                                readonly examples: readonly ["2022-08-25T16:40:44.887Z"];
                            };
                            readonly url: {
                                readonly type: "string";
                                readonly examples: readonly ["/filter_resource"];
                            };
                            readonly user_account_id: {
                                readonly type: "string";
                                readonly examples: readonly ["5a0b7001edbb6e1725b0b2c6"];
                            };
                            readonly version: {
                                readonly type: "string";
                                readonly examples: readonly ["2.1.0"];
                            };
                        };
                        readonly title: "logs_response_data";
                        readonly type: "object";
                    };
                    readonly type: readonly ["array", "null"];
                };
            };
            readonly title: "log response for request";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetOrderById: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "order response";
            readonly properties: {
                readonly amount: {
                    readonly description: "The total amount to be collected in cents";
                    readonly type: "integer";
                    readonly examples: readonly [21605];
                };
                readonly amount_refunded: {
                    readonly description: "The total amount refunded in cents";
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly channel: {
                    readonly properties: {
                        readonly segment: {
                            readonly type: "string";
                            readonly examples: readonly ["Checkout"];
                        };
                        readonly checkout_request_id: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                        };
                        readonly checkout_request_type: {
                            readonly type: "string";
                            readonly examples: readonly ["HostedPayment"];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                        };
                    };
                    readonly type: "object";
                };
                readonly charges: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "charges_data_response";
                                readonly type: "object";
                                readonly properties: {
                                    readonly amount: {
                                        readonly type: "integer";
                                        readonly examples: readonly [4321];
                                    };
                                    readonly channel: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly segment: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Checkout"];
                                            };
                                            readonly checkout_request_id: {
                                                readonly type: "string";
                                                readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                                            };
                                            readonly checkout_request_type: {
                                                readonly type: "string";
                                                readonly examples: readonly ["HostedPayment"];
                                            };
                                            readonly id: {
                                                readonly type: "string";
                                                readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                                            };
                                        };
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1676386026];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly currency: {
                                        readonly type: "string";
                                        readonly examples: readonly ["MXN"];
                                    };
                                    readonly customer_id: {
                                        readonly type: "string";
                                    };
                                    readonly description: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Payment from order"];
                                    };
                                    readonly device_fingerprint: {
                                        readonly type: "string";
                                        readonly examples: readonly ["6FR3chaU4Y1nGAW5NAGd1rcjAKa142Ba"];
                                    };
                                    readonly failure_code: {
                                        readonly type: "string";
                                        readonly examples: readonly ["suspected_fraud"];
                                    };
                                    readonly failure_message: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Este cargo ha sido declinado porque el comportamiento del comprador es sospechoso."];
                                    };
                                    readonly id: {
                                        readonly description: "Charge ID";
                                        readonly type: "string";
                                        readonly examples: readonly ["63efa757cf65380001aec040"];
                                    };
                                    readonly livemode: {
                                        readonly description: "Whether the charge was made in live mode or not";
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["charge"];
                                    };
                                    readonly order_id: {
                                        readonly description: "Order ID";
                                        readonly type: "string";
                                        readonly examples: readonly ["ord_2tN73UdUSNrYRPD9r"];
                                    };
                                    readonly paid_at: {
                                        readonly description: "Payment date";
                                        readonly format: "int64";
                                        readonly type: readonly ["integer", "null"];
                                        readonly examples: readonly [1676390742];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly payment_method: {
                                        readonly discriminator: {
                                            readonly mapping: {
                                                readonly cash_payment: "payment_method_cash";
                                                readonly card_payment: "payment_method_card";
                                                readonly bank_transfer_payment: "payment_method_bank_transfer";
                                            };
                                            readonly propertyName: "object";
                                        };
                                        readonly oneOf: readonly [{
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for cash responses";
                                            readonly title: "charge_data_payment_method_cash_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly auth_code: {
                                                    readonly type: readonly ["integer", "null"];
                                                    readonly examples: readonly [542563];
                                                };
                                                readonly cashier_id: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly examples: readonly ["OINM01010"];
                                                };
                                                readonly reference: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["93000262276908"];
                                                };
                                                readonly barcode_url: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                                                };
                                                readonly expires_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [0];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly service_name: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["OxxoPay"];
                                                };
                                                readonly store: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly examples: readonly ["10MON50EDI"];
                                                };
                                                readonly store_name: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["OXXO"];
                                                };
                                            };
                                        }, {
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for card responses";
                                            readonly title: "charge_data_payment_method_card_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly account_type: {
                                                    readonly description: "Account type of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Credit"];
                                                };
                                                readonly auth_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["867372"];
                                                };
                                                readonly brand: {
                                                    readonly description: "Brand of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["visa"];
                                                };
                                                readonly contract_id: {
                                                    readonly description: "Id sent for recurrent charges.";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["S781317595"];
                                                };
                                                readonly country: {
                                                    readonly description: "Country of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["MX"];
                                                };
                                                readonly exp_month: {
                                                    readonly description: "Expiration month of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["02"];
                                                };
                                                readonly exp_year: {
                                                    readonly description: "Expiration year of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["2026"];
                                                };
                                                readonly fraud_indicators: {
                                                    readonly type: "array";
                                                    readonly items: {};
                                                };
                                                readonly issuer: {
                                                    readonly description: "Issuer of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["BANAMEX"];
                                                };
                                                readonly last4: {
                                                    readonly description: "Last 4 digits of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["4242"];
                                                };
                                                readonly name: {
                                                    readonly description: "Name of the cardholder";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Fulanito Perez"];
                                                };
                                            };
                                        }, {
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for bank transfer responses";
                                            readonly title: "charge_data_payment_method_bank_transfer_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly bank: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["STP"];
                                                };
                                                readonly clabe: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["646180111805034237"];
                                                };
                                                readonly description: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly executed_at: {
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly expires_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [1683053729];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly issuing_account_bank: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_number: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_holder_name: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_tax_id: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly payment_attempts: {
                                                    readonly type: "array";
                                                    readonly items: {};
                                                };
                                                readonly receiving_account_holder_name: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly receiving_account_number: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["646180111805034237"];
                                                };
                                                readonly receiving_account_bank: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["STP"];
                                                };
                                                readonly receiving_account_tax_id: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly reference_number: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly tracking_code: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                        }];
                                        readonly title: "charge_response_payment_method";
                                    };
                                    readonly reference_id: {
                                        readonly description: "Reference ID of the charge";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["ref_2tN73UdUSNrYRPD9r"];
                                    };
                                    readonly refunds: {
                                        readonly title: "charge_response_refunds";
                                        readonly type: readonly ["object", "null"];
                                        readonly description: "page metadata";
                                        readonly required: readonly ["has_more", "object"];
                                        readonly properties: {
                                            readonly has_more: {
                                                readonly description: "Indicates if there are more pages to be requested";
                                                readonly type: "boolean";
                                                readonly examples: readonly [false];
                                            };
                                            readonly object: {
                                                readonly description: "Object type, in this case is list";
                                                readonly type: "string";
                                                readonly examples: readonly ["list"];
                                            };
                                            readonly next_page_url: {
                                                readonly description: "URL of the next page.";
                                                readonly type: readonly ["string", "null"];
                                                readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                                            };
                                            readonly previous_page_url: {
                                                readonly description: "Url of the previous page.";
                                                readonly type: readonly ["string", "null"];
                                                readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                                            };
                                            readonly data: {
                                                readonly description: "refunds";
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly required: readonly ["amount", "created_at", "id", "object"];
                                                    readonly title: "charge_response_refunds_data";
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly amount: {
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [-15000];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly auth_code: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["867372"];
                                                        };
                                                        readonly created_at: {
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [1678226878];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly expires_at: {
                                                            readonly description: "refund expiration date";
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [1678226878];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly id: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["6407b5bee1329a000175ba11"];
                                                        };
                                                        readonly object: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["refund"];
                                                        };
                                                        readonly status: {
                                                            readonly description: "refund status";
                                                            readonly type: "string";
                                                            readonly examples: readonly ["pending"];
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly status: {
                                        readonly type: "string";
                                        readonly examples: readonly ["pending_payment"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly checkout: {
                    readonly properties: {
                        readonly allowed_payment_methods: {
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly type: "array";
                        };
                        readonly can_not_expire: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly emails_sent: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly exclude_card_networks: {
                            readonly items: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly type: "array";
                        };
                        readonly expires_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1676613599];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly failure_url: {
                            readonly type: "string";
                            readonly examples: readonly ["http://187.216.228.66:2222/SysVentasPagos/Acceso.aspx"];
                        };
                        readonly force_3ds_flow: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                        };
                        readonly is_redirect_on_failure: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly livemode: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                        readonly monthly_installments_enabled: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly monthly_installments_options: {
                            readonly items: {
                                readonly format: "int8";
                                readonly type: "integer";
                                readonly minimum: -128;
                                readonly maximum: 127;
                            };
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["ord-2tNDzhA4Akmzj11AS"];
                        };
                        readonly needs_shipping_contact: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["checkout"];
                        };
                        readonly on_demand_enabled: {
                            readonly type: readonly ["boolean", "null"];
                            readonly examples: readonly [true];
                        };
                        readonly paid_payments_count: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly recurrent: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly redirection_time: {
                            readonly description: "number of seconds to wait before redirecting to the success_url";
                            readonly format: "int8";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [2];
                            readonly minimum: -128;
                            readonly maximum: 127;
                        };
                        readonly slug: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a85194c43971ecea35cc519bb"];
                        };
                        readonly sms_sent: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly success_url: {
                            readonly type: "string";
                            readonly examples: readonly ["http://187.216.228.66:2222/SysVentasPagos/Acceso.aspx"];
                        };
                        readonly starts_at: {
                            readonly type: "integer";
                            readonly examples: readonly [1676354400];
                        };
                        readonly status: {
                            readonly type: "string";
                            readonly examples: readonly ["Issued"];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly examples: readonly ["HostedPayment"];
                        };
                        readonly url: {
                            readonly type: "string";
                            readonly examples: readonly ["https://pay.stg.conekta.io/checkout/6fca054a85194c43971ecea35cc519bb"];
                        };
                    };
                    readonly type: "object";
                };
                readonly created_at: {
                    readonly description: "The time at which the object was created in seconds since the Unix epoch";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1676328434];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly description: "The three-letter ISO 4217 currency code. The currency of the order.";
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly customer_info: {
                    readonly type: "object";
                    readonly title: "order_customer_info_response";
                    readonly properties: {
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["customer_info"];
                        };
                        readonly customer_custom_reference: {
                            readonly description: "Custom reference";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["custom_reference"];
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["DevTest"];
                        };
                        readonly email: {
                            readonly format: "email";
                            readonly type: "string";
                            readonly examples: readonly ["test@conekta.com"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["5522997233"];
                        };
                        readonly corporate: {
                            readonly default: false;
                            readonly type: "boolean";
                        };
                        readonly customer_id: {
                            readonly type: "string";
                            readonly examples: readonly ["cus_23874283647"];
                        };
                    };
                };
                readonly discount_lines: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "discount_lines_data_response";
                                readonly description: "List of discounts that apply to the order.";
                                readonly required: readonly ["amount", "code", "id", "object", "parent_id", "type"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly amount: {
                                        readonly description: "The amount to be deducted from the total sum of all payments, in cents.";
                                        readonly format: "int64";
                                        readonly minimum: 0;
                                        readonly type: "integer";
                                        readonly examples: readonly [500];
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly code: {
                                        readonly description: "Discount code.";
                                        readonly type: "string";
                                        readonly examples: readonly ["123"];
                                    };
                                    readonly type: {
                                        readonly description: "It can be 'loyalty', 'campaign', 'coupon' o 'sign'";
                                        readonly type: "string";
                                        readonly examples: readonly ["loyalty"];
                                    };
                                    readonly id: {
                                        readonly description: "The discount line id";
                                        readonly type: "string";
                                        readonly examples: readonly ["dis_lin_2tQQ58HPgPw7StE8z"];
                                    };
                                    readonly object: {
                                        readonly description: "The object name";
                                        readonly type: "string";
                                        readonly examples: readonly ["discount_line"];
                                    };
                                    readonly parent_id: {
                                        readonly description: "The order id";
                                        readonly type: "string";
                                        readonly examples: readonly ["ord_2tPAmKCEJqh8RE6nY"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly fiscal_entity: {
                    readonly description: "Fiscal entity of the order, Currently it is a purely informative field";
                    readonly properties: {
                        readonly address: {
                            readonly description: "Address of the fiscal entity";
                            readonly title: "order_fiscal_entity_address_response";
                            readonly required: readonly ["city", "country", "external_number", "postal_code", "street1"];
                            readonly type: "object";
                            readonly properties: {
                                readonly street1: {
                                    readonly description: "Street name and number";
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly description: "Street name and number";
                                    readonly type: readonly ["string", "null"];
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly description: "Postal code";
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly description: "City";
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly description: "State";
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly external_number: {
                                    readonly description: "External number";
                                    readonly type: "string";
                                    readonly examples: readonly ["123"];
                                };
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["fiscal_entity_address"];
                                };
                            };
                        };
                        readonly email: {
                            readonly description: "Email of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["test@gmail.com"];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly description: "Metadata associated with the fiscal entity";
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                        readonly name: {
                            readonly description: "Name of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["Conekta Inc"];
                        };
                        readonly tax_id: {
                            readonly description: "Tax ID of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["324234234"];
                        };
                        readonly id: {
                            readonly description: "ID of the fiscal entity";
                            readonly type: "string";
                            readonly examples: readonly ["fis_ent_2tN85VYaSMyDvjB3M"];
                        };
                        readonly created_at: {
                            readonly description: "The time at which the object was created in seconds since the Unix epoch";
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1676328434];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["fiscal_entity"];
                        };
                        readonly phone: {
                            readonly description: "Phone of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["+525511223344"];
                        };
                    };
                    readonly required: readonly ["address", "created_at", "id", "object"];
                    readonly title: "order_fiscal_entity_response";
                    readonly type: readonly ["object", "null"];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tMtQQpDvfnNjiuFG"];
                };
                readonly is_refundable: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly line_items: {
                    readonly title: "order_response_products";
                    readonly description: "page metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly next_page_url: {
                            readonly description: "URL of the next page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                        };
                        readonly previous_page_url: {
                            readonly description: "Url of the previous page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "product_data_response";
                                readonly required: readonly ["name", "quantity", "unit_price"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly antifraud_info: {
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly brand: {
                                        readonly description: "The brand of the item.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Cohiba"];
                                    };
                                    readonly description: {
                                        readonly description: "Short description of the item";
                                        readonly maxLength: 250;
                                        readonly type: "string";
                                        readonly examples: readonly ["Imported From Mex."];
                                    };
                                    readonly metadata: {
                                        readonly description: "It is a key/value hash that can hold custom fields. Maximum 100 elements and allows special characters.";
                                        readonly maxProperties: 100;
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly name: {
                                        readonly description: "The name of the item. It will be displayed in the order.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Box of Cohiba S1s"];
                                    };
                                    readonly quantity: {
                                        readonly description: "The quantity of the item in the order.";
                                        readonly format: "int32";
                                        readonly minimum: 1;
                                        readonly type: "integer";
                                        readonly examples: readonly [1];
                                        readonly maximum: 2147483647;
                                    };
                                    readonly sku: {
                                        readonly description: "The stock keeping unit for the item. It is used to identify the item in the order.";
                                        readonly type: "string";
                                        readonly examples: readonly ["XYZ12345"];
                                    };
                                    readonly tags: {
                                        readonly description: "List of tags for the item. It is used to identify the item in the order.";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                        readonly examples: readonly ["food", "mexican food"];
                                    };
                                    readonly unit_price: {
                                        readonly description: "The price of the item in cents.";
                                        readonly format: "int32";
                                        readonly minimum: 0;
                                        readonly type: "integer";
                                        readonly examples: readonly [20000];
                                        readonly maximum: 2147483647;
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                    };
                                    readonly parent_id: {
                                        readonly type: "string";
                                    };
                                };
                            };
                        };
                    };
                };
                readonly livemode: {
                    readonly description: "Whether the object exists in live mode or test mode";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly description: "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.";
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly next_action: {
                    readonly description: "contains the following attributes that will guide to continue the flow";
                    readonly properties: {
                        readonly redirect_to_url: {
                            readonly description: "contains the following attributes that will guide to continue the flow";
                            readonly properties: {
                                readonly url: {
                                    readonly description: "pay.conekta.com/{id} Indicates the url of the Conekta component to authenticate the flow through 3DS2.";
                                    readonly format: "uri";
                                    readonly type: "string";
                                    readonly examples: readonly ["https://pay.conekta.com/6fca054a85194c43971ecea35cc519bb"];
                                };
                                readonly return_url: {
                                    readonly description: "Indicates the url to which the 3DS2 flow returns at the end, when the integration is redirected.";
                                    readonly format: "uri";
                                    readonly type: "string";
                                    readonly examples: readonly ["https://my-website.com\""];
                                };
                            };
                            readonly type: "object";
                        };
                        readonly type: {
                            readonly description: "Indicates the type of action to be taken";
                            readonly type: "string";
                            readonly examples: readonly ["redirect_to_url"];
                        };
                    };
                    readonly title: "order_next_action_response";
                    readonly type: "object";
                };
                readonly object: {
                    readonly description: "String representing the object’s type. Objects of the same type share the same value.";
                    readonly type: "string";
                    readonly examples: readonly ["order"];
                };
                readonly payment_status: {
                    readonly description: "The payment status of the order.";
                    readonly type: "string";
                    readonly examples: readonly ["paid"];
                };
                readonly processing_mode: {
                    readonly description: "Indicates the processing mode for the order, either ecommerce, recurrent or validation.";
                    readonly type: "string";
                    readonly examples: readonly ["ecommerce"];
                };
                readonly shipping_contact: {
                    readonly type: "object";
                    readonly description: "Contains the detail of the shipping addresses that the client has active or has used in Conekta";
                    readonly properties: {
                        readonly created_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1675715413];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["adr_1234567890"];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["shipping_contact"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["+525511223344"];
                        };
                        readonly receiver: {
                            readonly type: "string";
                            readonly examples: readonly ["Marvin Fuller"];
                        };
                        readonly between_streets: {
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["Ackerman Crescent"];
                        };
                        readonly address: {
                            readonly type: "object";
                            readonly properties: {
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["shipping_address"];
                                };
                                readonly street1: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly residential: {
                                    readonly type: readonly ["boolean", "null"];
                                    readonly examples: readonly [true];
                                };
                            };
                        };
                        readonly parent_id: {
                            readonly type: "string";
                        };
                        readonly default: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly metadata: {
                            readonly description: "Metadata associated with the shipping contact";
                            readonly maxProperties: 100;
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                        readonly deleted: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                    };
                };
                readonly updated_at: {
                    readonly description: "The time at which the object was last updated in seconds since the Unix epoch";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1676328434];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
            readonly title: "order_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetOrders: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly default: 20;
                    readonly format: "int32";
                    readonly maximum: 250;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The numbers of items to return, the maximum value is 250";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "General order search, e.g. by mail, reference etc.";
                };
                readonly next: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "next page";
                };
                readonly previous: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "previous page";
                };
                readonly payment_status: {
                    readonly type: "string";
                    readonly examples: readonly ["paid"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Filters by order status";
                };
                readonly "last_payment_info.status": {
                    readonly type: "string";
                    readonly examples: readonly ["pending_payment"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Filters by last payment info status";
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1612137600];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "created equal to";
                };
                readonly "created_at.gte": {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1612137600];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "created at greater than or equal to";
                };
                readonly "created_at.lte": {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1612137600];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "created at less than or equal to";
                };
                readonly "updated_at.gte": {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1612137600];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "updated at greater than or equal to";
                };
                readonly "updated_at.lte": {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1612137600];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "updated at less than or equal to";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "get_orders_response";
            readonly required: readonly ["data", "has_more", "object"];
            readonly type: "object";
            readonly description: "page metadata";
            readonly properties: {
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly description: "order response";
                        readonly title: "order_response";
                        readonly type: "object";
                        readonly properties: {
                            readonly amount: {
                                readonly description: "The total amount to be collected in cents";
                                readonly type: "integer";
                                readonly examples: readonly [21605];
                            };
                            readonly amount_refunded: {
                                readonly description: "The total amount refunded in cents";
                                readonly type: "integer";
                                readonly examples: readonly [0];
                            };
                            readonly channel: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly segment: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Checkout"];
                                    };
                                    readonly checkout_request_id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                                    };
                                    readonly checkout_request_type: {
                                        readonly type: "string";
                                        readonly examples: readonly ["HostedPayment"];
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                                    };
                                };
                            };
                            readonly charges: {
                                readonly description: "pagination metadata";
                                readonly required: readonly ["has_more", "object"];
                                readonly title: "pagination metadata";
                                readonly type: "object";
                                readonly properties: {
                                    readonly has_more: {
                                        readonly description: "Indicates if there are more pages to be requested";
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly object: {
                                        readonly description: "Object type, in this case is list";
                                        readonly type: "string";
                                        readonly examples: readonly ["list"];
                                    };
                                    readonly data: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly title: "charges_data_response";
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly amount: {
                                                    readonly type: "integer";
                                                    readonly examples: readonly [4321];
                                                };
                                                readonly channel: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly segment: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["Checkout"];
                                                        };
                                                        readonly checkout_request_id: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                                                        };
                                                        readonly checkout_request_type: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["HostedPayment"];
                                                        };
                                                        readonly id: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                                                        };
                                                    };
                                                };
                                                readonly created_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [1676386026];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly currency: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["MXN"];
                                                };
                                                readonly customer_id: {
                                                    readonly type: "string";
                                                };
                                                readonly description: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Payment from order"];
                                                };
                                                readonly device_fingerprint: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["6FR3chaU4Y1nGAW5NAGd1rcjAKa142Ba"];
                                                };
                                                readonly failure_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["suspected_fraud"];
                                                };
                                                readonly failure_message: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Este cargo ha sido declinado porque el comportamiento del comprador es sospechoso."];
                                                };
                                                readonly id: {
                                                    readonly description: "Charge ID";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["63efa757cf65380001aec040"];
                                                };
                                                readonly livemode: {
                                                    readonly description: "Whether the charge was made in live mode or not";
                                                    readonly type: "boolean";
                                                    readonly examples: readonly [false];
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["charge"];
                                                };
                                                readonly order_id: {
                                                    readonly description: "Order ID";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["ord_2tN73UdUSNrYRPD9r"];
                                                };
                                                readonly paid_at: {
                                                    readonly description: "Payment date";
                                                    readonly format: "int64";
                                                    readonly type: readonly ["integer", "null"];
                                                    readonly examples: readonly [1676390742];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly payment_method: {
                                                    readonly discriminator: {
                                                        readonly mapping: {
                                                            readonly cash_payment: "payment_method_cash";
                                                            readonly card_payment: "payment_method_card";
                                                            readonly bank_transfer_payment: "payment_method_bank_transfer";
                                                        };
                                                        readonly propertyName: "object";
                                                    };
                                                    readonly oneOf: readonly [{
                                                        readonly required: readonly ["object"];
                                                        readonly type: "object";
                                                        readonly description: "use for cash responses";
                                                        readonly title: "charge_data_payment_method_cash_response";
                                                        readonly properties: {
                                                            readonly type: {
                                                                readonly type: "string";
                                                            };
                                                            readonly object: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["payment_source"];
                                                            };
                                                            readonly auth_code: {
                                                                readonly type: readonly ["integer", "null"];
                                                                readonly examples: readonly [542563];
                                                            };
                                                            readonly cashier_id: {
                                                                readonly type: readonly ["string", "null"];
                                                                readonly examples: readonly ["OINM01010"];
                                                            };
                                                            readonly reference: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["93000262276908"];
                                                            };
                                                            readonly barcode_url: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                                                            };
                                                            readonly expires_at: {
                                                                readonly format: "int64";
                                                                readonly type: "integer";
                                                                readonly examples: readonly [0];
                                                                readonly minimum: -9223372036854776000;
                                                                readonly maximum: 9223372036854776000;
                                                            };
                                                            readonly service_name: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["OxxoPay"];
                                                            };
                                                            readonly store: {
                                                                readonly type: readonly ["string", "null"];
                                                                readonly examples: readonly ["10MON50EDI"];
                                                            };
                                                            readonly store_name: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["OXXO"];
                                                            };
                                                        };
                                                    }, {
                                                        readonly required: readonly ["object"];
                                                        readonly type: "object";
                                                        readonly description: "use for card responses";
                                                        readonly title: "charge_data_payment_method_card_response";
                                                        readonly properties: {
                                                            readonly type: {
                                                                readonly type: "string";
                                                            };
                                                            readonly object: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["payment_source"];
                                                            };
                                                            readonly account_type: {
                                                                readonly description: "Account type of the card";
                                                                readonly type: "string";
                                                                readonly examples: readonly ["Credit"];
                                                            };
                                                            readonly auth_code: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["867372"];
                                                            };
                                                            readonly brand: {
                                                                readonly description: "Brand of the card";
                                                                readonly type: "string";
                                                                readonly examples: readonly ["visa"];
                                                            };
                                                            readonly contract_id: {
                                                                readonly description: "Id sent for recurrent charges.";
                                                                readonly type: "string";
                                                                readonly examples: readonly ["S781317595"];
                                                            };
                                                            readonly country: {
                                                                readonly description: "Country of the card";
                                                                readonly type: "string";
                                                                readonly examples: readonly ["MX"];
                                                            };
                                                            readonly exp_month: {
                                                                readonly description: "Expiration month of the card";
                                                                readonly type: "string";
                                                                readonly examples: readonly ["02"];
                                                            };
                                                            readonly exp_year: {
                                                                readonly description: "Expiration year of the card";
                                                                readonly type: "string";
                                                                readonly examples: readonly ["2026"];
                                                            };
                                                            readonly fraud_indicators: {
                                                                readonly type: "array";
                                                                readonly items: {};
                                                            };
                                                            readonly issuer: {
                                                                readonly description: "Issuer of the card";
                                                                readonly type: "string";
                                                                readonly examples: readonly ["BANAMEX"];
                                                            };
                                                            readonly last4: {
                                                                readonly description: "Last 4 digits of the card";
                                                                readonly type: "string";
                                                                readonly examples: readonly ["4242"];
                                                            };
                                                            readonly name: {
                                                                readonly description: "Name of the cardholder";
                                                                readonly type: "string";
                                                                readonly examples: readonly ["Fulanito Perez"];
                                                            };
                                                        };
                                                    }, {
                                                        readonly required: readonly ["object"];
                                                        readonly type: "object";
                                                        readonly description: "use for bank transfer responses";
                                                        readonly title: "charge_data_payment_method_bank_transfer_response";
                                                        readonly properties: {
                                                            readonly type: {
                                                                readonly type: "string";
                                                            };
                                                            readonly object: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["payment_source"];
                                                            };
                                                            readonly bank: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["STP"];
                                                            };
                                                            readonly clabe: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["646180111805034237"];
                                                            };
                                                            readonly description: {
                                                                readonly type: readonly ["string", "null"];
                                                            };
                                                            readonly executed_at: {
                                                                readonly type: readonly ["integer", "null"];
                                                            };
                                                            readonly expires_at: {
                                                                readonly format: "int64";
                                                                readonly type: "integer";
                                                                readonly examples: readonly [1683053729];
                                                                readonly minimum: -9223372036854776000;
                                                                readonly maximum: 9223372036854776000;
                                                            };
                                                            readonly issuing_account_bank: {
                                                                readonly type: readonly ["string", "null"];
                                                            };
                                                            readonly issuing_account_number: {
                                                                readonly type: readonly ["string", "null"];
                                                            };
                                                            readonly issuing_account_holder_name: {
                                                                readonly type: readonly ["string", "null"];
                                                            };
                                                            readonly issuing_account_tax_id: {
                                                                readonly type: readonly ["string", "null"];
                                                            };
                                                            readonly payment_attempts: {
                                                                readonly type: "array";
                                                                readonly items: {};
                                                            };
                                                            readonly receiving_account_holder_name: {
                                                                readonly type: readonly ["string", "null"];
                                                            };
                                                            readonly receiving_account_number: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["646180111805034237"];
                                                            };
                                                            readonly receiving_account_bank: {
                                                                readonly type: "string";
                                                                readonly examples: readonly ["STP"];
                                                            };
                                                            readonly receiving_account_tax_id: {
                                                                readonly type: readonly ["string", "null"];
                                                            };
                                                            readonly reference_number: {
                                                                readonly type: readonly ["string", "null"];
                                                            };
                                                            readonly tracking_code: {
                                                                readonly type: readonly ["string", "null"];
                                                            };
                                                        };
                                                    }];
                                                    readonly title: "charge_response_payment_method";
                                                };
                                                readonly reference_id: {
                                                    readonly description: "Reference ID of the charge";
                                                    readonly type: readonly ["string", "null"];
                                                    readonly examples: readonly ["ref_2tN73UdUSNrYRPD9r"];
                                                };
                                                readonly refunds: {
                                                    readonly title: "charge_response_refunds";
                                                    readonly type: readonly ["object", "null"];
                                                    readonly description: "page metadata";
                                                    readonly required: readonly ["has_more", "object"];
                                                    readonly properties: {
                                                        readonly has_more: {
                                                            readonly description: "Indicates if there are more pages to be requested";
                                                            readonly type: "boolean";
                                                            readonly examples: readonly [false];
                                                        };
                                                        readonly object: {
                                                            readonly description: "Object type, in this case is list";
                                                            readonly type: "string";
                                                            readonly examples: readonly ["list"];
                                                        };
                                                        readonly next_page_url: {
                                                            readonly description: "URL of the next page.";
                                                            readonly type: readonly ["string", "null"];
                                                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                                                        };
                                                        readonly previous_page_url: {
                                                            readonly description: "Url of the previous page.";
                                                            readonly type: readonly ["string", "null"];
                                                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                                                        };
                                                        readonly data: {
                                                            readonly description: "refunds";
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly required: readonly ["amount", "created_at", "id", "object"];
                                                                readonly title: "charge_response_refunds_data";
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly amount: {
                                                                        readonly format: "int64";
                                                                        readonly type: "integer";
                                                                        readonly examples: readonly [-15000];
                                                                        readonly minimum: -9223372036854776000;
                                                                        readonly maximum: 9223372036854776000;
                                                                    };
                                                                    readonly auth_code: {
                                                                        readonly type: "string";
                                                                        readonly examples: readonly ["867372"];
                                                                    };
                                                                    readonly created_at: {
                                                                        readonly format: "int64";
                                                                        readonly type: "integer";
                                                                        readonly examples: readonly [1678226878];
                                                                        readonly minimum: -9223372036854776000;
                                                                        readonly maximum: 9223372036854776000;
                                                                    };
                                                                    readonly expires_at: {
                                                                        readonly description: "refund expiration date";
                                                                        readonly format: "int64";
                                                                        readonly type: "integer";
                                                                        readonly examples: readonly [1678226878];
                                                                        readonly minimum: -9223372036854776000;
                                                                        readonly maximum: 9223372036854776000;
                                                                    };
                                                                    readonly id: {
                                                                        readonly type: "string";
                                                                        readonly examples: readonly ["6407b5bee1329a000175ba11"];
                                                                    };
                                                                    readonly object: {
                                                                        readonly type: "string";
                                                                        readonly examples: readonly ["refund"];
                                                                    };
                                                                    readonly status: {
                                                                        readonly description: "refund status";
                                                                        readonly type: "string";
                                                                        readonly examples: readonly ["pending"];
                                                                    };
                                                                };
                                                            };
                                                        };
                                                    };
                                                };
                                                readonly status: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["pending_payment"];
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly checkout: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly allowed_payment_methods: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly can_not_expire: {
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly emails_sent: {
                                        readonly type: "integer";
                                        readonly examples: readonly [0];
                                    };
                                    readonly exclude_card_networks: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly additionalProperties: true;
                                        };
                                    };
                                    readonly expires_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1676613599];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly failure_url: {
                                        readonly type: "string";
                                        readonly examples: readonly ["http://187.216.228.66:2222/SysVentasPagos/Acceso.aspx"];
                                    };
                                    readonly force_3ds_flow: {
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                                    };
                                    readonly is_redirect_on_failure: {
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly livemode: {
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly metadata: {
                                        readonly maxProperties: 100;
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly monthly_installments_enabled: {
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly monthly_installments_options: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly format: "int8";
                                            readonly type: "integer";
                                            readonly minimum: -128;
                                            readonly maximum: 127;
                                        };
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                        readonly examples: readonly ["ord-2tNDzhA4Akmzj11AS"];
                                    };
                                    readonly needs_shipping_contact: {
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["checkout"];
                                    };
                                    readonly on_demand_enabled: {
                                        readonly type: readonly ["boolean", "null"];
                                        readonly examples: readonly [true];
                                    };
                                    readonly paid_payments_count: {
                                        readonly type: "integer";
                                        readonly examples: readonly [0];
                                    };
                                    readonly recurrent: {
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly redirection_time: {
                                        readonly description: "number of seconds to wait before redirecting to the success_url";
                                        readonly format: "int8";
                                        readonly type: readonly ["integer", "null"];
                                        readonly examples: readonly [2];
                                        readonly minimum: -128;
                                        readonly maximum: 127;
                                    };
                                    readonly slug: {
                                        readonly type: "string";
                                        readonly examples: readonly ["6fca054a85194c43971ecea35cc519bb"];
                                    };
                                    readonly sms_sent: {
                                        readonly type: "integer";
                                        readonly examples: readonly [0];
                                    };
                                    readonly success_url: {
                                        readonly type: "string";
                                        readonly examples: readonly ["http://187.216.228.66:2222/SysVentasPagos/Acceso.aspx"];
                                    };
                                    readonly starts_at: {
                                        readonly type: "integer";
                                        readonly examples: readonly [1676354400];
                                    };
                                    readonly status: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Issued"];
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                        readonly examples: readonly ["HostedPayment"];
                                    };
                                    readonly url: {
                                        readonly type: "string";
                                        readonly examples: readonly ["https://pay.stg.conekta.io/checkout/6fca054a85194c43971ecea35cc519bb"];
                                    };
                                };
                            };
                            readonly created_at: {
                                readonly description: "The time at which the object was created in seconds since the Unix epoch";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1676328434];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly currency: {
                                readonly description: "The three-letter ISO 4217 currency code. The currency of the order.";
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                            readonly customer_info: {
                                readonly type: "object";
                                readonly title: "order_customer_info_response";
                                readonly properties: {
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["customer_info"];
                                    };
                                    readonly customer_custom_reference: {
                                        readonly description: "Custom reference";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["custom_reference"];
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                        readonly examples: readonly ["DevTest"];
                                    };
                                    readonly email: {
                                        readonly format: "email";
                                        readonly type: "string";
                                        readonly examples: readonly ["test@conekta.com"];
                                    };
                                    readonly phone: {
                                        readonly type: "string";
                                        readonly examples: readonly ["5522997233"];
                                    };
                                    readonly corporate: {
                                        readonly default: false;
                                        readonly type: "boolean";
                                    };
                                    readonly customer_id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["cus_23874283647"];
                                    };
                                };
                            };
                            readonly discount_lines: {
                                readonly description: "pagination metadata";
                                readonly required: readonly ["has_more", "object"];
                                readonly title: "pagination metadata";
                                readonly type: "object";
                                readonly properties: {
                                    readonly has_more: {
                                        readonly description: "Indicates if there are more pages to be requested";
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly object: {
                                        readonly description: "Object type, in this case is list";
                                        readonly type: "string";
                                        readonly examples: readonly ["list"];
                                    };
                                    readonly data: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly title: "discount_lines_data_response";
                                            readonly description: "List of discounts that apply to the order.";
                                            readonly required: readonly ["amount", "code", "id", "object", "parent_id", "type"];
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly amount: {
                                                    readonly description: "The amount to be deducted from the total sum of all payments, in cents.";
                                                    readonly format: "int64";
                                                    readonly minimum: 0;
                                                    readonly type: "integer";
                                                    readonly examples: readonly [500];
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly code: {
                                                    readonly description: "Discount code.";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["123"];
                                                };
                                                readonly type: {
                                                    readonly description: "It can be 'loyalty', 'campaign', 'coupon' o 'sign'";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["loyalty"];
                                                };
                                                readonly id: {
                                                    readonly description: "The discount line id";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["dis_lin_2tQQ58HPgPw7StE8z"];
                                                };
                                                readonly object: {
                                                    readonly description: "The object name";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["discount_line"];
                                                };
                                                readonly parent_id: {
                                                    readonly description: "The order id";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["ord_2tPAmKCEJqh8RE6nY"];
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly fiscal_entity: {
                                readonly description: "Fiscal entity of the order, Currently it is a purely informative field";
                                readonly required: readonly ["address", "created_at", "id", "object"];
                                readonly title: "order_fiscal_entity_response";
                                readonly type: readonly ["object", "null"];
                                readonly properties: {
                                    readonly address: {
                                        readonly description: "Address of the fiscal entity";
                                        readonly title: "order_fiscal_entity_address_response";
                                        readonly required: readonly ["city", "country", "external_number", "postal_code", "street1"];
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly street1: {
                                                readonly description: "Street name and number";
                                                readonly type: "string";
                                                readonly examples: readonly ["Nuevo Leon 254"];
                                            };
                                            readonly street2: {
                                                readonly description: "Street name and number";
                                                readonly type: readonly ["string", "null"];
                                                readonly examples: readonly ["Departamento 404"];
                                            };
                                            readonly postal_code: {
                                                readonly description: "Postal code";
                                                readonly type: "string";
                                                readonly examples: readonly ["06100"];
                                            };
                                            readonly city: {
                                                readonly description: "City";
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly state: {
                                                readonly description: "State";
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly country: {
                                                readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                                readonly type: "string";
                                                readonly examples: readonly ["MX"];
                                            };
                                            readonly external_number: {
                                                readonly description: "External number";
                                                readonly type: "string";
                                                readonly examples: readonly ["123"];
                                            };
                                            readonly object: {
                                                readonly type: "string";
                                                readonly examples: readonly ["fiscal_entity_address"];
                                            };
                                        };
                                    };
                                    readonly email: {
                                        readonly description: "Email of the fiscal entity";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["test@gmail.com"];
                                    };
                                    readonly metadata: {
                                        readonly description: "Metadata associated with the fiscal entity";
                                        readonly maxProperties: 100;
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly name: {
                                        readonly description: "Name of the fiscal entity";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["Conekta Inc"];
                                    };
                                    readonly tax_id: {
                                        readonly description: "Tax ID of the fiscal entity";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["324234234"];
                                    };
                                    readonly id: {
                                        readonly description: "ID of the fiscal entity";
                                        readonly type: "string";
                                        readonly examples: readonly ["fis_ent_2tN85VYaSMyDvjB3M"];
                                    };
                                    readonly created_at: {
                                        readonly description: "The time at which the object was created in seconds since the Unix epoch";
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1676328434];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["fiscal_entity"];
                                    };
                                    readonly phone: {
                                        readonly description: "Phone of the fiscal entity";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["+525511223344"];
                                    };
                                };
                            };
                            readonly id: {
                                readonly type: "string";
                                readonly examples: readonly ["ord_2tMtQQpDvfnNjiuFG"];
                            };
                            readonly is_refundable: {
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly line_items: {
                                readonly title: "order_response_products";
                                readonly description: "page metadata";
                                readonly required: readonly ["has_more", "object"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly has_more: {
                                        readonly description: "Indicates if there are more pages to be requested";
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly object: {
                                        readonly description: "Object type, in this case is list";
                                        readonly type: "string";
                                        readonly examples: readonly ["list"];
                                    };
                                    readonly next_page_url: {
                                        readonly description: "URL of the next page.";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                                    };
                                    readonly previous_page_url: {
                                        readonly description: "Url of the previous page.";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                                    };
                                    readonly data: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly title: "product_data_response";
                                            readonly required: readonly ["name", "quantity", "unit_price"];
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly antifraud_info: {
                                                    readonly type: "object";
                                                    readonly additionalProperties: true;
                                                };
                                                readonly brand: {
                                                    readonly description: "The brand of the item.";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Cohiba"];
                                                };
                                                readonly description: {
                                                    readonly description: "Short description of the item";
                                                    readonly maxLength: 250;
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Imported From Mex."];
                                                };
                                                readonly metadata: {
                                                    readonly description: "It is a key/value hash that can hold custom fields. Maximum 100 elements and allows special characters.";
                                                    readonly maxProperties: 100;
                                                    readonly type: "object";
                                                    readonly additionalProperties: true;
                                                };
                                                readonly name: {
                                                    readonly description: "The name of the item. It will be displayed in the order.";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Box of Cohiba S1s"];
                                                };
                                                readonly quantity: {
                                                    readonly description: "The quantity of the item in the order.";
                                                    readonly format: "int32";
                                                    readonly minimum: 1;
                                                    readonly type: "integer";
                                                    readonly examples: readonly [1];
                                                    readonly maximum: 2147483647;
                                                };
                                                readonly sku: {
                                                    readonly description: "The stock keeping unit for the item. It is used to identify the item in the order.";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["XYZ12345"];
                                                };
                                                readonly tags: {
                                                    readonly description: "List of tags for the item. It is used to identify the item in the order.";
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                    readonly examples: readonly ["food", "mexican food"];
                                                };
                                                readonly unit_price: {
                                                    readonly description: "The price of the item in cents.";
                                                    readonly format: "int32";
                                                    readonly minimum: 0;
                                                    readonly type: "integer";
                                                    readonly examples: readonly [20000];
                                                    readonly maximum: 2147483647;
                                                };
                                                readonly id: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                };
                                                readonly parent_id: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                            };
                            readonly livemode: {
                                readonly description: "Whether the object exists in live mode or test mode";
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly metadata: {
                                readonly description: "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.";
                                readonly maxProperties: 100;
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly next_action: {
                                readonly description: "contains the following attributes that will guide to continue the flow";
                                readonly title: "order_next_action_response";
                                readonly type: "object";
                                readonly properties: {
                                    readonly redirect_to_url: {
                                        readonly description: "contains the following attributes that will guide to continue the flow";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly url: {
                                                readonly description: "pay.conekta.com/{id} Indicates the url of the Conekta component to authenticate the flow through 3DS2.";
                                                readonly format: "uri";
                                                readonly type: "string";
                                                readonly examples: readonly ["https://pay.conekta.com/6fca054a85194c43971ecea35cc519bb"];
                                            };
                                            readonly return_url: {
                                                readonly description: "Indicates the url to which the 3DS2 flow returns at the end, when the integration is redirected.";
                                                readonly format: "uri";
                                                readonly type: "string";
                                                readonly examples: readonly ["https://my-website.com\""];
                                            };
                                        };
                                    };
                                    readonly type: {
                                        readonly description: "Indicates the type of action to be taken";
                                        readonly type: "string";
                                        readonly examples: readonly ["redirect_to_url"];
                                    };
                                };
                            };
                            readonly object: {
                                readonly description: "String representing the object’s type. Objects of the same type share the same value.";
                                readonly type: "string";
                                readonly examples: readonly ["order"];
                            };
                            readonly payment_status: {
                                readonly description: "The payment status of the order.";
                                readonly type: "string";
                                readonly examples: readonly ["paid"];
                            };
                            readonly processing_mode: {
                                readonly description: "Indicates the processing mode for the order, either ecommerce, recurrent or validation.";
                                readonly type: "string";
                                readonly examples: readonly ["ecommerce"];
                            };
                            readonly shipping_contact: {
                                readonly type: "object";
                                readonly description: "Contains the detail of the shipping addresses that the client has active or has used in Conekta";
                                readonly properties: {
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1675715413];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["adr_1234567890"];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["shipping_contact"];
                                    };
                                    readonly phone: {
                                        readonly type: "string";
                                        readonly examples: readonly ["+525511223344"];
                                    };
                                    readonly receiver: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Marvin Fuller"];
                                    };
                                    readonly between_streets: {
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["Ackerman Crescent"];
                                    };
                                    readonly address: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly object: {
                                                readonly type: "string";
                                                readonly examples: readonly ["shipping_address"];
                                            };
                                            readonly street1: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Nuevo Leon 254"];
                                            };
                                            readonly street2: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Departamento 404"];
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly examples: readonly ["06100"];
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly state: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly country: {
                                                readonly type: "string";
                                                readonly examples: readonly ["MX"];
                                            };
                                            readonly residential: {
                                                readonly type: readonly ["boolean", "null"];
                                                readonly examples: readonly [true];
                                            };
                                        };
                                    };
                                    readonly parent_id: {
                                        readonly type: "string";
                                    };
                                    readonly default: {
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly metadata: {
                                        readonly description: "Metadata associated with the shipping contact";
                                        readonly maxProperties: 100;
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly deleted: {
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                };
                            };
                            readonly updated_at: {
                                readonly description: "The time at which the object was last updated in seconds since the Unix epoch";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1676328434];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                        };
                    };
                };
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetPayoutOrderById: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "payout order model response";
            readonly properties: {
                readonly allowed_payout_methods: {
                    readonly description: "The payout methods that are allowed for the payout order.";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly minItems: 1;
                    readonly type: "array";
                    readonly examples: readonly ["cashout"];
                };
                readonly amount: {
                    readonly description: "The amount of the payout order.";
                    readonly type: "integer";
                    readonly examples: readonly [100];
                };
                readonly created_at: {
                    readonly description: "The creation date of the payout order.";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly default: "MXN";
                    readonly description: "The currency in which the payout order is made.";
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly customer_info: {
                    readonly description: "The customer information of the payout order.";
                    readonly required: readonly ["id"];
                    readonly type: "object";
                    readonly title: "order_customer_info_response";
                    readonly properties: {
                        readonly id: {
                            readonly description: "The id of the customer.";
                            readonly type: "string";
                            readonly examples: readonly ["cus_23874283647"];
                        };
                        readonly customer_custom_reference: {
                            readonly description: "Custom reference";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["custom_reference"];
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["DevTest"];
                        };
                        readonly email: {
                            readonly format: "email";
                            readonly type: "string";
                            readonly examples: readonly ["test@conekta.com"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["5522997233"];
                        };
                        readonly corporate: {
                            readonly default: false;
                            readonly type: "boolean";
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["customer_info"];
                        };
                    };
                };
                readonly expires_at: {
                    readonly description: "The expiration date of the payout order.";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly id: {
                    readonly description: "The id of the payout order.";
                    readonly type: "string";
                    readonly examples: readonly ["f2654d66-d740-457a-9a8c-f96b5196f44e"];
                };
                readonly livemode: {
                    readonly description: "The live mode of the payout order.";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly object: {
                    readonly description: "The object of the payout order.";
                    readonly type: "string";
                    readonly examples: readonly ["payout_order"];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly description: "The metadata of the payout order.";
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly payouts: {
                    readonly description: "The payout information of the payout order.";
                    readonly items: {
                        readonly properties: {
                            readonly amount: {
                                readonly description: "The amount of the payout.";
                                readonly type: "integer";
                                readonly examples: readonly [3000];
                            };
                            readonly currency: {
                                readonly description: "The currency in which the payout is made.";
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                            readonly expires_at: {
                                readonly description: "The expiration date of the payout.";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1677626837];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly id: {
                                readonly description: "The id of the payout.";
                                readonly type: "string";
                                readonly examples: readonly ["payout_2vZwsRAhhGp2dFDJx"];
                            };
                            readonly livemode: {
                                readonly description: "The live mode of the payout.";
                                readonly type: "boolean";
                                readonly examples: readonly [true];
                            };
                            readonly object: {
                                readonly description: "The object of the payout.";
                                readonly type: "string";
                                readonly examples: readonly ["payout"];
                            };
                            readonly payout_order_id: {
                                readonly description: "The id of the payout order.";
                                readonly type: "string";
                                readonly examples: readonly ["f2654d66-d740-457a-9a8c-f96b5196f44e"];
                            };
                            readonly status: {
                                readonly description: "The status of the payout.";
                                readonly type: "string";
                                readonly examples: readonly ["open"];
                            };
                        };
                        readonly required: readonly ["amount", "currency", "id", "livemode", "object"];
                        readonly title: "payout_order_payouts_item";
                        readonly type: "object";
                    };
                    readonly title: "payout_order_payouts";
                    readonly type: "array";
                };
                readonly reason: {
                    readonly description: "The reason for the payout order.";
                    readonly type: "string";
                    readonly examples: readonly ["Payout order for the customer"];
                };
                readonly status: {
                    readonly description: "The status of the payout order.";
                    readonly type: "string";
                    readonly examples: readonly ["open"];
                };
                readonly updated_at: {
                    readonly description: "The update date of the payout order.";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
            readonly required: readonly ["allowed_payout_methods", "amount", "created_at", "currency", "customer_info", "id", "livemode", "object", "payouts", "reason", "updated_at"];
            readonly title: "payout_order_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetPayoutOrders: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly default: 20;
                    readonly format: "int32";
                    readonly maximum: 250;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The numbers of items to return, the maximum value is 250";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "General order search, e.g. by mail, reference etc.";
                };
                readonly next: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "next page";
                };
                readonly previous: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "previous page";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "payout_orders_response";
            readonly type: "object";
            readonly description: "page metadata";
            readonly required: readonly ["has_more", "object"];
            readonly properties: {
                readonly data: {
                    readonly title: "payout_orders_data_response";
                    readonly type: "array";
                    readonly items: {
                        readonly description: "payout order model response";
                        readonly required: readonly ["allowed_payout_methods", "amount", "created_at", "currency", "customer_info", "id", "livemode", "object", "payouts", "reason", "updated_at"];
                        readonly title: "payout_order_response";
                        readonly type: "object";
                        readonly properties: {
                            readonly allowed_payout_methods: {
                                readonly description: "The payout methods that are allowed for the payout order.";
                                readonly minItems: 1;
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                                readonly examples: readonly ["cashout"];
                            };
                            readonly amount: {
                                readonly description: "The amount of the payout order.";
                                readonly type: "integer";
                                readonly examples: readonly [100];
                            };
                            readonly created_at: {
                                readonly description: "The creation date of the payout order.";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1677626837];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly currency: {
                                readonly default: "MXN";
                                readonly description: "The currency in which the payout order is made.";
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                            readonly customer_info: {
                                readonly description: "The customer information of the payout order.";
                                readonly required: readonly ["id"];
                                readonly type: "object";
                                readonly title: "order_customer_info_response";
                                readonly properties: {
                                    readonly id: {
                                        readonly description: "The id of the customer.";
                                        readonly type: "string";
                                        readonly examples: readonly ["cus_23874283647"];
                                    };
                                    readonly customer_custom_reference: {
                                        readonly description: "Custom reference";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["custom_reference"];
                                    };
                                    readonly name: {
                                        readonly type: "string";
                                        readonly examples: readonly ["DevTest"];
                                    };
                                    readonly email: {
                                        readonly format: "email";
                                        readonly type: "string";
                                        readonly examples: readonly ["test@conekta.com"];
                                    };
                                    readonly phone: {
                                        readonly type: "string";
                                        readonly examples: readonly ["5522997233"];
                                    };
                                    readonly corporate: {
                                        readonly default: false;
                                        readonly type: "boolean";
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["customer_info"];
                                    };
                                };
                            };
                            readonly expires_at: {
                                readonly description: "The expiration date of the payout order.";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1677626837];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly id: {
                                readonly description: "The id of the payout order.";
                                readonly type: "string";
                                readonly examples: readonly ["f2654d66-d740-457a-9a8c-f96b5196f44e"];
                            };
                            readonly livemode: {
                                readonly description: "The live mode of the payout order.";
                                readonly type: "boolean";
                                readonly examples: readonly [true];
                            };
                            readonly object: {
                                readonly description: "The object of the payout order.";
                                readonly type: "string";
                                readonly examples: readonly ["payout_order"];
                            };
                            readonly metadata: {
                                readonly description: "The metadata of the payout order.";
                                readonly maxProperties: 100;
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly payouts: {
                                readonly description: "The payout information of the payout order.";
                                readonly title: "payout_order_payouts";
                                readonly type: "array";
                                readonly items: {
                                    readonly required: readonly ["amount", "currency", "id", "livemode", "object"];
                                    readonly title: "payout_order_payouts_item";
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly amount: {
                                            readonly description: "The amount of the payout.";
                                            readonly type: "integer";
                                            readonly examples: readonly [3000];
                                        };
                                        readonly currency: {
                                            readonly description: "The currency in which the payout is made.";
                                            readonly type: "string";
                                            readonly examples: readonly ["MXN"];
                                        };
                                        readonly expires_at: {
                                            readonly description: "The expiration date of the payout.";
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [1677626837];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly id: {
                                            readonly description: "The id of the payout.";
                                            readonly type: "string";
                                            readonly examples: readonly ["payout_2vZwsRAhhGp2dFDJx"];
                                        };
                                        readonly livemode: {
                                            readonly description: "The live mode of the payout.";
                                            readonly type: "boolean";
                                            readonly examples: readonly [true];
                                        };
                                        readonly object: {
                                            readonly description: "The object of the payout.";
                                            readonly type: "string";
                                            readonly examples: readonly ["payout"];
                                        };
                                        readonly payout_order_id: {
                                            readonly description: "The id of the payout order.";
                                            readonly type: "string";
                                            readonly examples: readonly ["f2654d66-d740-457a-9a8c-f96b5196f44e"];
                                        };
                                        readonly status: {
                                            readonly description: "The status of the payout.";
                                            readonly type: "string";
                                            readonly examples: readonly ["open"];
                                        };
                                    };
                                };
                            };
                            readonly reason: {
                                readonly description: "The reason for the payout order.";
                                readonly type: "string";
                                readonly examples: readonly ["Payout order for the customer"];
                            };
                            readonly status: {
                                readonly description: "The status of the payout order.";
                                readonly type: "string";
                                readonly examples: readonly ["open"];
                            };
                            readonly updated_at: {
                                readonly description: "The update date of the payout order.";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1677626837];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                        };
                    };
                };
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetPlan: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "plans model";
            readonly properties: {
                readonly amount: {
                    readonly type: "integer";
                    readonly examples: readonly [10000];
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1666900846];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly maxLength: 3;
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly expiry_count: {
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [12];
                };
                readonly frequency: {
                    readonly type: "integer";
                    readonly examples: readonly [1];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["gold-plan"];
                };
                readonly interval: {
                    readonly type: "string";
                    readonly examples: readonly ["month"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly name: {
                    readonly type: "string";
                    readonly examples: readonly ["Extra Plan3"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["plan"];
                };
                readonly trial_period_days: {
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [0];
                };
            };
            readonly title: "plan_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetPlans: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly default: 20;
                    readonly format: "int32";
                    readonly maximum: 250;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The numbers of items to return, the maximum value is 250";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "General order search, e.g. by mail, reference etc.";
                };
                readonly next: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "next page";
                };
                readonly previous: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "previous page";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "get_plans_response";
            readonly description: "page metadata";
            readonly required: readonly ["has_more", "object"];
            readonly type: "object";
            readonly properties: {
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly description: "plans model";
                        readonly title: "plan_response";
                        readonly type: "object";
                        readonly properties: {
                            readonly amount: {
                                readonly type: "integer";
                                readonly examples: readonly [10000];
                            };
                            readonly created_at: {
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1666900846];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly currency: {
                                readonly maxLength: 3;
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                            readonly expiry_count: {
                                readonly type: readonly ["integer", "null"];
                                readonly examples: readonly [12];
                            };
                            readonly frequency: {
                                readonly type: "integer";
                                readonly examples: readonly [1];
                            };
                            readonly id: {
                                readonly type: "string";
                                readonly examples: readonly ["gold-plan"];
                            };
                            readonly interval: {
                                readonly type: "string";
                                readonly examples: readonly ["month"];
                            };
                            readonly livemode: {
                                readonly type: "boolean";
                                readonly examples: readonly [true];
                            };
                            readonly name: {
                                readonly type: "string";
                                readonly examples: readonly ["Extra Plan3"];
                            };
                            readonly object: {
                                readonly type: "string";
                                readonly examples: readonly ["plan"];
                            };
                            readonly trial_period_days: {
                                readonly type: readonly ["integer", "null"];
                                readonly examples: readonly [0];
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetRuleBlacklist: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "page metadata";
            readonly required: readonly ["has_more", "object"];
            readonly title: "pagination metadata";
            readonly type: "object";
            readonly properties: {
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly description: "rule id";
                                readonly type: "string";
                                readonly examples: readonly ["618c3f2fdb8b8da9be376af9"];
                            };
                            readonly field: {
                                readonly description: "field to be used for the rule";
                                readonly type: "string";
                                readonly examples: readonly ["email"];
                            };
                            readonly created_at: {
                                readonly description: "rule creation date";
                                readonly type: "string";
                                readonly examples: readonly ["2021-11-10T21:52:47.339Z"];
                            };
                            readonly value: {
                                readonly description: "value to be used for the rule";
                                readonly type: "string";
                                readonly examples: readonly ["email@example.com"];
                            };
                            readonly is_global: {
                                readonly description: "if the rule is global";
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly is_test: {
                                readonly description: "if the rule is test";
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly description: {
                                readonly description: "description of the rule";
                                readonly type: "string";
                                readonly examples: readonly ["secure customer example@example.com"];
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetRuleWhitelist: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "page metadata";
            readonly required: readonly ["has_more", "object"];
            readonly title: "pagination metadata";
            readonly type: "object";
            readonly properties: {
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly description: "rule id";
                                readonly type: "string";
                                readonly examples: readonly ["618c3f2fdb8b8da9be376af9"];
                            };
                            readonly field: {
                                readonly description: "field to be used for the rule";
                                readonly type: "string";
                                readonly examples: readonly ["email"];
                            };
                            readonly created_at: {
                                readonly description: "rule creation date";
                                readonly type: "string";
                                readonly examples: readonly ["2021-11-10T21:52:47.339Z"];
                            };
                            readonly value: {
                                readonly description: "value to be used for the rule";
                                readonly type: "string";
                                readonly examples: readonly ["email@example.com"];
                            };
                            readonly is_global: {
                                readonly description: "if the rule is global";
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly is_test: {
                                readonly description: "if the rule is test";
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly description: {
                                readonly description: "description of the rule";
                                readonly type: "string";
                                readonly examples: readonly ["secure customer example@example.com"];
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "403": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetSubscription: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "subscription model";
            readonly properties: {
                readonly billing_cycle_start: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626827];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly billing_cycle_end: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626827];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly canceled_at: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1678258162];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly canceled_reason: {
                    readonly description: "Reason for cancellation. This field appears when the subscription status is 'canceled'.";
                    readonly type: "string";
                    readonly examples: readonly ["user_cancelation"];
                };
                readonly card_id: {
                    readonly type: "string";
                    readonly examples: readonly ["src_2tKcHxhTz7xU5SymL"];
                };
                readonly charge_id: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["2tKcHxhTz7xU5SymL"];
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly customer_custom_reference: {
                    readonly type: "string";
                    readonly examples: readonly ["dotnet_123456"];
                };
                readonly customer_id: {
                    readonly type: "string";
                    readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["gold-plan"];
                };
                readonly last_billing_cycle_order_id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tSoMP7bZJbLiq4z8"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["subscription"];
                };
                readonly paused_at: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1678258162];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly plan_id: {
                    readonly type: "string";
                    readonly examples: readonly ["plan_2tXx672QLQ68CkmMn"];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["past_due"];
                };
                readonly subscription_start: {
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                };
                readonly trial_start: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly trial_end: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
            readonly title: "subscription_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetTransaction: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "The Transaction object represents the actions or steps of an order. Statuses can be: unprocessed, pending, available, owen, paid_out, voided, capture, capture_reversal, liquidation, liquidation_reversal, payout, payout_reversal, refund, refund_reversal, chargeback, chargeback_reversal, rounding_adjustment, won_chargeback, transferred, and transferred.";
            readonly properties: {
                readonly amount: {
                    readonly description: "The amount of the transaction.";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1000];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly charge: {
                    readonly description: "Randomly assigned unique order identifier associated with the charge.";
                    readonly type: "string";
                    readonly examples: readonly ["5ee7ec58885a45585e6d9f8m"];
                };
                readonly created_at: {
                    readonly description: "Date and time of creation of the transaction in Unix format.";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1553273553];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly description: "The currency of the transaction. It uses the 3-letter code of the [International Standard ISO 4217.](https://es.wikipedia.org/wiki/ISO_4217)";
                    readonly maxLength: 3;
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly fee: {
                    readonly description: "The amount to be deducted for taxes and commissions.";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [560];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly id: {
                    readonly description: "Unique identifier of the transaction.";
                    readonly type: "string";
                    readonly examples: readonly ["5ee7ec5b8dea41085erb7f9e"];
                };
                readonly livemode: {
                    readonly description: "Indicates whether the transaction was created in live mode or test mode.";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly net: {
                    readonly description: "The net amount after deducting commissions and taxes.";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [440];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly object: {
                    readonly description: "Object name, which is transaction.";
                    readonly type: "string";
                    readonly examples: readonly ["transaction"];
                };
                readonly status: {
                    readonly description: "Code indicating transaction status.";
                    readonly type: "string";
                    readonly examples: readonly ["pending"];
                };
                readonly type: {
                    readonly description: "Transaction Type";
                    readonly type: "string";
                    readonly examples: readonly ["capture"];
                };
            };
            readonly required: readonly ["amount", "charge", "created_at", "currency", "fee", "id", "livemode", "net", "object", "status", "type"];
            readonly title: "transaction_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetTransactions: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly default: 20;
                    readonly format: "int32";
                    readonly maximum: 250;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The numbers of items to return, the maximum value is 250";
                };
                readonly next: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "next page";
                };
                readonly previous: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "previous page";
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["65412a893cd69a0001c25892"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "id of the object to be retrieved";
                };
                readonly charge_id: {
                    readonly type: "string";
                    readonly examples: readonly ["65412a893cd69a0001c25892"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "id of the charge used for filtering";
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["capture"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "type of the object to be retrieved";
                };
                readonly currency: {
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "currency of the object to be retrieved";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "get_transactions_response";
            readonly description: "page metadata";
            readonly required: readonly ["has_more", "object"];
            readonly type: "object";
            readonly properties: {
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
                readonly data: {
                    readonly description: "Transactions";
                    readonly type: "array";
                    readonly items: {
                        readonly description: "The Transaction object represents the actions or steps of an order. Statuses can be: unprocessed, pending, available, owen, paid_out, voided, capture, capture_reversal, liquidation, liquidation_reversal, payout, payout_reversal, refund, refund_reversal, chargeback, chargeback_reversal, rounding_adjustment, won_chargeback, transferred, and transferred.";
                        readonly required: readonly ["amount", "charge", "created_at", "currency", "fee", "id", "livemode", "net", "object", "status", "type"];
                        readonly title: "transaction_response";
                        readonly type: "object";
                        readonly properties: {
                            readonly amount: {
                                readonly description: "The amount of the transaction.";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1000];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly charge: {
                                readonly description: "Randomly assigned unique order identifier associated with the charge.";
                                readonly type: "string";
                                readonly examples: readonly ["5ee7ec58885a45585e6d9f8m"];
                            };
                            readonly created_at: {
                                readonly description: "Date and time of creation of the transaction in Unix format.";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1553273553];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly currency: {
                                readonly description: "The currency of the transaction. It uses the 3-letter code of the [International Standard ISO 4217.](https://es.wikipedia.org/wiki/ISO_4217)";
                                readonly maxLength: 3;
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                            readonly fee: {
                                readonly description: "The amount to be deducted for taxes and commissions.";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [560];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly id: {
                                readonly description: "Unique identifier of the transaction.";
                                readonly type: "string";
                                readonly examples: readonly ["5ee7ec5b8dea41085erb7f9e"];
                            };
                            readonly livemode: {
                                readonly description: "Indicates whether the transaction was created in live mode or test mode.";
                                readonly type: "boolean";
                                readonly examples: readonly [true];
                            };
                            readonly net: {
                                readonly description: "The net amount after deducting commissions and taxes.";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [440];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly object: {
                                readonly description: "Object name, which is transaction.";
                                readonly type: "string";
                                readonly examples: readonly ["transaction"];
                            };
                            readonly status: {
                                readonly description: "Code indicating transaction status.";
                                readonly type: "string";
                                readonly examples: readonly ["pending"];
                            };
                            readonly type: {
                                readonly description: "Transaction Type";
                                readonly type: "string";
                                readonly examples: readonly ["capture"];
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetTransfer: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "A transfer represents the action of sending an amount to a business bank account including the status, amount and method used to make the transfer.";
            readonly properties: {
                readonly amount: {
                    readonly description: "Amount in cents of the transfer.";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [10000];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly created_at: {
                    readonly description: "Date and time of creation of the transfer in Unix format.";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1553273553];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly description: "The currency of the transfer. It uses the 3-letter code of the [International Standard ISO 4217.](https://es.wikipedia.org/wiki/ISO_4217)";
                    readonly maxLength: 3;
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly id: {
                    readonly description: "Unique identifier of the transfer.";
                    readonly type: "string";
                    readonly examples: readonly ["5b0337d4dD344ef954fe1X4b6"];
                };
                readonly livemode: {
                    readonly description: "Indicates whether the transfer was created in live mode or test mode.";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly destination: {
                    readonly description: "Method used to make the transfer.";
                    readonly properties: {
                        readonly account_holder: {
                            readonly description: "Name of the account holder.";
                            readonly type: "string";
                            readonly examples: readonly ["John Doe"];
                        };
                        readonly account_number: {
                            readonly description: "Account number of the bank account.";
                            readonly type: "string";
                            readonly examples: readonly ["012180023547896764"];
                        };
                        readonly bank: {
                            readonly description: "Name of the bank.";
                            readonly type: "string";
                            readonly examples: readonly ["BBVA Bancomer"];
                        };
                        readonly created_at: {
                            readonly description: "Date and time of creation of the transfer.";
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1553273553];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly id: {
                            readonly description: "Unique identifier of the transfer.";
                            readonly type: "string";
                            readonly examples: readonly ["pytmtd_2ide3qwTdDvNBosEC"];
                        };
                        readonly object: {
                            readonly description: "Object name, which is bank_transfer_payout_method.";
                            readonly type: "string";
                            readonly examples: readonly ["bank_transfer_payout_method"];
                        };
                        readonly payee_id: {
                            readonly description: "Unique identifier of the payee.";
                            readonly type: "string";
                            readonly examples: readonly ["payee_2icdDewRxDENBos85"];
                        };
                        readonly type: {
                            readonly description: "Type of the payee.";
                            readonly type: "string";
                            readonly examples: readonly ["BankTransferPayoutMethod"];
                        };
                    };
                    readonly title: "transfer_destination_response";
                    readonly type: "object";
                };
                readonly object: {
                    readonly description: "Object name, which is transfer.";
                    readonly type: "string";
                    readonly examples: readonly ["transfer"];
                };
                readonly statement_description: {
                    readonly description: "Description of the transfer.";
                    readonly type: "string";
                    readonly examples: readonly ["Conekta 4401234"];
                };
                readonly statement_reference: {
                    readonly description: "Reference number of the transfer.";
                    readonly type: "string";
                    readonly examples: readonly ["4401234"];
                };
                readonly status: {
                    readonly description: "Code indicating transfer status.";
                    readonly type: "string";
                    readonly examples: readonly ["pending"];
                };
            };
            readonly title: "transfer_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetTransfers: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly default: 20;
                    readonly format: "int32";
                    readonly maximum: 250;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The numbers of items to return, the maximum value is 250";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "General order search, e.g. by mail, reference etc.";
                };
                readonly next: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "next page";
                };
                readonly previous: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "previous page";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "get_transfers_response";
            readonly description: "page metadata";
            readonly required: readonly ["has_more", "object"];
            readonly type: "object";
            readonly properties: {
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
                readonly data: {
                    readonly description: "Transfers";
                    readonly type: "array";
                    readonly items: {
                        readonly description: "A transfer represents the action of sending an amount to a business bank account including the status, amount and method used to make the transfer.";
                        readonly title: "transfers_response";
                        readonly type: "object";
                        readonly properties: {
                            readonly amount: {
                                readonly description: "Amount in cents of the transfer.";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [10000];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly created_at: {
                                readonly description: "Date and time of creation of the transfer.";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1553273553];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly currency: {
                                readonly description: "The currency of the transfer. It uses the 3-letter code of the [International Standard ISO 4217.](https://es.wikipedia.org/wiki/ISO_4217)";
                                readonly maxLength: 3;
                                readonly type: "string";
                                readonly examples: readonly ["MXN"];
                            };
                            readonly id: {
                                readonly description: "Unique identifier of the transfer.";
                                readonly type: "string";
                                readonly examples: readonly ["5b0337d4dD344ef954fe1X4b6"];
                            };
                            readonly livemode: {
                                readonly description: "Indicates whether the transfer was created in live mode or test mode.";
                                readonly type: "boolean";
                                readonly examples: readonly [true];
                            };
                            readonly method: {
                                readonly description: "Method used to make the transfer.";
                                readonly title: "transfer_method_response";
                                readonly type: "object";
                                readonly properties: {
                                    readonly account_holder: {
                                        readonly description: "Name of the account holder.";
                                        readonly type: "string";
                                        readonly examples: readonly ["John Doe"];
                                    };
                                    readonly account_number: {
                                        readonly description: "Account number of the bank account.";
                                        readonly type: "string";
                                        readonly examples: readonly ["012180023547896764"];
                                    };
                                    readonly bank: {
                                        readonly description: "Name of the bank.";
                                        readonly type: "string";
                                        readonly examples: readonly ["BBVA Bancomer"];
                                    };
                                    readonly created_at: {
                                        readonly description: "Date and time of creation of the transfer.";
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1553273553];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly id: {
                                        readonly description: "Unique identifier of the transfer.";
                                        readonly type: "string";
                                        readonly examples: readonly ["pytmtd_2ide3qwTdDvNBosEC"];
                                    };
                                    readonly object: {
                                        readonly description: "Object name, which is bank_transfer_payout_method.";
                                        readonly type: "string";
                                        readonly examples: readonly ["bank_transfer_payout_method"];
                                    };
                                    readonly payee_id: {
                                        readonly description: "Unique identifier of the payee.";
                                        readonly type: "string";
                                        readonly examples: readonly ["payee_2icdDewRxDENBos85"];
                                    };
                                    readonly type: {
                                        readonly description: "Type of the payee.";
                                        readonly type: "string";
                                        readonly examples: readonly ["BankTransferPayoutMethod"];
                                    };
                                };
                            };
                            readonly object: {
                                readonly description: "Object name, which is transfer.";
                                readonly type: "string";
                                readonly examples: readonly ["transfer"];
                            };
                            readonly statement_description: {
                                readonly description: "Description of the transfer.";
                                readonly type: "string";
                                readonly examples: readonly ["Conekta 4401234"];
                            };
                            readonly statement_reference: {
                                readonly description: "Reference number of the transfer.";
                                readonly type: "string";
                                readonly examples: readonly ["4401234"];
                            };
                            readonly status: {
                                readonly description: "Code indicating transfer status.";
                                readonly type: "string";
                                readonly examples: readonly ["pending"];
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetWebhook: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "webhooks model";
            readonly properties: {
                readonly deleted: {
                    readonly type: readonly ["boolean", "null"];
                    readonly examples: readonly [false];
                };
                readonly development_enabled: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["event"];
                };
                readonly production_enabled: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["listening"];
                };
                readonly subscribed_events: {
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly examples: readonly ["charge.created", "charge.paid", "charge.under_fraud_review", "charge.fraudulent", "charge.refunded", "charge.preauthorized", "charge.declined", "charge.canceled", "charge.reversed", "charge.pending_confirmation"];
                };
                readonly synchronous: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly url: {
                    readonly type: "string";
                    readonly examples: readonly ["https://username:password@mockoon.stg.conekta.io/payments-api/cash/merchant_approval"];
                };
            };
            readonly title: "webhook_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetWebhookKey: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "webhook keys model";
            readonly properties: {
                readonly id: {
                    readonly description: "Unique identifier of the webhook key";
                    readonly type: "string";
                    readonly examples: readonly ["62730ba6fb7dfd6a712f118e"];
                };
                readonly active: {
                    readonly description: "Indicates if the webhook key is active";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly created_at: {
                    readonly description: "Unix timestamp in seconds with the creation date of the webhook key";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1577836800];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly deactivated_at: {
                    readonly description: "Unix timestamp in seconds with the deactivation date of the webhook key";
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly public_key: {
                    readonly description: "Public key to be used in the webhook";
                    readonly type: "string";
                    readonly examples: readonly ["-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqULpUc6D6mSAq5a0yLY/\\noOjd1mWm6q+QI8y/FI4STr2F+XgKeNnMxSqnyFrHtKQ/ut4Zi45WFnJLfEQL7aW5\\n67yE2dWyo6GaL7yZUfLC0Y3sHPGzaGtvDF36ISW7LliYNoMiA3Bx5/1Sr0G23pGW\\n0Mp8IO1Nlz0sJWuU/d7zCz/UN6cl9g/BP4eaQ7deS56YuWcj5sTlwqFTlwN12kpA\\nIzMZ7gnvYQnZTpPny5lben6QEuxTvZcPApcyOweiESjMnXfkfWOyuYtgMrbsU6oL\\nA6sWa6j0pePW7AYeBqB4tyAlenkCSqzHg8bMk5Bm7hiT6I9Pls774lJbnOYmmuNE\\n8QIDAQAB\\n-----END PUBLIC KEY-----\\n"];
                };
                readonly livemode: {
                    readonly description: "Indicates if the webhook key is in live mode";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object name, value is webhook_key";
                    readonly type: "string";
                    readonly examples: readonly ["webhook_key"];
                };
            };
            readonly title: "webhook_key_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetWebhookKeys: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly default: 20;
                    readonly format: "int32";
                    readonly maximum: 250;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The numbers of items to return, the maximum value is 250";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "General order search, e.g. by mail, reference etc.";
                };
                readonly next: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "next page";
                };
                readonly previous: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "previous page";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "get_webhook_keys_response";
            readonly description: "page metadata";
            readonly required: readonly ["has_more", "object"];
            readonly type: "object";
            readonly properties: {
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly description: "webhook keys model";
                        readonly title: "webhook_key_response";
                        readonly type: "object";
                        readonly properties: {
                            readonly id: {
                                readonly description: "Unique identifier of the webhook key";
                                readonly type: "string";
                                readonly examples: readonly ["62730ba6fb7dfd6a712f118e"];
                            };
                            readonly active: {
                                readonly description: "Indicates if the webhook key is active";
                                readonly type: "boolean";
                                readonly examples: readonly [true];
                            };
                            readonly created_at: {
                                readonly description: "Unix timestamp in seconds with the creation date of the webhook key";
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1577836800];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly deactivated_at: {
                                readonly description: "Unix timestamp in seconds with the deactivation date of the webhook key";
                                readonly format: "int64";
                                readonly type: readonly ["integer", "null"];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly public_key: {
                                readonly description: "Public key to be used in the webhook";
                                readonly type: "string";
                                readonly examples: readonly ["-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqULpUc6D6mSAq5a0yLY/\\noOjd1mWm6q+QI8y/FI4STr2F+XgKeNnMxSqnyFrHtKQ/ut4Zi45WFnJLfEQL7aW5\\n67yE2dWyo6GaL7yZUfLC0Y3sHPGzaGtvDF36ISW7LliYNoMiA3Bx5/1Sr0G23pGW\\n0Mp8IO1Nlz0sJWuU/d7zCz/UN6cl9g/BP4eaQ7deS56YuWcj5sTlwqFTlwN12kpA\\nIzMZ7gnvYQnZTpPny5lben6QEuxTvZcPApcyOweiESjMnXfkfWOyuYtgMrbsU6oL\\nA6sWa6j0pePW7AYeBqB4tyAlenkCSqzHg8bMk5Bm7hiT6I9Pls774lJbnOYmmuNE\\n8QIDAQAB\\n-----END PUBLIC KEY-----\\n"];
                            };
                            readonly livemode: {
                                readonly description: "Indicates if the webhook key is in live mode";
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly object: {
                                readonly description: "Object name, value is webhook_key";
                                readonly type: "string";
                                readonly examples: readonly ["webhook_key"];
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const GetWebhooks: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly default: 20;
                    readonly format: "int32";
                    readonly maximum: 250;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The numbers of items to return, the maximum value is 250";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "General order search, e.g. by mail, reference etc.";
                };
                readonly url: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "url for webhook filter";
                };
                readonly next: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "next page";
                };
                readonly previous: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "previous page";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "get_webhooks_response";
            readonly description: "page metadata";
            readonly required: readonly ["has_more", "object"];
            readonly type: "object";
            readonly properties: {
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly description: "webhooks model";
                        readonly title: "webhook_response";
                        readonly type: "object";
                        readonly properties: {
                            readonly deleted: {
                                readonly type: readonly ["boolean", "null"];
                                readonly examples: readonly [false];
                            };
                            readonly development_enabled: {
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly id: {
                                readonly type: "string";
                                readonly examples: readonly ["6307a60c41de27127515a575"];
                            };
                            readonly livemode: {
                                readonly type: "boolean";
                                readonly examples: readonly [true];
                            };
                            readonly object: {
                                readonly type: "string";
                                readonly examples: readonly ["event"];
                            };
                            readonly production_enabled: {
                                readonly type: "boolean";
                                readonly examples: readonly [true];
                            };
                            readonly status: {
                                readonly type: "string";
                                readonly examples: readonly ["listening"];
                            };
                            readonly subscribed_events: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                                readonly examples: readonly ["charge.created", "charge.paid", "charge.under_fraud_review", "charge.fraudulent", "charge.refunded", "charge.preauthorized", "charge.declined", "charge.canceled", "charge.reversed", "charge.pending_confirmation"];
                            };
                            readonly synchronous: {
                                readonly type: "boolean";
                                readonly examples: readonly [false];
                            };
                            readonly url: {
                                readonly type: "string";
                                readonly examples: readonly ["https://username:password@mockoon.stg.conekta.io/payments-api/cash/merchant_approval"];
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrderCancelRefund: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
                readonly refund_id: {
                    readonly type: "string";
                    readonly examples: readonly ["6407b5bee1329a000175ba11"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "refund identifier";
                };
            };
            readonly required: readonly ["id", "refund_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "order response";
            readonly properties: {
                readonly amount: {
                    readonly description: "The total amount to be collected in cents";
                    readonly type: "integer";
                    readonly examples: readonly [21605];
                };
                readonly amount_refunded: {
                    readonly description: "The total amount refunded in cents";
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly channel: {
                    readonly properties: {
                        readonly segment: {
                            readonly type: "string";
                            readonly examples: readonly ["Checkout"];
                        };
                        readonly checkout_request_id: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                        };
                        readonly checkout_request_type: {
                            readonly type: "string";
                            readonly examples: readonly ["HostedPayment"];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                        };
                    };
                    readonly type: "object";
                };
                readonly charges: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "charges_data_response";
                                readonly type: "object";
                                readonly properties: {
                                    readonly amount: {
                                        readonly type: "integer";
                                        readonly examples: readonly [4321];
                                    };
                                    readonly channel: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly segment: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Checkout"];
                                            };
                                            readonly checkout_request_id: {
                                                readonly type: "string";
                                                readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                                            };
                                            readonly checkout_request_type: {
                                                readonly type: "string";
                                                readonly examples: readonly ["HostedPayment"];
                                            };
                                            readonly id: {
                                                readonly type: "string";
                                                readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                                            };
                                        };
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1676386026];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly currency: {
                                        readonly type: "string";
                                        readonly examples: readonly ["MXN"];
                                    };
                                    readonly customer_id: {
                                        readonly type: "string";
                                    };
                                    readonly description: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Payment from order"];
                                    };
                                    readonly device_fingerprint: {
                                        readonly type: "string";
                                        readonly examples: readonly ["6FR3chaU4Y1nGAW5NAGd1rcjAKa142Ba"];
                                    };
                                    readonly failure_code: {
                                        readonly type: "string";
                                        readonly examples: readonly ["suspected_fraud"];
                                    };
                                    readonly failure_message: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Este cargo ha sido declinado porque el comportamiento del comprador es sospechoso."];
                                    };
                                    readonly id: {
                                        readonly description: "Charge ID";
                                        readonly type: "string";
                                        readonly examples: readonly ["63efa757cf65380001aec040"];
                                    };
                                    readonly livemode: {
                                        readonly description: "Whether the charge was made in live mode or not";
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["charge"];
                                    };
                                    readonly order_id: {
                                        readonly description: "Order ID";
                                        readonly type: "string";
                                        readonly examples: readonly ["ord_2tN73UdUSNrYRPD9r"];
                                    };
                                    readonly paid_at: {
                                        readonly description: "Payment date";
                                        readonly format: "int64";
                                        readonly type: readonly ["integer", "null"];
                                        readonly examples: readonly [1676390742];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly payment_method: {
                                        readonly discriminator: {
                                            readonly mapping: {
                                                readonly cash_payment: "payment_method_cash";
                                                readonly card_payment: "payment_method_card";
                                                readonly bank_transfer_payment: "payment_method_bank_transfer";
                                            };
                                            readonly propertyName: "object";
                                        };
                                        readonly oneOf: readonly [{
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for cash responses";
                                            readonly title: "charge_data_payment_method_cash_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly auth_code: {
                                                    readonly type: readonly ["integer", "null"];
                                                    readonly examples: readonly [542563];
                                                };
                                                readonly cashier_id: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly examples: readonly ["OINM01010"];
                                                };
                                                readonly reference: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["93000262276908"];
                                                };
                                                readonly barcode_url: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                                                };
                                                readonly expires_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [0];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly service_name: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["OxxoPay"];
                                                };
                                                readonly store: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly examples: readonly ["10MON50EDI"];
                                                };
                                                readonly store_name: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["OXXO"];
                                                };
                                            };
                                        }, {
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for card responses";
                                            readonly title: "charge_data_payment_method_card_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly account_type: {
                                                    readonly description: "Account type of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Credit"];
                                                };
                                                readonly auth_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["867372"];
                                                };
                                                readonly brand: {
                                                    readonly description: "Brand of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["visa"];
                                                };
                                                readonly contract_id: {
                                                    readonly description: "Id sent for recurrent charges.";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["S781317595"];
                                                };
                                                readonly country: {
                                                    readonly description: "Country of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["MX"];
                                                };
                                                readonly exp_month: {
                                                    readonly description: "Expiration month of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["02"];
                                                };
                                                readonly exp_year: {
                                                    readonly description: "Expiration year of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["2026"];
                                                };
                                                readonly fraud_indicators: {
                                                    readonly type: "array";
                                                    readonly items: {};
                                                };
                                                readonly issuer: {
                                                    readonly description: "Issuer of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["BANAMEX"];
                                                };
                                                readonly last4: {
                                                    readonly description: "Last 4 digits of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["4242"];
                                                };
                                                readonly name: {
                                                    readonly description: "Name of the cardholder";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Fulanito Perez"];
                                                };
                                            };
                                        }, {
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for bank transfer responses";
                                            readonly title: "charge_data_payment_method_bank_transfer_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly bank: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["STP"];
                                                };
                                                readonly clabe: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["646180111805034237"];
                                                };
                                                readonly description: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly executed_at: {
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly expires_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [1683053729];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly issuing_account_bank: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_number: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_holder_name: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_tax_id: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly payment_attempts: {
                                                    readonly type: "array";
                                                    readonly items: {};
                                                };
                                                readonly receiving_account_holder_name: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly receiving_account_number: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["646180111805034237"];
                                                };
                                                readonly receiving_account_bank: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["STP"];
                                                };
                                                readonly receiving_account_tax_id: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly reference_number: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly tracking_code: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                        }];
                                        readonly title: "charge_response_payment_method";
                                    };
                                    readonly reference_id: {
                                        readonly description: "Reference ID of the charge";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["ref_2tN73UdUSNrYRPD9r"];
                                    };
                                    readonly refunds: {
                                        readonly title: "charge_response_refunds";
                                        readonly type: readonly ["object", "null"];
                                        readonly description: "page metadata";
                                        readonly required: readonly ["has_more", "object"];
                                        readonly properties: {
                                            readonly has_more: {
                                                readonly description: "Indicates if there are more pages to be requested";
                                                readonly type: "boolean";
                                                readonly examples: readonly [false];
                                            };
                                            readonly object: {
                                                readonly description: "Object type, in this case is list";
                                                readonly type: "string";
                                                readonly examples: readonly ["list"];
                                            };
                                            readonly next_page_url: {
                                                readonly description: "URL of the next page.";
                                                readonly type: readonly ["string", "null"];
                                                readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                                            };
                                            readonly previous_page_url: {
                                                readonly description: "Url of the previous page.";
                                                readonly type: readonly ["string", "null"];
                                                readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                                            };
                                            readonly data: {
                                                readonly description: "refunds";
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly required: readonly ["amount", "created_at", "id", "object"];
                                                    readonly title: "charge_response_refunds_data";
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly amount: {
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [-15000];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly auth_code: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["867372"];
                                                        };
                                                        readonly created_at: {
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [1678226878];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly expires_at: {
                                                            readonly description: "refund expiration date";
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [1678226878];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly id: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["6407b5bee1329a000175ba11"];
                                                        };
                                                        readonly object: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["refund"];
                                                        };
                                                        readonly status: {
                                                            readonly description: "refund status";
                                                            readonly type: "string";
                                                            readonly examples: readonly ["pending"];
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly status: {
                                        readonly type: "string";
                                        readonly examples: readonly ["pending_payment"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly checkout: {
                    readonly properties: {
                        readonly allowed_payment_methods: {
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly type: "array";
                        };
                        readonly can_not_expire: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly emails_sent: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly exclude_card_networks: {
                            readonly items: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly type: "array";
                        };
                        readonly expires_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1676613599];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly failure_url: {
                            readonly type: "string";
                            readonly examples: readonly ["http://187.216.228.66:2222/SysVentasPagos/Acceso.aspx"];
                        };
                        readonly force_3ds_flow: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                        };
                        readonly is_redirect_on_failure: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly livemode: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                        readonly monthly_installments_enabled: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly monthly_installments_options: {
                            readonly items: {
                                readonly format: "int8";
                                readonly type: "integer";
                                readonly minimum: -128;
                                readonly maximum: 127;
                            };
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["ord-2tNDzhA4Akmzj11AS"];
                        };
                        readonly needs_shipping_contact: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["checkout"];
                        };
                        readonly on_demand_enabled: {
                            readonly type: readonly ["boolean", "null"];
                            readonly examples: readonly [true];
                        };
                        readonly paid_payments_count: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly recurrent: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly redirection_time: {
                            readonly description: "number of seconds to wait before redirecting to the success_url";
                            readonly format: "int8";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [2];
                            readonly minimum: -128;
                            readonly maximum: 127;
                        };
                        readonly slug: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a85194c43971ecea35cc519bb"];
                        };
                        readonly sms_sent: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly success_url: {
                            readonly type: "string";
                            readonly examples: readonly ["http://187.216.228.66:2222/SysVentasPagos/Acceso.aspx"];
                        };
                        readonly starts_at: {
                            readonly type: "integer";
                            readonly examples: readonly [1676354400];
                        };
                        readonly status: {
                            readonly type: "string";
                            readonly examples: readonly ["Issued"];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly examples: readonly ["HostedPayment"];
                        };
                        readonly url: {
                            readonly type: "string";
                            readonly examples: readonly ["https://pay.stg.conekta.io/checkout/6fca054a85194c43971ecea35cc519bb"];
                        };
                    };
                    readonly type: "object";
                };
                readonly created_at: {
                    readonly description: "The time at which the object was created in seconds since the Unix epoch";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1676328434];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly description: "The three-letter ISO 4217 currency code. The currency of the order.";
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly customer_info: {
                    readonly type: "object";
                    readonly title: "order_customer_info_response";
                    readonly properties: {
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["customer_info"];
                        };
                        readonly customer_custom_reference: {
                            readonly description: "Custom reference";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["custom_reference"];
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["DevTest"];
                        };
                        readonly email: {
                            readonly format: "email";
                            readonly type: "string";
                            readonly examples: readonly ["test@conekta.com"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["5522997233"];
                        };
                        readonly corporate: {
                            readonly default: false;
                            readonly type: "boolean";
                        };
                        readonly customer_id: {
                            readonly type: "string";
                            readonly examples: readonly ["cus_23874283647"];
                        };
                    };
                };
                readonly discount_lines: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "discount_lines_data_response";
                                readonly description: "List of discounts that apply to the order.";
                                readonly required: readonly ["amount", "code", "id", "object", "parent_id", "type"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly amount: {
                                        readonly description: "The amount to be deducted from the total sum of all payments, in cents.";
                                        readonly format: "int64";
                                        readonly minimum: 0;
                                        readonly type: "integer";
                                        readonly examples: readonly [500];
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly code: {
                                        readonly description: "Discount code.";
                                        readonly type: "string";
                                        readonly examples: readonly ["123"];
                                    };
                                    readonly type: {
                                        readonly description: "It can be 'loyalty', 'campaign', 'coupon' o 'sign'";
                                        readonly type: "string";
                                        readonly examples: readonly ["loyalty"];
                                    };
                                    readonly id: {
                                        readonly description: "The discount line id";
                                        readonly type: "string";
                                        readonly examples: readonly ["dis_lin_2tQQ58HPgPw7StE8z"];
                                    };
                                    readonly object: {
                                        readonly description: "The object name";
                                        readonly type: "string";
                                        readonly examples: readonly ["discount_line"];
                                    };
                                    readonly parent_id: {
                                        readonly description: "The order id";
                                        readonly type: "string";
                                        readonly examples: readonly ["ord_2tPAmKCEJqh8RE6nY"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly fiscal_entity: {
                    readonly description: "Fiscal entity of the order, Currently it is a purely informative field";
                    readonly properties: {
                        readonly address: {
                            readonly description: "Address of the fiscal entity";
                            readonly title: "order_fiscal_entity_address_response";
                            readonly required: readonly ["city", "country", "external_number", "postal_code", "street1"];
                            readonly type: "object";
                            readonly properties: {
                                readonly street1: {
                                    readonly description: "Street name and number";
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly description: "Street name and number";
                                    readonly type: readonly ["string", "null"];
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly description: "Postal code";
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly description: "City";
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly description: "State";
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly external_number: {
                                    readonly description: "External number";
                                    readonly type: "string";
                                    readonly examples: readonly ["123"];
                                };
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["fiscal_entity_address"];
                                };
                            };
                        };
                        readonly email: {
                            readonly description: "Email of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["test@gmail.com"];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly description: "Metadata associated with the fiscal entity";
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                        readonly name: {
                            readonly description: "Name of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["Conekta Inc"];
                        };
                        readonly tax_id: {
                            readonly description: "Tax ID of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["324234234"];
                        };
                        readonly id: {
                            readonly description: "ID of the fiscal entity";
                            readonly type: "string";
                            readonly examples: readonly ["fis_ent_2tN85VYaSMyDvjB3M"];
                        };
                        readonly created_at: {
                            readonly description: "The time at which the object was created in seconds since the Unix epoch";
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1676328434];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["fiscal_entity"];
                        };
                        readonly phone: {
                            readonly description: "Phone of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["+525511223344"];
                        };
                    };
                    readonly required: readonly ["address", "created_at", "id", "object"];
                    readonly title: "order_fiscal_entity_response";
                    readonly type: readonly ["object", "null"];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tMtQQpDvfnNjiuFG"];
                };
                readonly is_refundable: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly line_items: {
                    readonly title: "order_response_products";
                    readonly description: "page metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly next_page_url: {
                            readonly description: "URL of the next page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                        };
                        readonly previous_page_url: {
                            readonly description: "Url of the previous page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "product_data_response";
                                readonly required: readonly ["name", "quantity", "unit_price"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly antifraud_info: {
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly brand: {
                                        readonly description: "The brand of the item.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Cohiba"];
                                    };
                                    readonly description: {
                                        readonly description: "Short description of the item";
                                        readonly maxLength: 250;
                                        readonly type: "string";
                                        readonly examples: readonly ["Imported From Mex."];
                                    };
                                    readonly metadata: {
                                        readonly description: "It is a key/value hash that can hold custom fields. Maximum 100 elements and allows special characters.";
                                        readonly maxProperties: 100;
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly name: {
                                        readonly description: "The name of the item. It will be displayed in the order.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Box of Cohiba S1s"];
                                    };
                                    readonly quantity: {
                                        readonly description: "The quantity of the item in the order.";
                                        readonly format: "int32";
                                        readonly minimum: 1;
                                        readonly type: "integer";
                                        readonly examples: readonly [1];
                                        readonly maximum: 2147483647;
                                    };
                                    readonly sku: {
                                        readonly description: "The stock keeping unit for the item. It is used to identify the item in the order.";
                                        readonly type: "string";
                                        readonly examples: readonly ["XYZ12345"];
                                    };
                                    readonly tags: {
                                        readonly description: "List of tags for the item. It is used to identify the item in the order.";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                        readonly examples: readonly ["food", "mexican food"];
                                    };
                                    readonly unit_price: {
                                        readonly description: "The price of the item in cents.";
                                        readonly format: "int32";
                                        readonly minimum: 0;
                                        readonly type: "integer";
                                        readonly examples: readonly [20000];
                                        readonly maximum: 2147483647;
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                    };
                                    readonly parent_id: {
                                        readonly type: "string";
                                    };
                                };
                            };
                        };
                    };
                };
                readonly livemode: {
                    readonly description: "Whether the object exists in live mode or test mode";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly description: "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.";
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly next_action: {
                    readonly description: "contains the following attributes that will guide to continue the flow";
                    readonly properties: {
                        readonly redirect_to_url: {
                            readonly description: "contains the following attributes that will guide to continue the flow";
                            readonly properties: {
                                readonly url: {
                                    readonly description: "pay.conekta.com/{id} Indicates the url of the Conekta component to authenticate the flow through 3DS2.";
                                    readonly format: "uri";
                                    readonly type: "string";
                                    readonly examples: readonly ["https://pay.conekta.com/6fca054a85194c43971ecea35cc519bb"];
                                };
                                readonly return_url: {
                                    readonly description: "Indicates the url to which the 3DS2 flow returns at the end, when the integration is redirected.";
                                    readonly format: "uri";
                                    readonly type: "string";
                                    readonly examples: readonly ["https://my-website.com\""];
                                };
                            };
                            readonly type: "object";
                        };
                        readonly type: {
                            readonly description: "Indicates the type of action to be taken";
                            readonly type: "string";
                            readonly examples: readonly ["redirect_to_url"];
                        };
                    };
                    readonly title: "order_next_action_response";
                    readonly type: "object";
                };
                readonly object: {
                    readonly description: "String representing the object’s type. Objects of the same type share the same value.";
                    readonly type: "string";
                    readonly examples: readonly ["order"];
                };
                readonly payment_status: {
                    readonly description: "The payment status of the order.";
                    readonly type: "string";
                    readonly examples: readonly ["paid"];
                };
                readonly processing_mode: {
                    readonly description: "Indicates the processing mode for the order, either ecommerce, recurrent or validation.";
                    readonly type: "string";
                    readonly examples: readonly ["ecommerce"];
                };
                readonly shipping_contact: {
                    readonly type: "object";
                    readonly description: "Contains the detail of the shipping addresses that the client has active or has used in Conekta";
                    readonly properties: {
                        readonly created_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1675715413];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["adr_1234567890"];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["shipping_contact"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["+525511223344"];
                        };
                        readonly receiver: {
                            readonly type: "string";
                            readonly examples: readonly ["Marvin Fuller"];
                        };
                        readonly between_streets: {
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["Ackerman Crescent"];
                        };
                        readonly address: {
                            readonly type: "object";
                            readonly properties: {
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["shipping_address"];
                                };
                                readonly street1: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly residential: {
                                    readonly type: readonly ["boolean", "null"];
                                    readonly examples: readonly [true];
                                };
                            };
                        };
                        readonly parent_id: {
                            readonly type: "string";
                        };
                        readonly default: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly metadata: {
                            readonly description: "Metadata associated with the shipping contact";
                            readonly maxProperties: 100;
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                        readonly deleted: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                    };
                };
                readonly updated_at: {
                    readonly description: "The time at which the object was last updated in seconds since the Unix epoch";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1676328434];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
            readonly title: "order_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "402": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrderRefund: {
    readonly body: {
        readonly properties: {
            readonly amount: {
                readonly description: "Amount to be refunded in cents";
                readonly type: "integer";
                readonly examples: readonly [500];
            };
            readonly expires_at: {
                readonly format: "int64";
                readonly type: readonly ["integer", "null"];
                readonly examples: readonly [1553273553];
                readonly minimum: -9223372036854776000;
                readonly maximum: 9223372036854776000;
            };
            readonly reason: {
                readonly description: "Reason for the refund";
                readonly type: "string";
                readonly examples: readonly ["suspected_fraud"];
            };
        };
        readonly required: readonly ["amount", "reason"];
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "order response";
            readonly properties: {
                readonly amount: {
                    readonly description: "The total amount to be collected in cents";
                    readonly type: "integer";
                    readonly examples: readonly [21605];
                };
                readonly amount_refunded: {
                    readonly description: "The total amount refunded in cents";
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly channel: {
                    readonly properties: {
                        readonly segment: {
                            readonly type: "string";
                            readonly examples: readonly ["Checkout"];
                        };
                        readonly checkout_request_id: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                        };
                        readonly checkout_request_type: {
                            readonly type: "string";
                            readonly examples: readonly ["HostedPayment"];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                        };
                    };
                    readonly type: "object";
                };
                readonly charges: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "charges_data_response";
                                readonly type: "object";
                                readonly properties: {
                                    readonly amount: {
                                        readonly type: "integer";
                                        readonly examples: readonly [4321];
                                    };
                                    readonly channel: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly segment: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Checkout"];
                                            };
                                            readonly checkout_request_id: {
                                                readonly type: "string";
                                                readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                                            };
                                            readonly checkout_request_type: {
                                                readonly type: "string";
                                                readonly examples: readonly ["HostedPayment"];
                                            };
                                            readonly id: {
                                                readonly type: "string";
                                                readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                                            };
                                        };
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1676386026];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly currency: {
                                        readonly type: "string";
                                        readonly examples: readonly ["MXN"];
                                    };
                                    readonly customer_id: {
                                        readonly type: "string";
                                    };
                                    readonly description: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Payment from order"];
                                    };
                                    readonly device_fingerprint: {
                                        readonly type: "string";
                                        readonly examples: readonly ["6FR3chaU4Y1nGAW5NAGd1rcjAKa142Ba"];
                                    };
                                    readonly failure_code: {
                                        readonly type: "string";
                                        readonly examples: readonly ["suspected_fraud"];
                                    };
                                    readonly failure_message: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Este cargo ha sido declinado porque el comportamiento del comprador es sospechoso."];
                                    };
                                    readonly id: {
                                        readonly description: "Charge ID";
                                        readonly type: "string";
                                        readonly examples: readonly ["63efa757cf65380001aec040"];
                                    };
                                    readonly livemode: {
                                        readonly description: "Whether the charge was made in live mode or not";
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["charge"];
                                    };
                                    readonly order_id: {
                                        readonly description: "Order ID";
                                        readonly type: "string";
                                        readonly examples: readonly ["ord_2tN73UdUSNrYRPD9r"];
                                    };
                                    readonly paid_at: {
                                        readonly description: "Payment date";
                                        readonly format: "int64";
                                        readonly type: readonly ["integer", "null"];
                                        readonly examples: readonly [1676390742];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly payment_method: {
                                        readonly discriminator: {
                                            readonly mapping: {
                                                readonly cash_payment: "payment_method_cash";
                                                readonly card_payment: "payment_method_card";
                                                readonly bank_transfer_payment: "payment_method_bank_transfer";
                                            };
                                            readonly propertyName: "object";
                                        };
                                        readonly oneOf: readonly [{
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for cash responses";
                                            readonly title: "charge_data_payment_method_cash_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly auth_code: {
                                                    readonly type: readonly ["integer", "null"];
                                                    readonly examples: readonly [542563];
                                                };
                                                readonly cashier_id: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly examples: readonly ["OINM01010"];
                                                };
                                                readonly reference: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["93000262276908"];
                                                };
                                                readonly barcode_url: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                                                };
                                                readonly expires_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [0];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly service_name: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["OxxoPay"];
                                                };
                                                readonly store: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly examples: readonly ["10MON50EDI"];
                                                };
                                                readonly store_name: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["OXXO"];
                                                };
                                            };
                                        }, {
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for card responses";
                                            readonly title: "charge_data_payment_method_card_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly account_type: {
                                                    readonly description: "Account type of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Credit"];
                                                };
                                                readonly auth_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["867372"];
                                                };
                                                readonly brand: {
                                                    readonly description: "Brand of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["visa"];
                                                };
                                                readonly contract_id: {
                                                    readonly description: "Id sent for recurrent charges.";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["S781317595"];
                                                };
                                                readonly country: {
                                                    readonly description: "Country of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["MX"];
                                                };
                                                readonly exp_month: {
                                                    readonly description: "Expiration month of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["02"];
                                                };
                                                readonly exp_year: {
                                                    readonly description: "Expiration year of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["2026"];
                                                };
                                                readonly fraud_indicators: {
                                                    readonly type: "array";
                                                    readonly items: {};
                                                };
                                                readonly issuer: {
                                                    readonly description: "Issuer of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["BANAMEX"];
                                                };
                                                readonly last4: {
                                                    readonly description: "Last 4 digits of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["4242"];
                                                };
                                                readonly name: {
                                                    readonly description: "Name of the cardholder";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Fulanito Perez"];
                                                };
                                            };
                                        }, {
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for bank transfer responses";
                                            readonly title: "charge_data_payment_method_bank_transfer_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly bank: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["STP"];
                                                };
                                                readonly clabe: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["646180111805034237"];
                                                };
                                                readonly description: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly executed_at: {
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly expires_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [1683053729];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly issuing_account_bank: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_number: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_holder_name: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_tax_id: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly payment_attempts: {
                                                    readonly type: "array";
                                                    readonly items: {};
                                                };
                                                readonly receiving_account_holder_name: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly receiving_account_number: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["646180111805034237"];
                                                };
                                                readonly receiving_account_bank: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["STP"];
                                                };
                                                readonly receiving_account_tax_id: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly reference_number: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly tracking_code: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                        }];
                                        readonly title: "charge_response_payment_method";
                                    };
                                    readonly reference_id: {
                                        readonly description: "Reference ID of the charge";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["ref_2tN73UdUSNrYRPD9r"];
                                    };
                                    readonly refunds: {
                                        readonly title: "charge_response_refunds";
                                        readonly type: readonly ["object", "null"];
                                        readonly description: "page metadata";
                                        readonly required: readonly ["has_more", "object"];
                                        readonly properties: {
                                            readonly has_more: {
                                                readonly description: "Indicates if there are more pages to be requested";
                                                readonly type: "boolean";
                                                readonly examples: readonly [false];
                                            };
                                            readonly object: {
                                                readonly description: "Object type, in this case is list";
                                                readonly type: "string";
                                                readonly examples: readonly ["list"];
                                            };
                                            readonly next_page_url: {
                                                readonly description: "URL of the next page.";
                                                readonly type: readonly ["string", "null"];
                                                readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                                            };
                                            readonly previous_page_url: {
                                                readonly description: "Url of the previous page.";
                                                readonly type: readonly ["string", "null"];
                                                readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                                            };
                                            readonly data: {
                                                readonly description: "refunds";
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly required: readonly ["amount", "created_at", "id", "object"];
                                                    readonly title: "charge_response_refunds_data";
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly amount: {
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [-15000];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly auth_code: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["867372"];
                                                        };
                                                        readonly created_at: {
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [1678226878];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly expires_at: {
                                                            readonly description: "refund expiration date";
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [1678226878];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly id: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["6407b5bee1329a000175ba11"];
                                                        };
                                                        readonly object: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["refund"];
                                                        };
                                                        readonly status: {
                                                            readonly description: "refund status";
                                                            readonly type: "string";
                                                            readonly examples: readonly ["pending"];
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly status: {
                                        readonly type: "string";
                                        readonly examples: readonly ["pending_payment"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly checkout: {
                    readonly properties: {
                        readonly allowed_payment_methods: {
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly type: "array";
                        };
                        readonly can_not_expire: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly emails_sent: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly exclude_card_networks: {
                            readonly items: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly type: "array";
                        };
                        readonly expires_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1676613599];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly failure_url: {
                            readonly type: "string";
                            readonly examples: readonly ["http://187.216.228.66:2222/SysVentasPagos/Acceso.aspx"];
                        };
                        readonly force_3ds_flow: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                        };
                        readonly is_redirect_on_failure: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly livemode: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                        readonly monthly_installments_enabled: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly monthly_installments_options: {
                            readonly items: {
                                readonly format: "int8";
                                readonly type: "integer";
                                readonly minimum: -128;
                                readonly maximum: 127;
                            };
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["ord-2tNDzhA4Akmzj11AS"];
                        };
                        readonly needs_shipping_contact: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["checkout"];
                        };
                        readonly on_demand_enabled: {
                            readonly type: readonly ["boolean", "null"];
                            readonly examples: readonly [true];
                        };
                        readonly paid_payments_count: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly recurrent: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly redirection_time: {
                            readonly description: "number of seconds to wait before redirecting to the success_url";
                            readonly format: "int8";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [2];
                            readonly minimum: -128;
                            readonly maximum: 127;
                        };
                        readonly slug: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a85194c43971ecea35cc519bb"];
                        };
                        readonly sms_sent: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly success_url: {
                            readonly type: "string";
                            readonly examples: readonly ["http://187.216.228.66:2222/SysVentasPagos/Acceso.aspx"];
                        };
                        readonly starts_at: {
                            readonly type: "integer";
                            readonly examples: readonly [1676354400];
                        };
                        readonly status: {
                            readonly type: "string";
                            readonly examples: readonly ["Issued"];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly examples: readonly ["HostedPayment"];
                        };
                        readonly url: {
                            readonly type: "string";
                            readonly examples: readonly ["https://pay.stg.conekta.io/checkout/6fca054a85194c43971ecea35cc519bb"];
                        };
                    };
                    readonly type: "object";
                };
                readonly created_at: {
                    readonly description: "The time at which the object was created in seconds since the Unix epoch";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1676328434];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly description: "The three-letter ISO 4217 currency code. The currency of the order.";
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly customer_info: {
                    readonly type: "object";
                    readonly title: "order_customer_info_response";
                    readonly properties: {
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["customer_info"];
                        };
                        readonly customer_custom_reference: {
                            readonly description: "Custom reference";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["custom_reference"];
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["DevTest"];
                        };
                        readonly email: {
                            readonly format: "email";
                            readonly type: "string";
                            readonly examples: readonly ["test@conekta.com"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["5522997233"];
                        };
                        readonly corporate: {
                            readonly default: false;
                            readonly type: "boolean";
                        };
                        readonly customer_id: {
                            readonly type: "string";
                            readonly examples: readonly ["cus_23874283647"];
                        };
                    };
                };
                readonly discount_lines: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "discount_lines_data_response";
                                readonly description: "List of discounts that apply to the order.";
                                readonly required: readonly ["amount", "code", "id", "object", "parent_id", "type"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly amount: {
                                        readonly description: "The amount to be deducted from the total sum of all payments, in cents.";
                                        readonly format: "int64";
                                        readonly minimum: 0;
                                        readonly type: "integer";
                                        readonly examples: readonly [500];
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly code: {
                                        readonly description: "Discount code.";
                                        readonly type: "string";
                                        readonly examples: readonly ["123"];
                                    };
                                    readonly type: {
                                        readonly description: "It can be 'loyalty', 'campaign', 'coupon' o 'sign'";
                                        readonly type: "string";
                                        readonly examples: readonly ["loyalty"];
                                    };
                                    readonly id: {
                                        readonly description: "The discount line id";
                                        readonly type: "string";
                                        readonly examples: readonly ["dis_lin_2tQQ58HPgPw7StE8z"];
                                    };
                                    readonly object: {
                                        readonly description: "The object name";
                                        readonly type: "string";
                                        readonly examples: readonly ["discount_line"];
                                    };
                                    readonly parent_id: {
                                        readonly description: "The order id";
                                        readonly type: "string";
                                        readonly examples: readonly ["ord_2tPAmKCEJqh8RE6nY"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly fiscal_entity: {
                    readonly description: "Fiscal entity of the order, Currently it is a purely informative field";
                    readonly properties: {
                        readonly address: {
                            readonly description: "Address of the fiscal entity";
                            readonly title: "order_fiscal_entity_address_response";
                            readonly required: readonly ["city", "country", "external_number", "postal_code", "street1"];
                            readonly type: "object";
                            readonly properties: {
                                readonly street1: {
                                    readonly description: "Street name and number";
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly description: "Street name and number";
                                    readonly type: readonly ["string", "null"];
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly description: "Postal code";
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly description: "City";
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly description: "State";
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly external_number: {
                                    readonly description: "External number";
                                    readonly type: "string";
                                    readonly examples: readonly ["123"];
                                };
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["fiscal_entity_address"];
                                };
                            };
                        };
                        readonly email: {
                            readonly description: "Email of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["test@gmail.com"];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly description: "Metadata associated with the fiscal entity";
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                        readonly name: {
                            readonly description: "Name of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["Conekta Inc"];
                        };
                        readonly tax_id: {
                            readonly description: "Tax ID of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["324234234"];
                        };
                        readonly id: {
                            readonly description: "ID of the fiscal entity";
                            readonly type: "string";
                            readonly examples: readonly ["fis_ent_2tN85VYaSMyDvjB3M"];
                        };
                        readonly created_at: {
                            readonly description: "The time at which the object was created in seconds since the Unix epoch";
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1676328434];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["fiscal_entity"];
                        };
                        readonly phone: {
                            readonly description: "Phone of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["+525511223344"];
                        };
                    };
                    readonly required: readonly ["address", "created_at", "id", "object"];
                    readonly title: "order_fiscal_entity_response";
                    readonly type: readonly ["object", "null"];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tMtQQpDvfnNjiuFG"];
                };
                readonly is_refundable: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly line_items: {
                    readonly title: "order_response_products";
                    readonly description: "page metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly next_page_url: {
                            readonly description: "URL of the next page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                        };
                        readonly previous_page_url: {
                            readonly description: "Url of the previous page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "product_data_response";
                                readonly required: readonly ["name", "quantity", "unit_price"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly antifraud_info: {
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly brand: {
                                        readonly description: "The brand of the item.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Cohiba"];
                                    };
                                    readonly description: {
                                        readonly description: "Short description of the item";
                                        readonly maxLength: 250;
                                        readonly type: "string";
                                        readonly examples: readonly ["Imported From Mex."];
                                    };
                                    readonly metadata: {
                                        readonly description: "It is a key/value hash that can hold custom fields. Maximum 100 elements and allows special characters.";
                                        readonly maxProperties: 100;
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly name: {
                                        readonly description: "The name of the item. It will be displayed in the order.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Box of Cohiba S1s"];
                                    };
                                    readonly quantity: {
                                        readonly description: "The quantity of the item in the order.";
                                        readonly format: "int32";
                                        readonly minimum: 1;
                                        readonly type: "integer";
                                        readonly examples: readonly [1];
                                        readonly maximum: 2147483647;
                                    };
                                    readonly sku: {
                                        readonly description: "The stock keeping unit for the item. It is used to identify the item in the order.";
                                        readonly type: "string";
                                        readonly examples: readonly ["XYZ12345"];
                                    };
                                    readonly tags: {
                                        readonly description: "List of tags for the item. It is used to identify the item in the order.";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                        readonly examples: readonly ["food", "mexican food"];
                                    };
                                    readonly unit_price: {
                                        readonly description: "The price of the item in cents.";
                                        readonly format: "int32";
                                        readonly minimum: 0;
                                        readonly type: "integer";
                                        readonly examples: readonly [20000];
                                        readonly maximum: 2147483647;
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                    };
                                    readonly parent_id: {
                                        readonly type: "string";
                                    };
                                };
                            };
                        };
                    };
                };
                readonly livemode: {
                    readonly description: "Whether the object exists in live mode or test mode";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly description: "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.";
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly next_action: {
                    readonly description: "contains the following attributes that will guide to continue the flow";
                    readonly properties: {
                        readonly redirect_to_url: {
                            readonly description: "contains the following attributes that will guide to continue the flow";
                            readonly properties: {
                                readonly url: {
                                    readonly description: "pay.conekta.com/{id} Indicates the url of the Conekta component to authenticate the flow through 3DS2.";
                                    readonly format: "uri";
                                    readonly type: "string";
                                    readonly examples: readonly ["https://pay.conekta.com/6fca054a85194c43971ecea35cc519bb"];
                                };
                                readonly return_url: {
                                    readonly description: "Indicates the url to which the 3DS2 flow returns at the end, when the integration is redirected.";
                                    readonly format: "uri";
                                    readonly type: "string";
                                    readonly examples: readonly ["https://my-website.com\""];
                                };
                            };
                            readonly type: "object";
                        };
                        readonly type: {
                            readonly description: "Indicates the type of action to be taken";
                            readonly type: "string";
                            readonly examples: readonly ["redirect_to_url"];
                        };
                    };
                    readonly title: "order_next_action_response";
                    readonly type: "object";
                };
                readonly object: {
                    readonly description: "String representing the object’s type. Objects of the same type share the same value.";
                    readonly type: "string";
                    readonly examples: readonly ["order"];
                };
                readonly payment_status: {
                    readonly description: "The payment status of the order.";
                    readonly type: "string";
                    readonly examples: readonly ["paid"];
                };
                readonly processing_mode: {
                    readonly description: "Indicates the processing mode for the order, either ecommerce, recurrent or validation.";
                    readonly type: "string";
                    readonly examples: readonly ["ecommerce"];
                };
                readonly shipping_contact: {
                    readonly type: "object";
                    readonly description: "Contains the detail of the shipping addresses that the client has active or has used in Conekta";
                    readonly properties: {
                        readonly created_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1675715413];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["adr_1234567890"];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["shipping_contact"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["+525511223344"];
                        };
                        readonly receiver: {
                            readonly type: "string";
                            readonly examples: readonly ["Marvin Fuller"];
                        };
                        readonly between_streets: {
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["Ackerman Crescent"];
                        };
                        readonly address: {
                            readonly type: "object";
                            readonly properties: {
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["shipping_address"];
                                };
                                readonly street1: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly residential: {
                                    readonly type: readonly ["boolean", "null"];
                                    readonly examples: readonly [true];
                                };
                            };
                        };
                        readonly parent_id: {
                            readonly type: "string";
                        };
                        readonly default: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly metadata: {
                            readonly description: "Metadata associated with the shipping contact";
                            readonly maxProperties: 100;
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                        readonly deleted: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                    };
                };
                readonly updated_at: {
                    readonly description: "The time at which the object was last updated in seconds since the Unix epoch";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1676328434];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
            readonly title: "order_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "402": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrdersCreateCapture: {
    readonly body: {
        readonly properties: {
            readonly amount: {
                readonly description: "Amount to capture";
                readonly format: "int64";
                readonly minimum: 1;
                readonly type: readonly ["integer", "null"];
                readonly examples: readonly [500];
                readonly maximum: 9223372036854776000;
            };
        };
        readonly required: readonly ["amount"];
        readonly title: "order_capture_request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "order response";
            readonly properties: {
                readonly amount: {
                    readonly description: "The total amount to be collected in cents";
                    readonly type: "integer";
                    readonly examples: readonly [21605];
                };
                readonly amount_refunded: {
                    readonly description: "The total amount refunded in cents";
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly channel: {
                    readonly properties: {
                        readonly segment: {
                            readonly type: "string";
                            readonly examples: readonly ["Checkout"];
                        };
                        readonly checkout_request_id: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                        };
                        readonly checkout_request_type: {
                            readonly type: "string";
                            readonly examples: readonly ["HostedPayment"];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                        };
                    };
                    readonly type: "object";
                };
                readonly charges: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "charges_data_response";
                                readonly type: "object";
                                readonly properties: {
                                    readonly amount: {
                                        readonly type: "integer";
                                        readonly examples: readonly [4321];
                                    };
                                    readonly channel: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly segment: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Checkout"];
                                            };
                                            readonly checkout_request_id: {
                                                readonly type: "string";
                                                readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                                            };
                                            readonly checkout_request_type: {
                                                readonly type: "string";
                                                readonly examples: readonly ["HostedPayment"];
                                            };
                                            readonly id: {
                                                readonly type: "string";
                                                readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                                            };
                                        };
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1676386026];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly currency: {
                                        readonly type: "string";
                                        readonly examples: readonly ["MXN"];
                                    };
                                    readonly customer_id: {
                                        readonly type: "string";
                                    };
                                    readonly description: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Payment from order"];
                                    };
                                    readonly device_fingerprint: {
                                        readonly type: "string";
                                        readonly examples: readonly ["6FR3chaU4Y1nGAW5NAGd1rcjAKa142Ba"];
                                    };
                                    readonly failure_code: {
                                        readonly type: "string";
                                        readonly examples: readonly ["suspected_fraud"];
                                    };
                                    readonly failure_message: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Este cargo ha sido declinado porque el comportamiento del comprador es sospechoso."];
                                    };
                                    readonly id: {
                                        readonly description: "Charge ID";
                                        readonly type: "string";
                                        readonly examples: readonly ["63efa757cf65380001aec040"];
                                    };
                                    readonly livemode: {
                                        readonly description: "Whether the charge was made in live mode or not";
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["charge"];
                                    };
                                    readonly order_id: {
                                        readonly description: "Order ID";
                                        readonly type: "string";
                                        readonly examples: readonly ["ord_2tN73UdUSNrYRPD9r"];
                                    };
                                    readonly paid_at: {
                                        readonly description: "Payment date";
                                        readonly format: "int64";
                                        readonly type: readonly ["integer", "null"];
                                        readonly examples: readonly [1676390742];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly payment_method: {
                                        readonly discriminator: {
                                            readonly mapping: {
                                                readonly cash_payment: "payment_method_cash";
                                                readonly card_payment: "payment_method_card";
                                                readonly bank_transfer_payment: "payment_method_bank_transfer";
                                            };
                                            readonly propertyName: "object";
                                        };
                                        readonly oneOf: readonly [{
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for cash responses";
                                            readonly title: "charge_data_payment_method_cash_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly auth_code: {
                                                    readonly type: readonly ["integer", "null"];
                                                    readonly examples: readonly [542563];
                                                };
                                                readonly cashier_id: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly examples: readonly ["OINM01010"];
                                                };
                                                readonly reference: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["93000262276908"];
                                                };
                                                readonly barcode_url: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                                                };
                                                readonly expires_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [0];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly service_name: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["OxxoPay"];
                                                };
                                                readonly store: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly examples: readonly ["10MON50EDI"];
                                                };
                                                readonly store_name: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["OXXO"];
                                                };
                                            };
                                        }, {
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for card responses";
                                            readonly title: "charge_data_payment_method_card_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly account_type: {
                                                    readonly description: "Account type of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Credit"];
                                                };
                                                readonly auth_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["867372"];
                                                };
                                                readonly brand: {
                                                    readonly description: "Brand of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["visa"];
                                                };
                                                readonly contract_id: {
                                                    readonly description: "Id sent for recurrent charges.";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["S781317595"];
                                                };
                                                readonly country: {
                                                    readonly description: "Country of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["MX"];
                                                };
                                                readonly exp_month: {
                                                    readonly description: "Expiration month of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["02"];
                                                };
                                                readonly exp_year: {
                                                    readonly description: "Expiration year of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["2026"];
                                                };
                                                readonly fraud_indicators: {
                                                    readonly type: "array";
                                                    readonly items: {};
                                                };
                                                readonly issuer: {
                                                    readonly description: "Issuer of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["BANAMEX"];
                                                };
                                                readonly last4: {
                                                    readonly description: "Last 4 digits of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["4242"];
                                                };
                                                readonly name: {
                                                    readonly description: "Name of the cardholder";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Fulanito Perez"];
                                                };
                                            };
                                        }, {
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for bank transfer responses";
                                            readonly title: "charge_data_payment_method_bank_transfer_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly bank: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["STP"];
                                                };
                                                readonly clabe: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["646180111805034237"];
                                                };
                                                readonly description: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly executed_at: {
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly expires_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [1683053729];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly issuing_account_bank: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_number: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_holder_name: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_tax_id: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly payment_attempts: {
                                                    readonly type: "array";
                                                    readonly items: {};
                                                };
                                                readonly receiving_account_holder_name: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly receiving_account_number: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["646180111805034237"];
                                                };
                                                readonly receiving_account_bank: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["STP"];
                                                };
                                                readonly receiving_account_tax_id: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly reference_number: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly tracking_code: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                        }];
                                        readonly title: "charge_response_payment_method";
                                    };
                                    readonly reference_id: {
                                        readonly description: "Reference ID of the charge";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["ref_2tN73UdUSNrYRPD9r"];
                                    };
                                    readonly refunds: {
                                        readonly title: "charge_response_refunds";
                                        readonly type: readonly ["object", "null"];
                                        readonly description: "page metadata";
                                        readonly required: readonly ["has_more", "object"];
                                        readonly properties: {
                                            readonly has_more: {
                                                readonly description: "Indicates if there are more pages to be requested";
                                                readonly type: "boolean";
                                                readonly examples: readonly [false];
                                            };
                                            readonly object: {
                                                readonly description: "Object type, in this case is list";
                                                readonly type: "string";
                                                readonly examples: readonly ["list"];
                                            };
                                            readonly next_page_url: {
                                                readonly description: "URL of the next page.";
                                                readonly type: readonly ["string", "null"];
                                                readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                                            };
                                            readonly previous_page_url: {
                                                readonly description: "Url of the previous page.";
                                                readonly type: readonly ["string", "null"];
                                                readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                                            };
                                            readonly data: {
                                                readonly description: "refunds";
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly required: readonly ["amount", "created_at", "id", "object"];
                                                    readonly title: "charge_response_refunds_data";
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly amount: {
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [-15000];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly auth_code: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["867372"];
                                                        };
                                                        readonly created_at: {
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [1678226878];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly expires_at: {
                                                            readonly description: "refund expiration date";
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [1678226878];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly id: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["6407b5bee1329a000175ba11"];
                                                        };
                                                        readonly object: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["refund"];
                                                        };
                                                        readonly status: {
                                                            readonly description: "refund status";
                                                            readonly type: "string";
                                                            readonly examples: readonly ["pending"];
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly status: {
                                        readonly type: "string";
                                        readonly examples: readonly ["pending_payment"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly checkout: {
                    readonly properties: {
                        readonly allowed_payment_methods: {
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly type: "array";
                        };
                        readonly can_not_expire: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly emails_sent: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly exclude_card_networks: {
                            readonly items: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly type: "array";
                        };
                        readonly expires_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1676613599];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly failure_url: {
                            readonly type: "string";
                            readonly examples: readonly ["http://187.216.228.66:2222/SysVentasPagos/Acceso.aspx"];
                        };
                        readonly force_3ds_flow: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                        };
                        readonly is_redirect_on_failure: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly livemode: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                        readonly monthly_installments_enabled: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly monthly_installments_options: {
                            readonly items: {
                                readonly format: "int8";
                                readonly type: "integer";
                                readonly minimum: -128;
                                readonly maximum: 127;
                            };
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["ord-2tNDzhA4Akmzj11AS"];
                        };
                        readonly needs_shipping_contact: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["checkout"];
                        };
                        readonly on_demand_enabled: {
                            readonly type: readonly ["boolean", "null"];
                            readonly examples: readonly [true];
                        };
                        readonly paid_payments_count: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly recurrent: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly redirection_time: {
                            readonly description: "number of seconds to wait before redirecting to the success_url";
                            readonly format: "int8";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [2];
                            readonly minimum: -128;
                            readonly maximum: 127;
                        };
                        readonly slug: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a85194c43971ecea35cc519bb"];
                        };
                        readonly sms_sent: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly success_url: {
                            readonly type: "string";
                            readonly examples: readonly ["http://187.216.228.66:2222/SysVentasPagos/Acceso.aspx"];
                        };
                        readonly starts_at: {
                            readonly type: "integer";
                            readonly examples: readonly [1676354400];
                        };
                        readonly status: {
                            readonly type: "string";
                            readonly examples: readonly ["Issued"];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly examples: readonly ["HostedPayment"];
                        };
                        readonly url: {
                            readonly type: "string";
                            readonly examples: readonly ["https://pay.stg.conekta.io/checkout/6fca054a85194c43971ecea35cc519bb"];
                        };
                    };
                    readonly type: "object";
                };
                readonly created_at: {
                    readonly description: "The time at which the object was created in seconds since the Unix epoch";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1676328434];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly description: "The three-letter ISO 4217 currency code. The currency of the order.";
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly customer_info: {
                    readonly type: "object";
                    readonly title: "order_customer_info_response";
                    readonly properties: {
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["customer_info"];
                        };
                        readonly customer_custom_reference: {
                            readonly description: "Custom reference";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["custom_reference"];
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["DevTest"];
                        };
                        readonly email: {
                            readonly format: "email";
                            readonly type: "string";
                            readonly examples: readonly ["test@conekta.com"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["5522997233"];
                        };
                        readonly corporate: {
                            readonly default: false;
                            readonly type: "boolean";
                        };
                        readonly customer_id: {
                            readonly type: "string";
                            readonly examples: readonly ["cus_23874283647"];
                        };
                    };
                };
                readonly discount_lines: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "discount_lines_data_response";
                                readonly description: "List of discounts that apply to the order.";
                                readonly required: readonly ["amount", "code", "id", "object", "parent_id", "type"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly amount: {
                                        readonly description: "The amount to be deducted from the total sum of all payments, in cents.";
                                        readonly format: "int64";
                                        readonly minimum: 0;
                                        readonly type: "integer";
                                        readonly examples: readonly [500];
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly code: {
                                        readonly description: "Discount code.";
                                        readonly type: "string";
                                        readonly examples: readonly ["123"];
                                    };
                                    readonly type: {
                                        readonly description: "It can be 'loyalty', 'campaign', 'coupon' o 'sign'";
                                        readonly type: "string";
                                        readonly examples: readonly ["loyalty"];
                                    };
                                    readonly id: {
                                        readonly description: "The discount line id";
                                        readonly type: "string";
                                        readonly examples: readonly ["dis_lin_2tQQ58HPgPw7StE8z"];
                                    };
                                    readonly object: {
                                        readonly description: "The object name";
                                        readonly type: "string";
                                        readonly examples: readonly ["discount_line"];
                                    };
                                    readonly parent_id: {
                                        readonly description: "The order id";
                                        readonly type: "string";
                                        readonly examples: readonly ["ord_2tPAmKCEJqh8RE6nY"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly fiscal_entity: {
                    readonly description: "Fiscal entity of the order, Currently it is a purely informative field";
                    readonly properties: {
                        readonly address: {
                            readonly description: "Address of the fiscal entity";
                            readonly title: "order_fiscal_entity_address_response";
                            readonly required: readonly ["city", "country", "external_number", "postal_code", "street1"];
                            readonly type: "object";
                            readonly properties: {
                                readonly street1: {
                                    readonly description: "Street name and number";
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly description: "Street name and number";
                                    readonly type: readonly ["string", "null"];
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly description: "Postal code";
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly description: "City";
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly description: "State";
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly external_number: {
                                    readonly description: "External number";
                                    readonly type: "string";
                                    readonly examples: readonly ["123"];
                                };
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["fiscal_entity_address"];
                                };
                            };
                        };
                        readonly email: {
                            readonly description: "Email of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["test@gmail.com"];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly description: "Metadata associated with the fiscal entity";
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                        readonly name: {
                            readonly description: "Name of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["Conekta Inc"];
                        };
                        readonly tax_id: {
                            readonly description: "Tax ID of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["324234234"];
                        };
                        readonly id: {
                            readonly description: "ID of the fiscal entity";
                            readonly type: "string";
                            readonly examples: readonly ["fis_ent_2tN85VYaSMyDvjB3M"];
                        };
                        readonly created_at: {
                            readonly description: "The time at which the object was created in seconds since the Unix epoch";
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1676328434];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["fiscal_entity"];
                        };
                        readonly phone: {
                            readonly description: "Phone of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["+525511223344"];
                        };
                    };
                    readonly required: readonly ["address", "created_at", "id", "object"];
                    readonly title: "order_fiscal_entity_response";
                    readonly type: readonly ["object", "null"];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tMtQQpDvfnNjiuFG"];
                };
                readonly is_refundable: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly line_items: {
                    readonly title: "order_response_products";
                    readonly description: "page metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly next_page_url: {
                            readonly description: "URL of the next page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                        };
                        readonly previous_page_url: {
                            readonly description: "Url of the previous page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "product_data_response";
                                readonly required: readonly ["name", "quantity", "unit_price"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly antifraud_info: {
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly brand: {
                                        readonly description: "The brand of the item.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Cohiba"];
                                    };
                                    readonly description: {
                                        readonly description: "Short description of the item";
                                        readonly maxLength: 250;
                                        readonly type: "string";
                                        readonly examples: readonly ["Imported From Mex."];
                                    };
                                    readonly metadata: {
                                        readonly description: "It is a key/value hash that can hold custom fields. Maximum 100 elements and allows special characters.";
                                        readonly maxProperties: 100;
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly name: {
                                        readonly description: "The name of the item. It will be displayed in the order.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Box of Cohiba S1s"];
                                    };
                                    readonly quantity: {
                                        readonly description: "The quantity of the item in the order.";
                                        readonly format: "int32";
                                        readonly minimum: 1;
                                        readonly type: "integer";
                                        readonly examples: readonly [1];
                                        readonly maximum: 2147483647;
                                    };
                                    readonly sku: {
                                        readonly description: "The stock keeping unit for the item. It is used to identify the item in the order.";
                                        readonly type: "string";
                                        readonly examples: readonly ["XYZ12345"];
                                    };
                                    readonly tags: {
                                        readonly description: "List of tags for the item. It is used to identify the item in the order.";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                        readonly examples: readonly ["food", "mexican food"];
                                    };
                                    readonly unit_price: {
                                        readonly description: "The price of the item in cents.";
                                        readonly format: "int32";
                                        readonly minimum: 0;
                                        readonly type: "integer";
                                        readonly examples: readonly [20000];
                                        readonly maximum: 2147483647;
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                    };
                                    readonly parent_id: {
                                        readonly type: "string";
                                    };
                                };
                            };
                        };
                    };
                };
                readonly livemode: {
                    readonly description: "Whether the object exists in live mode or test mode";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly description: "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.";
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly next_action: {
                    readonly description: "contains the following attributes that will guide to continue the flow";
                    readonly properties: {
                        readonly redirect_to_url: {
                            readonly description: "contains the following attributes that will guide to continue the flow";
                            readonly properties: {
                                readonly url: {
                                    readonly description: "pay.conekta.com/{id} Indicates the url of the Conekta component to authenticate the flow through 3DS2.";
                                    readonly format: "uri";
                                    readonly type: "string";
                                    readonly examples: readonly ["https://pay.conekta.com/6fca054a85194c43971ecea35cc519bb"];
                                };
                                readonly return_url: {
                                    readonly description: "Indicates the url to which the 3DS2 flow returns at the end, when the integration is redirected.";
                                    readonly format: "uri";
                                    readonly type: "string";
                                    readonly examples: readonly ["https://my-website.com\""];
                                };
                            };
                            readonly type: "object";
                        };
                        readonly type: {
                            readonly description: "Indicates the type of action to be taken";
                            readonly type: "string";
                            readonly examples: readonly ["redirect_to_url"];
                        };
                    };
                    readonly title: "order_next_action_response";
                    readonly type: "object";
                };
                readonly object: {
                    readonly description: "String representing the object’s type. Objects of the same type share the same value.";
                    readonly type: "string";
                    readonly examples: readonly ["order"];
                };
                readonly payment_status: {
                    readonly description: "The payment status of the order.";
                    readonly type: "string";
                    readonly examples: readonly ["paid"];
                };
                readonly processing_mode: {
                    readonly description: "Indicates the processing mode for the order, either ecommerce, recurrent or validation.";
                    readonly type: "string";
                    readonly examples: readonly ["ecommerce"];
                };
                readonly shipping_contact: {
                    readonly type: "object";
                    readonly description: "Contains the detail of the shipping addresses that the client has active or has used in Conekta";
                    readonly properties: {
                        readonly created_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1675715413];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["adr_1234567890"];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["shipping_contact"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["+525511223344"];
                        };
                        readonly receiver: {
                            readonly type: "string";
                            readonly examples: readonly ["Marvin Fuller"];
                        };
                        readonly between_streets: {
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["Ackerman Crescent"];
                        };
                        readonly address: {
                            readonly type: "object";
                            readonly properties: {
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["shipping_address"];
                                };
                                readonly street1: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly residential: {
                                    readonly type: readonly ["boolean", "null"];
                                    readonly examples: readonly [true];
                                };
                            };
                        };
                        readonly parent_id: {
                            readonly type: "string";
                        };
                        readonly default: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly metadata: {
                            readonly description: "Metadata associated with the shipping contact";
                            readonly maxProperties: 100;
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                        readonly deleted: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                    };
                };
                readonly updated_at: {
                    readonly description: "The time at which the object was last updated in seconds since the Unix epoch";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1676328434];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
            readonly title: "order_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "428": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrdersCreateCharge: {
    readonly body: {
        readonly description: "The charges to be made";
        readonly properties: {
            readonly amount: {
                readonly description: "Amount to be charged in cents";
                readonly type: "integer";
                readonly examples: readonly [40000];
            };
            readonly payment_method: {
                readonly oneOf: readonly [{
                    readonly title: "payment_method_card_request";
                    readonly description: "Contains details of the payment methods that the customer has active or has used in Conekta";
                    readonly required: readonly ["cvc", "exp_month", "exp_year", "name", "number", "type"];
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly description: "Type of payment method";
                            readonly type: "string";
                            readonly examples: readonly ["card | cash | spei"];
                        };
                        readonly cvc: {
                            readonly description: "Card security code";
                            readonly maxLength: 4;
                            readonly minLength: 3;
                            readonly type: "string";
                            readonly examples: readonly ["198"];
                        };
                        readonly exp_month: {
                            readonly description: "Card expiration month";
                            readonly maxLength: 2;
                            readonly minLength: 2;
                            readonly type: "string";
                            readonly examples: readonly ["12"];
                        };
                        readonly exp_year: {
                            readonly description: "Card expiration year";
                            readonly maxLength: 4;
                            readonly minLength: 4;
                            readonly type: "string";
                            readonly examples: readonly ["2025"];
                        };
                        readonly name: {
                            readonly description: "Cardholder name";
                            readonly type: "string";
                            readonly examples: readonly ["John Doe"];
                        };
                        readonly number: {
                            readonly description: "Card number";
                            readonly type: "string";
                            readonly examples: readonly ["4242424242424242"];
                        };
                    };
                }, {
                    readonly description: "Payment method used in the charge. Go to the [payment methods](https://developers.conekta.com/reference/m%C3%A9todos-de-pago) section for more details\n";
                    readonly properties: {
                        readonly expires_at: {
                            readonly description: "Method expiration date as unix timestamp";
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1677196303];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly monthly_installments: {
                            readonly description: "How many months without interest to apply, it can be 3, 6, 9, 12 or 18";
                            readonly format: "int8";
                            readonly type: "integer";
                            readonly minimum: -128;
                            readonly maximum: 127;
                        };
                        readonly type: {
                            readonly description: "Type of payment method";
                            readonly type: "string";
                            readonly examples: readonly ["card"];
                        };
                        readonly token_id: {
                            readonly type: "string";
                            readonly examples: readonly ["tok_2897348234"];
                        };
                        readonly payment_source_id: {
                            readonly type: "string";
                            readonly examples: readonly ["src_2tLkkyfMPh6v7pFry"];
                        };
                        readonly cvc: {
                            readonly description: "Optional, It is a value that allows identifying the security code of the card. Only for PCI merchants";
                            readonly type: "string";
                            readonly examples: readonly ["123"];
                        };
                        readonly contract_id: {
                            readonly description: "Optional id sent to indicate the bank contract for recurrent card charges.";
                            readonly type: "string";
                            readonly examples: readonly ["S781317595"];
                        };
                    };
                    readonly required: readonly ["type"];
                    readonly title: "payment_method_general_request";
                    readonly type: "object";
                }];
                readonly title: "charge_request_payment_method";
            };
            readonly reference_id: {
                readonly description: "Custom reference to add to the charge";
                readonly type: "string";
            };
        };
        readonly required: readonly ["payment_method"];
        readonly title: "charges";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly properties: {
                readonly amount: {
                    readonly type: "integer";
                    readonly examples: readonly [4321];
                };
                readonly channel: {
                    readonly properties: {
                        readonly segment: {
                            readonly type: "string";
                            readonly examples: readonly ["Checkout"];
                        };
                        readonly checkout_request_id: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                        };
                        readonly checkout_request_type: {
                            readonly type: "string";
                            readonly examples: readonly ["HostedPayment"];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                        };
                    };
                    readonly type: "object";
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1676386026];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly customer_id: {
                    readonly type: "string";
                };
                readonly description: {
                    readonly type: "string";
                    readonly examples: readonly ["Payment from order"];
                };
                readonly device_fingerprint: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["6FR3chaU4Y1nGAW5NAGd1rcjAKa142Ba"];
                };
                readonly failure_code: {
                    readonly type: "string";
                    readonly examples: readonly ["suspected_fraud"];
                };
                readonly failure_message: {
                    readonly type: "string";
                    readonly examples: readonly ["Este cargo ha sido declinado porque el comportamiento del comprador es sospechoso."];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["63efa757cf65380001aec040"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly monthly_installments: {
                    readonly type: readonly ["integer", "null"];
                };
                readonly object: {
                    readonly type: "string";
                };
                readonly order_id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tN73UdUSNrYRPD9r"];
                };
                readonly paid_at: {
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1676390742];
                };
                readonly payment_method: {
                    readonly discriminator: {
                        readonly mapping: {
                            readonly cash_payment: "payment_method_cash";
                            readonly card_payment: "payment_method_card";
                            readonly bank_transfer_payment: "payment_method_bank_transfer";
                        };
                        readonly propertyName: "object";
                    };
                    readonly oneOf: readonly [{
                        readonly required: readonly ["object"];
                        readonly type: "object";
                        readonly description: "use for cash responses";
                        readonly title: "charge_data_payment_method_cash_response";
                        readonly properties: {
                            readonly type: {
                                readonly type: "string";
                            };
                            readonly object: {
                                readonly type: "string";
                                readonly examples: readonly ["payment_source"];
                            };
                            readonly auth_code: {
                                readonly type: readonly ["integer", "null"];
                                readonly examples: readonly [542563];
                            };
                            readonly cashier_id: {
                                readonly type: readonly ["string", "null"];
                                readonly examples: readonly ["OINM01010"];
                            };
                            readonly reference: {
                                readonly type: "string";
                                readonly examples: readonly ["93000262276908"];
                            };
                            readonly barcode_url: {
                                readonly type: "string";
                                readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                            };
                            readonly expires_at: {
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [0];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly service_name: {
                                readonly type: "string";
                                readonly examples: readonly ["OxxoPay"];
                            };
                            readonly store: {
                                readonly type: readonly ["string", "null"];
                                readonly examples: readonly ["10MON50EDI"];
                            };
                            readonly store_name: {
                                readonly type: "string";
                                readonly examples: readonly ["OXXO"];
                            };
                        };
                    }, {
                        readonly required: readonly ["object"];
                        readonly type: "object";
                        readonly description: "use for card responses";
                        readonly title: "charge_data_payment_method_card_response";
                        readonly properties: {
                            readonly type: {
                                readonly type: "string";
                            };
                            readonly object: {
                                readonly type: "string";
                                readonly examples: readonly ["payment_source"];
                            };
                            readonly account_type: {
                                readonly description: "Account type of the card";
                                readonly type: "string";
                                readonly examples: readonly ["Credit"];
                            };
                            readonly auth_code: {
                                readonly type: "string";
                                readonly examples: readonly ["867372"];
                            };
                            readonly brand: {
                                readonly description: "Brand of the card";
                                readonly type: "string";
                                readonly examples: readonly ["visa"];
                            };
                            readonly contract_id: {
                                readonly description: "Id sent for recurrent charges.";
                                readonly type: "string";
                                readonly examples: readonly ["S781317595"];
                            };
                            readonly country: {
                                readonly description: "Country of the card";
                                readonly type: "string";
                                readonly examples: readonly ["MX"];
                            };
                            readonly exp_month: {
                                readonly description: "Expiration month of the card";
                                readonly type: "string";
                                readonly examples: readonly ["02"];
                            };
                            readonly exp_year: {
                                readonly description: "Expiration year of the card";
                                readonly type: "string";
                                readonly examples: readonly ["2026"];
                            };
                            readonly fraud_indicators: {
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly issuer: {
                                readonly description: "Issuer of the card";
                                readonly type: "string";
                                readonly examples: readonly ["BANAMEX"];
                            };
                            readonly last4: {
                                readonly description: "Last 4 digits of the card";
                                readonly type: "string";
                                readonly examples: readonly ["4242"];
                            };
                            readonly name: {
                                readonly description: "Name of the cardholder";
                                readonly type: "string";
                                readonly examples: readonly ["Fulanito Perez"];
                            };
                        };
                    }, {
                        readonly required: readonly ["object"];
                        readonly type: "object";
                        readonly description: "use for bank transfer responses";
                        readonly title: "charge_data_payment_method_bank_transfer_response";
                        readonly properties: {
                            readonly type: {
                                readonly type: "string";
                            };
                            readonly object: {
                                readonly type: "string";
                                readonly examples: readonly ["payment_source"];
                            };
                            readonly bank: {
                                readonly type: "string";
                                readonly examples: readonly ["STP"];
                            };
                            readonly clabe: {
                                readonly type: "string";
                                readonly examples: readonly ["646180111805034237"];
                            };
                            readonly description: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly executed_at: {
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly expires_at: {
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1683053729];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly issuing_account_bank: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly issuing_account_number: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly issuing_account_holder_name: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly issuing_account_tax_id: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly payment_attempts: {
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly receiving_account_holder_name: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly receiving_account_number: {
                                readonly type: "string";
                                readonly examples: readonly ["646180111805034237"];
                            };
                            readonly receiving_account_bank: {
                                readonly type: "string";
                                readonly examples: readonly ["STP"];
                            };
                            readonly receiving_account_tax_id: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly reference_number: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly tracking_code: {
                                readonly type: readonly ["string", "null"];
                            };
                        };
                    }];
                    readonly title: "charge_order_response_payment_method";
                };
                readonly reference_id: {
                    readonly description: "Reference ID of the charge";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["ref_2tN73UdUSNrYRPD9r"];
                };
                readonly refunds: {
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly type: "array";
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["pending_payment"];
                };
            };
            readonly title: "charges_data_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "428": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrdersCreateDiscountLine: {
    readonly body: {
        readonly description: "List of discounts that apply to the order.";
        readonly properties: {
            readonly amount: {
                readonly description: "The amount to be deducted from the total sum of all payments, in cents.";
                readonly format: "int64";
                readonly minimum: 0;
                readonly type: "integer";
                readonly examples: readonly [500];
                readonly maximum: 9223372036854776000;
            };
            readonly code: {
                readonly description: "Discount code.";
                readonly type: "string";
                readonly examples: readonly ["123"];
            };
            readonly type: {
                readonly description: "It can be 'loyalty', 'campaign', 'coupon' o 'sign'";
                readonly type: "string";
                readonly examples: readonly ["loyalty"];
            };
        };
        readonly required: readonly ["amount", "code", "type"];
        readonly title: "order_discount_lines_request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "discount_lines_order_response";
            readonly description: "List of discounts that apply to the order.";
            readonly required: readonly ["amount", "code", "id", "object", "parent_id", "type"];
            readonly type: "object";
            readonly properties: {
                readonly amount: {
                    readonly description: "The amount to be deducted from the total sum of all payments, in cents.";
                    readonly format: "int64";
                    readonly minimum: 0;
                    readonly type: "integer";
                    readonly examples: readonly [500];
                    readonly maximum: 9223372036854776000;
                };
                readonly code: {
                    readonly description: "Discount code.";
                    readonly type: "string";
                    readonly examples: readonly ["123"];
                };
                readonly type: {
                    readonly description: "It can be 'loyalty', 'campaign', 'coupon' o 'sign'";
                    readonly type: "string";
                    readonly examples: readonly ["loyalty"];
                };
                readonly id: {
                    readonly description: "The discount line id";
                    readonly type: "string";
                    readonly examples: readonly ["dis_lin_2tQQ58HPgPw7StE8z"];
                };
                readonly object: {
                    readonly description: "The object name";
                    readonly type: "string";
                    readonly examples: readonly ["discount_line"];
                };
                readonly parent_id: {
                    readonly description: "The order id";
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tPAmKCEJqh8RE6nY"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrdersCreateProduct: {
    readonly body: {
        readonly properties: {
            readonly antifraud_info: {
                readonly additionalProperties: true;
                readonly type: "object";
            };
            readonly brand: {
                readonly description: "The brand of the item.";
                readonly type: "string";
                readonly examples: readonly ["Cohiba"];
            };
            readonly description: {
                readonly description: "Short description of the item";
                readonly maxLength: 250;
                readonly type: "string";
                readonly examples: readonly ["Imported From Mex."];
            };
            readonly metadata: {
                readonly additionalProperties: true;
                readonly description: "It is a key/value hash that can hold custom fields. Maximum 100 elements and allows special characters.";
                readonly maxProperties: 100;
                readonly type: "object";
            };
            readonly name: {
                readonly description: "The name of the item. It will be displayed in the order.";
                readonly type: "string";
                readonly examples: readonly ["Box of Cohiba S1s"];
            };
            readonly quantity: {
                readonly description: "The quantity of the item in the order.";
                readonly format: "int32";
                readonly minimum: 1;
                readonly type: "integer";
                readonly examples: readonly [1];
                readonly maximum: 2147483647;
            };
            readonly sku: {
                readonly description: "The stock keeping unit for the item. It is used to identify the item in the order.";
                readonly type: "string";
                readonly examples: readonly ["XYZ12345"];
            };
            readonly tags: {
                readonly description: "List of tags for the item. It is used to identify the item in the order.";
                readonly items: {
                    readonly type: "string";
                };
                readonly type: "array";
                readonly examples: readonly ["food", "mexican food"];
            };
            readonly unit_price: {
                readonly description: "The price of the item in cents.";
                readonly format: "int32";
                readonly minimum: 0;
                readonly type: "integer";
                readonly examples: readonly [20000];
                readonly maximum: 2147483647;
            };
        };
        readonly required: readonly ["name", "quantity", "unit_price"];
        readonly title: "product";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "product order response";
            readonly required: readonly ["name", "quantity", "unit_price"];
            readonly type: "object";
            readonly properties: {
                readonly antifraud_info: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly brand: {
                    readonly description: "The brand of the item.";
                    readonly type: "string";
                    readonly examples: readonly ["Cohiba"];
                };
                readonly description: {
                    readonly description: "Short description of the item";
                    readonly maxLength: 250;
                    readonly type: "string";
                    readonly examples: readonly ["Imported From Mex."];
                };
                readonly metadata: {
                    readonly description: "It is a key/value hash that can hold custom fields. Maximum 100 elements and allows special characters.";
                    readonly maxProperties: 100;
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly name: {
                    readonly description: "The name of the item. It will be displayed in the order.";
                    readonly type: "string";
                    readonly examples: readonly ["Box of Cohiba S1s"];
                };
                readonly quantity: {
                    readonly description: "The quantity of the item in the order.";
                    readonly format: "int32";
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [1];
                    readonly maximum: 2147483647;
                };
                readonly sku: {
                    readonly description: "The stock keeping unit for the item. It is used to identify the item in the order.";
                    readonly type: "string";
                    readonly examples: readonly ["XYZ12345"];
                };
                readonly tags: {
                    readonly description: "List of tags for the item. It is used to identify the item in the order.";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly examples: readonly ["food", "mexican food"];
                };
                readonly unit_price: {
                    readonly description: "The price of the item in cents.";
                    readonly format: "int32";
                    readonly minimum: 0;
                    readonly type: "integer";
                    readonly examples: readonly [20000];
                    readonly maximum: 2147483647;
                };
                readonly id: {
                    readonly type: "string";
                };
                readonly object: {
                    readonly type: "string";
                };
                readonly parent_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrdersCreateShipping: {
    readonly body: {
        readonly properties: {
            readonly amount: {
                readonly description: "Shipping amount in cents";
                readonly format: "int64";
                readonly minimum: 0;
                readonly type: "integer";
                readonly examples: readonly [100];
                readonly maximum: 9223372036854776000;
            };
            readonly carrier: {
                readonly description: "Carrier name for the shipment";
                readonly type: "string";
                readonly examples: readonly ["FEDEX"];
            };
            readonly tracking_number: {
                readonly description: "Tracking number can be used to track the shipment";
                readonly type: "string";
                readonly examples: readonly ["TRACK123"];
            };
            readonly method: {
                readonly description: "Method of shipment";
                readonly type: "string";
                readonly examples: readonly ["Same day"];
            };
            readonly metadata: {
                readonly additionalProperties: true;
                readonly description: "Hash where the user can send additional information for each 'shipping'.";
                readonly maxProperties: 100;
                readonly type: "object";
            };
        };
        readonly required: readonly ["amount"];
        readonly title: "shipping_request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "shipping_order_response";
            readonly required: readonly ["amount"];
            readonly type: "object";
            readonly properties: {
                readonly amount: {
                    readonly description: "Shipping amount in cents";
                    readonly format: "int64";
                    readonly minimum: 0;
                    readonly type: "integer";
                    readonly examples: readonly [100];
                    readonly maximum: 9223372036854776000;
                };
                readonly carrier: {
                    readonly description: "Carrier name for the shipment";
                    readonly type: "string";
                    readonly examples: readonly ["FEDEX"];
                };
                readonly tracking_number: {
                    readonly description: "Tracking number can be used to track the shipment";
                    readonly type: "string";
                    readonly examples: readonly ["TRACK123"];
                };
                readonly method: {
                    readonly description: "Method of shipment";
                    readonly type: "string";
                    readonly examples: readonly ["Same day"];
                };
                readonly metadata: {
                    readonly description: "Hash where the user can send additional information for each 'shipping'.";
                    readonly maxProperties: 100;
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly id: {
                    readonly type: "string";
                };
                readonly object: {
                    readonly type: "string";
                };
                readonly parent_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrdersCreateTaxes: {
    readonly body: {
        readonly description: "create new taxes for an existing order";
        readonly properties: {
            readonly amount: {
                readonly description: "The amount to be collected for tax in cents";
                readonly format: "int64";
                readonly minimum: 0;
                readonly type: "integer";
                readonly examples: readonly [100];
                readonly maximum: 9223372036854776000;
            };
            readonly description: {
                readonly description: "description or tax's name";
                readonly minLength: 2;
                readonly type: "string";
                readonly examples: readonly ["testing"];
            };
            readonly metadata: {
                readonly additionalProperties: true;
                readonly maxProperties: 100;
                readonly type: "object";
            };
        };
        readonly required: readonly ["amount", "description"];
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "create new taxes for an existing order";
            readonly required: readonly ["amount", "description", "id"];
            readonly type: "object";
            readonly properties: {
                readonly amount: {
                    readonly description: "The amount to be collected for tax in cents";
                    readonly format: "int64";
                    readonly minimum: 0;
                    readonly type: "integer";
                    readonly examples: readonly [100];
                    readonly maximum: 9223372036854776000;
                };
                readonly description: {
                    readonly description: "description or tax's name";
                    readonly minLength: 2;
                    readonly type: "string";
                    readonly examples: readonly ["testing"];
                };
                readonly metadata: {
                    readonly maxProperties: 100;
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["tax_lin_2tQ8dC5mg1UADmVPo"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["tax_line"];
                };
                readonly parent_id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tPAmKCEJqh8RE6nY"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrdersDeleteDiscountLines: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
                readonly discount_lines_id: {
                    readonly type: "string";
                    readonly examples: readonly ["dis_lin_2tQ974hSHcsdeSZHG"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "discount line id identifier";
                };
            };
            readonly required: readonly ["id", "discount_lines_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "discount_lines_order_response";
            readonly description: "List of discounts that apply to the order.";
            readonly required: readonly ["amount", "code", "id", "object", "parent_id", "type"];
            readonly type: "object";
            readonly properties: {
                readonly amount: {
                    readonly description: "The amount to be deducted from the total sum of all payments, in cents.";
                    readonly format: "int64";
                    readonly minimum: 0;
                    readonly type: "integer";
                    readonly examples: readonly [500];
                    readonly maximum: 9223372036854776000;
                };
                readonly code: {
                    readonly description: "Discount code.";
                    readonly type: "string";
                    readonly examples: readonly ["123"];
                };
                readonly type: {
                    readonly description: "It can be 'loyalty', 'campaign', 'coupon' o 'sign'";
                    readonly type: "string";
                    readonly examples: readonly ["loyalty"];
                };
                readonly id: {
                    readonly description: "The discount line id";
                    readonly type: "string";
                    readonly examples: readonly ["dis_lin_2tQQ58HPgPw7StE8z"];
                };
                readonly object: {
                    readonly description: "The object name";
                    readonly type: "string";
                    readonly examples: readonly ["discount_line"];
                };
                readonly parent_id: {
                    readonly description: "The order id";
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tPAmKCEJqh8RE6nY"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrdersDeleteProduct: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
                readonly line_item_id: {
                    readonly type: "string";
                    readonly examples: readonly ["line_item_2tQ8HkkfbauaKP9Ho"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "identifier";
                };
            };
            readonly required: readonly ["id", "line_item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "product order response";
            readonly required: readonly ["name", "quantity", "unit_price"];
            readonly type: "object";
            readonly properties: {
                readonly antifraud_info: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly brand: {
                    readonly description: "The brand of the item.";
                    readonly type: "string";
                    readonly examples: readonly ["Cohiba"];
                };
                readonly description: {
                    readonly description: "Short description of the item";
                    readonly maxLength: 250;
                    readonly type: "string";
                    readonly examples: readonly ["Imported From Mex."];
                };
                readonly metadata: {
                    readonly description: "It is a key/value hash that can hold custom fields. Maximum 100 elements and allows special characters.";
                    readonly maxProperties: 100;
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly name: {
                    readonly description: "The name of the item. It will be displayed in the order.";
                    readonly type: "string";
                    readonly examples: readonly ["Box of Cohiba S1s"];
                };
                readonly quantity: {
                    readonly description: "The quantity of the item in the order.";
                    readonly format: "int32";
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [1];
                    readonly maximum: 2147483647;
                };
                readonly sku: {
                    readonly description: "The stock keeping unit for the item. It is used to identify the item in the order.";
                    readonly type: "string";
                    readonly examples: readonly ["XYZ12345"];
                };
                readonly tags: {
                    readonly description: "List of tags for the item. It is used to identify the item in the order.";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly examples: readonly ["food", "mexican food"];
                };
                readonly unit_price: {
                    readonly description: "The price of the item in cents.";
                    readonly format: "int32";
                    readonly minimum: 0;
                    readonly type: "integer";
                    readonly examples: readonly [20000];
                    readonly maximum: 2147483647;
                };
                readonly id: {
                    readonly type: "string";
                };
                readonly object: {
                    readonly type: "string";
                };
                readonly parent_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrdersDeleteShipping: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
                readonly shipping_id: {
                    readonly type: "string";
                    readonly examples: readonly ["ship_lin_2tQ974hSHcsdeSZHG"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "identifier";
                };
            };
            readonly required: readonly ["id", "shipping_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "shipping_order_response";
            readonly required: readonly ["amount"];
            readonly type: "object";
            readonly properties: {
                readonly amount: {
                    readonly description: "Shipping amount in cents";
                    readonly format: "int64";
                    readonly minimum: 0;
                    readonly type: "integer";
                    readonly examples: readonly [100];
                    readonly maximum: 9223372036854776000;
                };
                readonly carrier: {
                    readonly description: "Carrier name for the shipment";
                    readonly type: "string";
                    readonly examples: readonly ["FEDEX"];
                };
                readonly tracking_number: {
                    readonly description: "Tracking number can be used to track the shipment";
                    readonly type: "string";
                    readonly examples: readonly ["TRACK123"];
                };
                readonly method: {
                    readonly description: "Method of shipment";
                    readonly type: "string";
                    readonly examples: readonly ["Same day"];
                };
                readonly metadata: {
                    readonly description: "Hash where the user can send additional information for each 'shipping'.";
                    readonly maxProperties: 100;
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly id: {
                    readonly type: "string";
                };
                readonly object: {
                    readonly type: "string";
                };
                readonly parent_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "428": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrdersDeleteTaxes: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
                readonly tax_id: {
                    readonly type: "string";
                    readonly examples: readonly ["tax_lin_2tQ974hSHcsdeSZHG"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "identifier";
                };
            };
            readonly required: readonly ["id", "tax_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "create new taxes for an existing order";
            readonly required: readonly ["amount", "description", "id"];
            readonly type: "object";
            readonly properties: {
                readonly amount: {
                    readonly description: "The amount to be collected for tax in cents";
                    readonly format: "int64";
                    readonly minimum: 0;
                    readonly type: "integer";
                    readonly examples: readonly [100];
                    readonly maximum: 9223372036854776000;
                };
                readonly description: {
                    readonly description: "description or tax's name";
                    readonly minLength: 2;
                    readonly type: "string";
                    readonly examples: readonly ["testing"];
                };
                readonly metadata: {
                    readonly maxProperties: 100;
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["tax_lin_2tQ8dC5mg1UADmVPo"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["tax_line"];
                };
                readonly parent_id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tPAmKCEJqh8RE6nY"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrdersGetDiscountLine: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
                readonly discount_lines_id: {
                    readonly type: "string";
                    readonly examples: readonly ["dis_lin_2tQ974hSHcsdeSZHG"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "discount line id identifier";
                };
            };
            readonly required: readonly ["id", "discount_lines_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "discount_lines_order_response";
            readonly description: "List of discounts that apply to the order.";
            readonly required: readonly ["amount", "code", "id", "object", "parent_id", "type"];
            readonly type: "object";
            readonly properties: {
                readonly amount: {
                    readonly description: "The amount to be deducted from the total sum of all payments, in cents.";
                    readonly format: "int64";
                    readonly minimum: 0;
                    readonly type: "integer";
                    readonly examples: readonly [500];
                    readonly maximum: 9223372036854776000;
                };
                readonly code: {
                    readonly description: "Discount code.";
                    readonly type: "string";
                    readonly examples: readonly ["123"];
                };
                readonly type: {
                    readonly description: "It can be 'loyalty', 'campaign', 'coupon' o 'sign'";
                    readonly type: "string";
                    readonly examples: readonly ["loyalty"];
                };
                readonly id: {
                    readonly description: "The discount line id";
                    readonly type: "string";
                    readonly examples: readonly ["dis_lin_2tQQ58HPgPw7StE8z"];
                };
                readonly object: {
                    readonly description: "The object name";
                    readonly type: "string";
                    readonly examples: readonly ["discount_line"];
                };
                readonly parent_id: {
                    readonly description: "The order id";
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tPAmKCEJqh8RE6nY"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrdersGetDiscountLines: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly limit: {
                    readonly default: 20;
                    readonly format: "int32";
                    readonly maximum: 250;
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "The numbers of items to return, the maximum value is 250";
                };
                readonly search: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "General order search, e.g. by mail, reference etc.";
                };
                readonly next: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "next page";
                };
                readonly previous: {
                    readonly type: "string";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "previous page";
                };
            };
            readonly required: readonly [];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "get_order_discount_lines_response";
            readonly description: "page metadata";
            readonly required: readonly ["has_more", "object"];
            readonly type: "object";
            readonly properties: {
                readonly has_more: {
                    readonly description: "Indicates if there are more pages to be requested";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object type, in this case is list";
                    readonly type: "string";
                    readonly examples: readonly ["list"];
                };
                readonly next_page_url: {
                    readonly description: "URL of the next page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                };
                readonly previous_page_url: {
                    readonly description: "Url of the previous page.";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                };
                readonly data: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "discount_lines_order_response";
                        readonly description: "List of discounts that apply to the order.";
                        readonly required: readonly ["amount", "code", "id", "object", "parent_id", "type"];
                        readonly type: "object";
                        readonly properties: {
                            readonly amount: {
                                readonly description: "The amount to be deducted from the total sum of all payments, in cents.";
                                readonly format: "int64";
                                readonly minimum: 0;
                                readonly type: "integer";
                                readonly examples: readonly [500];
                                readonly maximum: 9223372036854776000;
                            };
                            readonly code: {
                                readonly description: "Discount code.";
                                readonly type: "string";
                                readonly examples: readonly ["123"];
                            };
                            readonly type: {
                                readonly description: "It can be 'loyalty', 'campaign', 'coupon' o 'sign'";
                                readonly type: "string";
                                readonly examples: readonly ["loyalty"];
                            };
                            readonly id: {
                                readonly description: "The discount line id";
                                readonly type: "string";
                                readonly examples: readonly ["dis_lin_2tQQ58HPgPw7StE8z"];
                            };
                            readonly object: {
                                readonly description: "The object name";
                                readonly type: "string";
                                readonly examples: readonly ["discount_line"];
                            };
                            readonly parent_id: {
                                readonly description: "The order id";
                                readonly type: "string";
                                readonly examples: readonly ["ord_2tPAmKCEJqh8RE6nY"];
                            };
                        };
                    };
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrdersUpdateDiscountLines: {
    readonly body: {
        readonly description: "List of discounts that apply to the order.";
        readonly properties: {
            readonly amount: {
                readonly format: "int64";
                readonly minimum: 0;
                readonly type: "integer";
                readonly examples: readonly [500];
                readonly maximum: 9223372036854776000;
            };
            readonly code: {
                readonly description: "Discount code.";
                readonly type: "string";
                readonly examples: readonly ["123"];
            };
            readonly type: {
                readonly type: "string";
                readonly examples: readonly ["loyalty"];
            };
        };
        readonly title: "update_order_discount_lines_request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
                readonly discount_lines_id: {
                    readonly type: "string";
                    readonly examples: readonly ["dis_lin_2tQ974hSHcsdeSZHG"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "discount line id identifier";
                };
            };
            readonly required: readonly ["id", "discount_lines_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "discount_lines_order_response";
            readonly description: "List of discounts that apply to the order.";
            readonly required: readonly ["amount", "code", "id", "object", "parent_id", "type"];
            readonly type: "object";
            readonly properties: {
                readonly amount: {
                    readonly description: "The amount to be deducted from the total sum of all payments, in cents.";
                    readonly format: "int64";
                    readonly minimum: 0;
                    readonly type: "integer";
                    readonly examples: readonly [500];
                    readonly maximum: 9223372036854776000;
                };
                readonly code: {
                    readonly description: "Discount code.";
                    readonly type: "string";
                    readonly examples: readonly ["123"];
                };
                readonly type: {
                    readonly description: "It can be 'loyalty', 'campaign', 'coupon' o 'sign'";
                    readonly type: "string";
                    readonly examples: readonly ["loyalty"];
                };
                readonly id: {
                    readonly description: "The discount line id";
                    readonly type: "string";
                    readonly examples: readonly ["dis_lin_2tQQ58HPgPw7StE8z"];
                };
                readonly object: {
                    readonly description: "The object name";
                    readonly type: "string";
                    readonly examples: readonly ["discount_line"];
                };
                readonly parent_id: {
                    readonly description: "The order id";
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tPAmKCEJqh8RE6nY"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrdersUpdateProduct: {
    readonly body: {
        readonly properties: {
            readonly antifraud_info: {
                readonly additionalProperties: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly type: "object";
            };
            readonly description: {
                readonly maxLength: 250;
                readonly type: "string";
            };
            readonly sku: {
                readonly type: "string";
            };
            readonly name: {
                readonly type: "string";
                readonly examples: readonly ["Box of Cohiba S1s"];
            };
            readonly unit_price: {
                readonly format: "int64";
                readonly minimum: 0;
                readonly type: "integer";
                readonly examples: readonly [20000];
                readonly maximum: 9223372036854776000;
            };
            readonly quantity: {
                readonly format: "int32";
                readonly minimum: 1;
                readonly type: "integer";
                readonly examples: readonly [1];
                readonly maximum: 2147483647;
            };
            readonly tags: {
                readonly items: {
                    readonly type: "string";
                };
                readonly type: "array";
            };
            readonly brand: {
                readonly type: "string";
            };
            readonly metadata: {
                readonly additionalProperties: {
                    readonly type: "string";
                };
                readonly type: "object";
            };
        };
        readonly title: "update_product";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
                readonly line_item_id: {
                    readonly type: "string";
                    readonly examples: readonly ["line_item_2tQ8HkkfbauaKP9Ho"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "identifier";
                };
            };
            readonly required: readonly ["id", "line_item_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "product order response";
            readonly required: readonly ["name", "quantity", "unit_price"];
            readonly type: "object";
            readonly properties: {
                readonly antifraud_info: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly brand: {
                    readonly description: "The brand of the item.";
                    readonly type: "string";
                    readonly examples: readonly ["Cohiba"];
                };
                readonly description: {
                    readonly description: "Short description of the item";
                    readonly maxLength: 250;
                    readonly type: "string";
                    readonly examples: readonly ["Imported From Mex."];
                };
                readonly metadata: {
                    readonly description: "It is a key/value hash that can hold custom fields. Maximum 100 elements and allows special characters.";
                    readonly maxProperties: 100;
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly name: {
                    readonly description: "The name of the item. It will be displayed in the order.";
                    readonly type: "string";
                    readonly examples: readonly ["Box of Cohiba S1s"];
                };
                readonly quantity: {
                    readonly description: "The quantity of the item in the order.";
                    readonly format: "int32";
                    readonly minimum: 1;
                    readonly type: "integer";
                    readonly examples: readonly [1];
                    readonly maximum: 2147483647;
                };
                readonly sku: {
                    readonly description: "The stock keeping unit for the item. It is used to identify the item in the order.";
                    readonly type: "string";
                    readonly examples: readonly ["XYZ12345"];
                };
                readonly tags: {
                    readonly description: "List of tags for the item. It is used to identify the item in the order.";
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly examples: readonly ["food", "mexican food"];
                };
                readonly unit_price: {
                    readonly description: "The price of the item in cents.";
                    readonly format: "int32";
                    readonly minimum: 0;
                    readonly type: "integer";
                    readonly examples: readonly [20000];
                    readonly maximum: 2147483647;
                };
                readonly id: {
                    readonly type: "string";
                };
                readonly object: {
                    readonly type: "string";
                };
                readonly parent_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrdersUpdateShipping: {
    readonly body: {
        readonly properties: {
            readonly amount: {
                readonly description: "Shipping amount in cents";
                readonly format: "int64";
                readonly minimum: 0;
                readonly type: "integer";
                readonly examples: readonly [100];
                readonly maximum: 9223372036854776000;
            };
            readonly carrier: {
                readonly description: "Carrier name for the shipment";
                readonly type: "string";
                readonly examples: readonly ["FEDEX"];
            };
            readonly tracking_number: {
                readonly description: "Tracking number can be used to track the shipment";
                readonly type: "string";
                readonly examples: readonly ["TRACK123"];
            };
            readonly method: {
                readonly description: "Method of shipment";
                readonly type: "string";
                readonly examples: readonly ["Same day"];
            };
            readonly metadata: {
                readonly additionalProperties: true;
                readonly description: "Hash where the user can send additional information for each 'shipping'.";
                readonly maxProperties: 100;
                readonly type: "object";
            };
        };
        readonly required: readonly ["amount"];
        readonly title: "shipping_request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
                readonly shipping_id: {
                    readonly type: "string";
                    readonly examples: readonly ["ship_lin_2tQ974hSHcsdeSZHG"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "identifier";
                };
            };
            readonly required: readonly ["id", "shipping_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "shipping_order_response";
            readonly required: readonly ["amount"];
            readonly type: "object";
            readonly properties: {
                readonly amount: {
                    readonly description: "Shipping amount in cents";
                    readonly format: "int64";
                    readonly minimum: 0;
                    readonly type: "integer";
                    readonly examples: readonly [100];
                    readonly maximum: 9223372036854776000;
                };
                readonly carrier: {
                    readonly description: "Carrier name for the shipment";
                    readonly type: "string";
                    readonly examples: readonly ["FEDEX"];
                };
                readonly tracking_number: {
                    readonly description: "Tracking number can be used to track the shipment";
                    readonly type: "string";
                    readonly examples: readonly ["TRACK123"];
                };
                readonly method: {
                    readonly description: "Method of shipment";
                    readonly type: "string";
                    readonly examples: readonly ["Same day"];
                };
                readonly metadata: {
                    readonly description: "Hash where the user can send additional information for each 'shipping'.";
                    readonly maxProperties: 100;
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly id: {
                    readonly type: "string";
                };
                readonly object: {
                    readonly type: "string";
                };
                readonly parent_id: {
                    readonly type: "string";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const OrdersUpdateTaxes: {
    readonly body: {
        readonly description: "create new taxes for an existing order";
        readonly properties: {
            readonly amount: {
                readonly description: "The amount to be collected for tax in cents";
                readonly format: "int64";
                readonly minimum: 0;
                readonly type: "integer";
                readonly examples: readonly [100];
                readonly maximum: 9223372036854776000;
            };
            readonly description: {
                readonly description: "description or tax's name";
                readonly minLength: 2;
                readonly type: "string";
                readonly examples: readonly ["testing"];
            };
            readonly metadata: {
                readonly additionalProperties: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly maxProperties: 100;
                readonly type: "object";
            };
        };
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
                readonly tax_id: {
                    readonly type: "string";
                    readonly examples: readonly ["tax_lin_2tQ974hSHcsdeSZHG"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "identifier";
                };
            };
            readonly required: readonly ["id", "tax_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "create new taxes for an existing order";
            readonly required: readonly ["amount", "description", "id"];
            readonly type: "object";
            readonly properties: {
                readonly amount: {
                    readonly description: "The amount to be collected for tax in cents";
                    readonly format: "int64";
                    readonly minimum: 0;
                    readonly type: "integer";
                    readonly examples: readonly [100];
                    readonly maximum: 9223372036854776000;
                };
                readonly description: {
                    readonly description: "description or tax's name";
                    readonly minLength: 2;
                    readonly type: "string";
                    readonly examples: readonly ["testing"];
                };
                readonly metadata: {
                    readonly maxProperties: 100;
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["tax_lin_2tQ8dC5mg1UADmVPo"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["tax_line"];
                };
                readonly parent_id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tPAmKCEJqh8RE6nY"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const PauseSubscription: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "subscription model";
            readonly properties: {
                readonly billing_cycle_start: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626827];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly billing_cycle_end: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626827];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly canceled_at: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1678258162];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly canceled_reason: {
                    readonly description: "Reason for cancellation. This field appears when the subscription status is 'canceled'.";
                    readonly type: "string";
                    readonly examples: readonly ["user_cancelation"];
                };
                readonly card_id: {
                    readonly type: "string";
                    readonly examples: readonly ["src_2tKcHxhTz7xU5SymL"];
                };
                readonly charge_id: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["2tKcHxhTz7xU5SymL"];
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly customer_custom_reference: {
                    readonly type: "string";
                    readonly examples: readonly ["dotnet_123456"];
                };
                readonly customer_id: {
                    readonly type: "string";
                    readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["gold-plan"];
                };
                readonly last_billing_cycle_order_id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tSoMP7bZJbLiq4z8"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["subscription"];
                };
                readonly paused_at: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1678258162];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly plan_id: {
                    readonly type: "string";
                    readonly examples: readonly ["plan_2tXx672QLQ68CkmMn"];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["past_due"];
                };
                readonly subscription_start: {
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                };
                readonly trial_start: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly trial_end: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
            readonly title: "subscription_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "402": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ResendEvent: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly event_id: {
                    readonly type: "string";
                    readonly examples: readonly ["6463d6e35a4c3e001819e760"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "event identifier";
                };
                readonly webhook_log_id: {
                    readonly type: "string";
                    readonly examples: readonly ["webhl_2tsv6NzWJHBWCkqGt"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "webhook log identifier";
                };
            };
            readonly required: readonly ["event_id", "webhook_log_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "event model";
            readonly properties: {
                readonly failed_attempts: {
                    readonly type: "integer";
                    readonly examples: readonly [6];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["webhl_2svd2sh6GbqzyWBNZ"];
                };
                readonly last_attempted_at: {
                    readonly type: "integer";
                    readonly examples: readonly [1684265970];
                };
                readonly last_http_response_status: {
                    readonly format: "int32";
                    readonly type: "integer";
                    readonly examples: readonly [405];
                    readonly minimum: -2147483648;
                    readonly maximum: 2147483647;
                };
                readonly response_data: {
                    readonly additionalProperties: true;
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly url: {
                    readonly format: "uri";
                    readonly type: "string";
                    readonly examples: readonly ["https://username:password@mockoon.stg.conekta.io/payments-api/cash/merchant_approval"];
                };
            };
            readonly title: "event_webhook_resend_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const ResumeSubscription: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "subscription model";
            readonly properties: {
                readonly billing_cycle_start: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626827];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly billing_cycle_end: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626827];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly canceled_at: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1678258162];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly canceled_reason: {
                    readonly description: "Reason for cancellation. This field appears when the subscription status is 'canceled'.";
                    readonly type: "string";
                    readonly examples: readonly ["user_cancelation"];
                };
                readonly card_id: {
                    readonly type: "string";
                    readonly examples: readonly ["src_2tKcHxhTz7xU5SymL"];
                };
                readonly charge_id: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["2tKcHxhTz7xU5SymL"];
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly customer_custom_reference: {
                    readonly type: "string";
                    readonly examples: readonly ["dotnet_123456"];
                };
                readonly customer_id: {
                    readonly type: "string";
                    readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["gold-plan"];
                };
                readonly last_billing_cycle_order_id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tSoMP7bZJbLiq4z8"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["subscription"];
                };
                readonly paused_at: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1678258162];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly plan_id: {
                    readonly type: "string";
                    readonly examples: readonly ["plan_2tXx672QLQ68CkmMn"];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["past_due"];
                };
                readonly subscription_start: {
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                };
                readonly trial_start: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly trial_end: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
            readonly title: "subscription_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "402": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const SmsCheckout: {
    readonly body: {
        readonly properties: {
            readonly phonenumber: {
                readonly type: "string";
                readonly examples: readonly ["5566982090"];
            };
        };
        readonly required: readonly ["phonenumber"];
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "checkout response";
            readonly properties: {
                readonly allowed_payment_methods: {
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly examples: readonly ["cash", "card", "bank_transfer"];
                };
                readonly can_not_expire: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly emails_sent: {
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly exclude_card_networks: {
                    readonly items: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly type: "array";
                };
                readonly expires_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1680397724];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly failure_url: {
                    readonly type: "string";
                    readonly examples: readonly ["https://pay.conekta.com/failure"];
                };
                readonly force_3ds_flow: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["b0bf16c4-18b9-445e-ba24-01604f329dbf"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly type: "object";
                };
                readonly monthly_installments_enabled: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly monthly_installments_options: {
                    readonly items: {
                        readonly format: "int8";
                        readonly type: "integer";
                        readonly minimum: -128;
                        readonly maximum: 127;
                    };
                    readonly type: "array";
                    readonly examples: readonly [3, 6, 12];
                };
                readonly name: {
                    readonly description: "Reason for charge";
                    readonly type: "string";
                    readonly examples: readonly ["Payment Link Name 1594138857"];
                };
                readonly needs_shipping_contact: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["checkout"];
                };
                readonly paid_payments_count: {
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly payments_limit_count: {
                    readonly format: "int8";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [5];
                    readonly minimum: -128;
                    readonly maximum: 127;
                };
                readonly recurrent: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly slug: {
                    readonly type: "string";
                    readonly examples: readonly ["b0bf16c418b9445eba2401604f329dbf"];
                };
                readonly sms_sent: {
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly starts_at: {
                    readonly type: "integer";
                    readonly examples: readonly [1677650400];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["Issued"];
                };
                readonly success_url: {
                    readonly type: "string";
                    readonly examples: readonly ["https://pay.conekta.com/success"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["PaymentLink"];
                };
                readonly url: {
                    readonly format: "uri";
                    readonly type: "string";
                    readonly examples: readonly ["https://pay.conekta.com/link/b0bf16c418b9445eba2401604f329dbf"];
                };
            };
            readonly required: readonly ["id", "livemode", "name", "object"];
            readonly title: "checkout_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "402": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const TestWebhook: {
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "webhooks model";
            readonly properties: {
                readonly deleted: {
                    readonly type: readonly ["boolean", "null"];
                    readonly examples: readonly [false];
                };
                readonly development_enabled: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["event"];
                };
                readonly production_enabled: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["listening"];
                };
                readonly subscribed_events: {
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly examples: readonly ["charge.created", "charge.paid", "charge.under_fraud_review", "charge.fraudulent", "charge.refunded", "charge.preauthorized", "charge.declined", "charge.canceled", "charge.reversed", "charge.pending_confirmation"];
                };
                readonly synchronous: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly url: {
                    readonly type: "string";
                    readonly examples: readonly ["https://username:password@mockoon.stg.conekta.io/payments-api/cash/merchant_approval"];
                };
            };
            readonly title: "webhook_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const UpdateApiKey: {
    readonly body: {
        readonly properties: {
            readonly active: {
                readonly description: "Indicates if the webhook key is active";
                readonly type: "boolean";
                readonly examples: readonly [true];
            };
            readonly description: {
                readonly description: "A name or brief explanation of what this api key is used for";
                readonly type: "string";
                readonly examples: readonly ["online store"];
            };
        };
        readonly title: "api_key_update_request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "api keys model";
            readonly properties: {
                readonly active: {
                    readonly description: "Indicates if the api key is active";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly created_at: {
                    readonly description: "Unix timestamp in seconds of when the api key was created";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1684167881];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly updated_at: {
                    readonly description: "Unix timestamp in seconds of when the api key was last updated";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1684167923];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly deactivated_at: {
                    readonly description: "Unix timestamp in seconds of when the api key was deleted";
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly description: {
                    readonly description: "A name or brief explanation of what this api key is used for";
                    readonly type: "string";
                    readonly examples: readonly ["online store"];
                };
                readonly id: {
                    readonly description: "Unique identifier of the api key";
                    readonly type: "string";
                    readonly examples: readonly ["64625cc9f3e02c00163f5e4d"];
                };
                readonly livemode: {
                    readonly description: "Indicates if the api key is in production";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly deleted: {
                    readonly description: "Indicates if the api key was deleted";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object name, value is 'api_key'";
                    readonly type: "string";
                    readonly examples: readonly ["api_key"];
                };
                readonly prefix: {
                    readonly description: "The first few characters of the authentication_token";
                    readonly type: "string";
                    readonly examples: readonly ["key_rp"];
                };
                readonly role: {
                    readonly description: "Indicates if the api key is private or public";
                    readonly type: "string";
                    readonly examples: readonly ["private"];
                };
            };
            readonly title: "api_key_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const UpdateCharge: {
    readonly body: {
        readonly description: "requested field for update a charge";
        readonly properties: {
            readonly reference_id: {
                readonly description: "custom reference id";
                readonly type: "string";
                readonly examples: readonly ["278482642"];
            };
        };
        readonly title: "charge_update_request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly properties: {
                readonly amount: {
                    readonly type: "integer";
                    readonly examples: readonly [4321];
                };
                readonly channel: {
                    readonly properties: {
                        readonly segment: {
                            readonly type: "string";
                            readonly examples: readonly ["Checkout"];
                        };
                        readonly checkout_request_id: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                        };
                        readonly checkout_request_type: {
                            readonly type: "string";
                            readonly examples: readonly ["HostedPayment"];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                        };
                    };
                    readonly type: "object";
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1676386026];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly customer_id: {
                    readonly type: "string";
                };
                readonly description: {
                    readonly type: "string";
                    readonly examples: readonly ["Payment from order"];
                };
                readonly device_fingerprint: {
                    readonly type: "string";
                    readonly examples: readonly ["6FR3chaU4Y1nGAW5NAGd1rcjAKa142Ba"];
                };
                readonly failure_code: {
                    readonly type: "string";
                    readonly examples: readonly ["suspected_fraud"];
                };
                readonly failure_message: {
                    readonly type: "string";
                    readonly examples: readonly ["Este cargo ha sido declinado porque el comportamiento del comprador es sospechoso."];
                };
                readonly id: {
                    readonly description: "Charge ID";
                    readonly type: "string";
                    readonly examples: readonly ["63efa757cf65380001aec040"];
                };
                readonly livemode: {
                    readonly description: "Whether the charge was made in live mode or not";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["charge"];
                };
                readonly order_id: {
                    readonly description: "Order ID";
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tN73UdUSNrYRPD9r"];
                };
                readonly paid_at: {
                    readonly description: "Payment date";
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1676390742];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly payment_method: {
                    readonly discriminator: {
                        readonly mapping: {
                            readonly cash_payment: "payment_method_cash";
                            readonly card_payment: "payment_method_card";
                            readonly bank_transfer_payment: "payment_method_bank_transfer";
                        };
                        readonly propertyName: "object";
                    };
                    readonly oneOf: readonly [{
                        readonly required: readonly ["object"];
                        readonly type: "object";
                        readonly description: "use for cash responses";
                        readonly title: "charge_data_payment_method_cash_response";
                        readonly properties: {
                            readonly type: {
                                readonly type: "string";
                            };
                            readonly object: {
                                readonly type: "string";
                                readonly examples: readonly ["payment_source"];
                            };
                            readonly auth_code: {
                                readonly type: readonly ["integer", "null"];
                                readonly examples: readonly [542563];
                            };
                            readonly cashier_id: {
                                readonly type: readonly ["string", "null"];
                                readonly examples: readonly ["OINM01010"];
                            };
                            readonly reference: {
                                readonly type: "string";
                                readonly examples: readonly ["93000262276908"];
                            };
                            readonly barcode_url: {
                                readonly type: "string";
                                readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                            };
                            readonly expires_at: {
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [0];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly service_name: {
                                readonly type: "string";
                                readonly examples: readonly ["OxxoPay"];
                            };
                            readonly store: {
                                readonly type: readonly ["string", "null"];
                                readonly examples: readonly ["10MON50EDI"];
                            };
                            readonly store_name: {
                                readonly type: "string";
                                readonly examples: readonly ["OXXO"];
                            };
                        };
                    }, {
                        readonly required: readonly ["object"];
                        readonly type: "object";
                        readonly description: "use for card responses";
                        readonly title: "charge_data_payment_method_card_response";
                        readonly properties: {
                            readonly type: {
                                readonly type: "string";
                            };
                            readonly object: {
                                readonly type: "string";
                                readonly examples: readonly ["payment_source"];
                            };
                            readonly account_type: {
                                readonly description: "Account type of the card";
                                readonly type: "string";
                                readonly examples: readonly ["Credit"];
                            };
                            readonly auth_code: {
                                readonly type: "string";
                                readonly examples: readonly ["867372"];
                            };
                            readonly brand: {
                                readonly description: "Brand of the card";
                                readonly type: "string";
                                readonly examples: readonly ["visa"];
                            };
                            readonly contract_id: {
                                readonly description: "Id sent for recurrent charges.";
                                readonly type: "string";
                                readonly examples: readonly ["S781317595"];
                            };
                            readonly country: {
                                readonly description: "Country of the card";
                                readonly type: "string";
                                readonly examples: readonly ["MX"];
                            };
                            readonly exp_month: {
                                readonly description: "Expiration month of the card";
                                readonly type: "string";
                                readonly examples: readonly ["02"];
                            };
                            readonly exp_year: {
                                readonly description: "Expiration year of the card";
                                readonly type: "string";
                                readonly examples: readonly ["2026"];
                            };
                            readonly fraud_indicators: {
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly issuer: {
                                readonly description: "Issuer of the card";
                                readonly type: "string";
                                readonly examples: readonly ["BANAMEX"];
                            };
                            readonly last4: {
                                readonly description: "Last 4 digits of the card";
                                readonly type: "string";
                                readonly examples: readonly ["4242"];
                            };
                            readonly name: {
                                readonly description: "Name of the cardholder";
                                readonly type: "string";
                                readonly examples: readonly ["Fulanito Perez"];
                            };
                        };
                    }, {
                        readonly required: readonly ["object"];
                        readonly type: "object";
                        readonly description: "use for bank transfer responses";
                        readonly title: "charge_data_payment_method_bank_transfer_response";
                        readonly properties: {
                            readonly type: {
                                readonly type: "string";
                            };
                            readonly object: {
                                readonly type: "string";
                                readonly examples: readonly ["payment_source"];
                            };
                            readonly bank: {
                                readonly type: "string";
                                readonly examples: readonly ["STP"];
                            };
                            readonly clabe: {
                                readonly type: "string";
                                readonly examples: readonly ["646180111805034237"];
                            };
                            readonly description: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly executed_at: {
                                readonly type: readonly ["integer", "null"];
                            };
                            readonly expires_at: {
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1683053729];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                            readonly issuing_account_bank: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly issuing_account_number: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly issuing_account_holder_name: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly issuing_account_tax_id: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly payment_attempts: {
                                readonly type: "array";
                                readonly items: {};
                            };
                            readonly receiving_account_holder_name: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly receiving_account_number: {
                                readonly type: "string";
                                readonly examples: readonly ["646180111805034237"];
                            };
                            readonly receiving_account_bank: {
                                readonly type: "string";
                                readonly examples: readonly ["STP"];
                            };
                            readonly receiving_account_tax_id: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly reference_number: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly tracking_code: {
                                readonly type: readonly ["string", "null"];
                            };
                        };
                    }];
                    readonly title: "charge_response_payment_method";
                };
                readonly reference_id: {
                    readonly description: "Reference ID of the charge";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["ref_2tN73UdUSNrYRPD9r"];
                };
                readonly refunds: {
                    readonly title: "charge_response_refunds";
                    readonly type: readonly ["object", "null"];
                    readonly description: "page metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly next_page_url: {
                            readonly description: "URL of the next page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                        };
                        readonly previous_page_url: {
                            readonly description: "Url of the previous page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                        };
                        readonly data: {
                            readonly description: "refunds";
                            readonly type: "array";
                            readonly items: {
                                readonly required: readonly ["amount", "created_at", "id", "object"];
                                readonly title: "charge_response_refunds_data";
                                readonly type: "object";
                                readonly properties: {
                                    readonly amount: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [-15000];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly auth_code: {
                                        readonly type: "string";
                                        readonly examples: readonly ["867372"];
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1678226878];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly expires_at: {
                                        readonly description: "refund expiration date";
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1678226878];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["6407b5bee1329a000175ba11"];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["refund"];
                                    };
                                    readonly status: {
                                        readonly description: "refund status";
                                        readonly type: "string";
                                        readonly examples: readonly ["pending"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["pending_payment"];
                };
            };
            readonly title: "charges_data_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const UpdateCustomer: {
    readonly body: {
        readonly description: "update customer";
        readonly properties: {
            readonly antifraud_info: {
                readonly properties: {
                    readonly account_created_at: {
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly examples: readonly [1484040996];
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                    readonly first_paid_at: {
                        readonly type: "integer";
                        readonly examples: readonly [1485151007];
                    };
                };
                readonly type: readonly ["object", "null"];
            };
            readonly default_payment_source_id: {
                readonly description: "It is a parameter that allows to identify in the response, the Conekta ID of a payment method (payment_id)";
                readonly type: "string";
                readonly examples: readonly ["src_1a2b3c4d5e6f7g8h"];
            };
            readonly email: {
                readonly description: "An email address is a series of customizable characters followed by a universal Internet symbol, the at symbol (@), the name of a host server, and a web domain ending (.mx, .com, .org, . net, etc).";
                readonly type: "string";
                readonly examples: readonly ["miguel@gmail.com"];
            };
            readonly name: {
                readonly description: "Client's name";
                readonly type: "string";
                readonly examples: readonly ["miguel"];
            };
            readonly phone: {
                readonly description: "Is the customer's phone number";
                readonly type: "string";
                readonly examples: readonly ["+5215555555555"];
            };
            readonly plan_id: {
                readonly description: "Contains the ID of a plan, which could together with name, email and phone create a client directly to a subscription";
                readonly type: "string";
                readonly examples: readonly ["plan_987234823"];
            };
            readonly default_shipping_contact_id: {
                readonly description: "It is a parameter that allows to identify in the response, the Conekta ID of the shipping address (shipping_contact)";
                readonly type: "string";
                readonly examples: readonly ["ship_cont_1a2b3c4d5e6f7g8h"];
            };
            readonly corporate: {
                readonly default: false;
                readonly description: "It is a value that allows identifying if the email is corporate or not.";
                readonly type: "boolean";
                readonly examples: readonly [false];
            };
            readonly custom_reference: {
                readonly description: "It is an undefined value.";
                readonly type: "string";
            };
            readonly fiscal_entities: {
                readonly items: {
                    readonly properties: {
                        readonly address: {
                            readonly required: readonly ["city", "postal_code", "street1"];
                            readonly type: "object";
                            readonly properties: {
                                readonly street1: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly residential: {
                                    readonly default: false;
                                    readonly type: "boolean";
                                    readonly examples: readonly [true];
                                };
                                readonly external_number: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly tax_id: {
                            readonly type: "string";
                        };
                        readonly email: {
                            readonly type: "string";
                        };
                        readonly phone: {
                            readonly type: "string";
                        };
                        readonly metadata: {
                            readonly additionalProperties: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly type: "object";
                        };
                        readonly company_name: {
                            readonly type: "string";
                            readonly examples: readonly ["conekta"];
                        };
                    };
                    readonly required: readonly ["address"];
                    readonly title: "fiscal_entity_request";
                    readonly type: "object";
                };
                readonly type: "array";
            };
            readonly metadata: {
                readonly additionalProperties: true;
                readonly maxProperties: 100;
                readonly type: "object";
            };
            readonly payment_sources: {
                readonly description: "Contains details of the payment methods that the customer has active or has used in Conekta";
                readonly items: {
                    readonly oneOf: readonly [{
                        readonly title: "payment_method_token_request";
                        readonly description: "Contains details of the payment methods that the customer has active or has used in Conekta";
                        readonly required: readonly ["token_id", "type"];
                        readonly type: "object";
                        readonly properties: {
                            readonly type: {
                                readonly description: "Type of payment method";
                                readonly type: "string";
                                readonly examples: readonly ["card | cash | spei"];
                            };
                            readonly token_id: {
                                readonly description: "Token id that will be used to create a \"card\" type payment method. See the (subscriptions)[https://developers.conekta.com/v2.1.0/reference/createsubscription] tutorial for more information on how to tokenize cards.";
                                readonly type: "string";
                                readonly examples: readonly ["tok_32hj4g234as"];
                            };
                        };
                    }, {
                        readonly title: "payment_method_cash_request";
                        readonly description: "Contains details of the payment methods that the customer has active or has used in Conekta";
                        readonly required: readonly ["type"];
                        readonly type: "object";
                        readonly properties: {
                            readonly type: {
                                readonly description: "Type of payment method";
                                readonly type: "string";
                                readonly examples: readonly ["card | cash | spei"];
                            };
                            readonly expires_at: {
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1553273553];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                        };
                    }, {
                        readonly title: "payment_method_spei_request";
                        readonly description: "Contains details of the payment methods that the customer has active or has used in Conekta";
                        readonly required: readonly ["type"];
                        readonly type: "object";
                        readonly properties: {
                            readonly type: {
                                readonly description: "Type of payment method";
                                readonly type: "string";
                                readonly examples: readonly ["card | cash | spei"];
                            };
                            readonly expires_at: {
                                readonly format: "int64";
                                readonly type: "integer";
                                readonly examples: readonly [1553273553];
                                readonly minimum: -9223372036854776000;
                                readonly maximum: 9223372036854776000;
                            };
                        };
                    }];
                    readonly title: "customer_payment_methods_request";
                };
                readonly type: "array";
            };
            readonly shipping_contacts: {
                readonly description: "Contains the detail of the shipping addresses that the client has active or has used in Conekta";
                readonly items: {
                    readonly description: "[Shipping](https://developers.conekta.com/v2.1.0/reference/createcustomershippingcontacts)\ndetails, required in case of sending a shipping. If we do not receive a shipping_contact on the order, the default shipping_contact of the customer will be used.";
                    readonly properties: {
                        readonly phone: {
                            readonly description: "Phone contact";
                            readonly type: "string";
                            readonly examples: readonly ["+525511223344"];
                        };
                        readonly receiver: {
                            readonly description: "Name of the person who will receive the order";
                            readonly type: "string";
                            readonly examples: readonly ["Marvin Fuller"];
                        };
                        readonly between_streets: {
                            readonly description: "The street names between which the order will be delivered.";
                            readonly type: "string";
                            readonly examples: readonly ["Ackerman Crescent"];
                        };
                        readonly address: {
                            readonly description: "Address of the person who will receive the order";
                            readonly properties: {
                                readonly street1: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly residential: {
                                    readonly type: readonly ["boolean", "null"];
                                    readonly examples: readonly [true];
                                };
                            };
                            readonly type: "object";
                        };
                        readonly parent_id: {
                            readonly type: "string";
                        };
                        readonly default: {
                            readonly type: readonly ["boolean", "null"];
                        };
                        readonly deleted: {
                            readonly type: readonly ["boolean", "null"];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly description: "Metadata associated with the shipping contact";
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                    };
                    readonly required: readonly ["address"];
                    readonly title: "customer_shipping_contacts_request";
                    readonly type: "object";
                };
                readonly type: "array";
            };
            readonly subscription: {
                readonly description: "It is a parameter that allows to identify in the response, the detailed content of the plans to which the client has subscribed";
                readonly properties: {
                    readonly plan_id: {
                        readonly type: "string";
                        readonly examples: readonly ["f84gdgf5g48r15fd21g8w424fd1"];
                    };
                    readonly card_id: {
                        readonly type: "string";
                        readonly examples: readonly ["src_2qUCNd5AyQqfPMBuV"];
                    };
                    readonly trial_end: {
                        readonly type: "integer";
                        readonly examples: readonly [1484040996];
                    };
                };
                readonly required: readonly ["plan_id"];
                readonly title: "subscription_request";
                readonly type: "object";
            };
        };
        readonly title: "update customer request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "customer response";
            readonly properties: {
                readonly antifraud_info: {
                    readonly properties: {
                        readonly first_paid_at: {
                            readonly type: "integer";
                            readonly examples: readonly [1485151007];
                        };
                        readonly account_created_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1484040996];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                    };
                    readonly title: "customer_antifraud_info_response";
                    readonly type: readonly ["object", "null"];
                };
                readonly corporate: {
                    readonly description: "true if the customer is a company";
                    readonly type: "boolean";
                };
                readonly created_at: {
                    readonly description: "Creation date of the object";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1485151007];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly custom_reference: {
                    readonly description: "Custom reference";
                    readonly type: "string";
                    readonly examples: readonly ["custom_reference"];
                };
                readonly default_fiscal_entity_id: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["fis_ent_2tKqqAfqPi21oCmEJ"];
                };
                readonly default_shipping_contact_id: {
                    readonly type: "string";
                    readonly examples: readonly ["ship_cont_2tKZsTYcsryyu7Ah8"];
                };
                readonly default_payment_source_id: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["src_2tHJfJ79KyUwpxTio"];
                };
                readonly email: {
                    readonly format: "email";
                    readonly type: "string";
                    readonly examples: readonly ["Felipe@gmail.com"];
                };
                readonly fiscal_entities: {
                    readonly title: "customer_fiscal_entities_response";
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "customer_fiscal_entities_data_response";
                                readonly required: readonly ["address", "created_at", "id", "object"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly address: {
                                        readonly required: readonly ["city", "postal_code", "street1"];
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly street1: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Nuevo Leon 254"];
                                            };
                                            readonly street2: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Departamento 404"];
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly examples: readonly ["06100"];
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly state: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly country: {
                                                readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                                readonly type: "string";
                                                readonly examples: readonly ["MX"];
                                            };
                                            readonly residential: {
                                                readonly default: false;
                                                readonly type: "boolean";
                                                readonly examples: readonly [true];
                                            };
                                            readonly external_number: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly tax_id: {
                                        readonly type: "string";
                                    };
                                    readonly email: {
                                        readonly type: "string";
                                    };
                                    readonly phone: {
                                        readonly type: "string";
                                    };
                                    readonly metadata: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly type: "object";
                                            readonly additionalProperties: true;
                                        };
                                    };
                                    readonly company_name: {
                                        readonly type: "string";
                                        readonly examples: readonly ["conekta"];
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["ship_cont_2tKZsTYcsryyu7Ah8"];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["shipping_contact"];
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1675715413];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly parent_id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                                    };
                                    readonly default: {
                                        readonly type: "boolean";
                                    };
                                };
                            };
                        };
                    };
                };
                readonly id: {
                    readonly description: "Customer's ID";
                    readonly type: "string";
                    readonly examples: readonly ["cus_2tHJfJ79KyUwpxTik"];
                };
                readonly livemode: {
                    readonly description: "true if the object exists in live mode or the value false if the object exists in test mode";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly name: {
                    readonly description: "Customer's name";
                    readonly type: "string";
                    readonly examples: readonly ["Felipe"];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["customer"];
                };
                readonly payment_sources: {
                    readonly title: "customer_payment_methods_response";
                    readonly description: "page metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly next_page_url: {
                            readonly description: "URL of the next page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                        };
                        readonly previous_page_url: {
                            readonly description: "Url of the previous page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                        };
                        readonly data: {
                            readonly title: "customer_payment_methods_data";
                            readonly type: "array";
                            readonly items: {
                                readonly discriminator: {
                                    readonly mapping: {
                                        readonly cash: "payment_method_cash_response";
                                        readonly card: "payment_method_card_response";
                                        readonly oxxo_recurrent: "payment_method_cash_response";
                                        readonly spei_recurrent: "payment_method_spei_recurrent";
                                    };
                                    readonly propertyName: "type";
                                };
                                readonly oneOf: readonly [{
                                    readonly required: readonly ["created_at", "id", "object", "type"];
                                    readonly type: "object";
                                    readonly description: "use for cash responses";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                        };
                                        readonly id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["payment_source"];
                                        };
                                        readonly created_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [1675715413];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly parent_id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                        };
                                        readonly reference: {
                                            readonly type: "string";
                                            readonly examples: readonly ["93000262276908"];
                                        };
                                        readonly barcode: {
                                            readonly type: "string";
                                            readonly examples: readonly ["93000262276908"];
                                        };
                                        readonly barcode_url: {
                                            readonly type: "string";
                                            readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                                        };
                                        readonly expires_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [0];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly provider: {
                                            readonly type: "string";
                                            readonly examples: readonly ["Oxxo"];
                                        };
                                    };
                                }, {
                                    readonly required: readonly ["created_at", "id", "object", "type"];
                                    readonly type: "object";
                                    readonly description: "use for card responses";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                        };
                                        readonly id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["payment_source"];
                                        };
                                        readonly created_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [1675715413];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly parent_id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                        };
                                        readonly last4: {
                                            readonly type: "string";
                                            readonly examples: readonly ["6410"];
                                        };
                                        readonly bin: {
                                            readonly type: "string";
                                            readonly examples: readonly ["40276657"];
                                        };
                                        readonly card_type: {
                                            readonly type: "string";
                                            readonly examples: readonly ["debit"];
                                        };
                                        readonly exp_month: {
                                            readonly type: "string";
                                            readonly examples: readonly ["10"];
                                        };
                                        readonly exp_year: {
                                            readonly type: "string";
                                            readonly examples: readonly ["25"];
                                        };
                                        readonly brand: {
                                            readonly type: "string";
                                            readonly examples: readonly ["visa"];
                                        };
                                        readonly name: {
                                            readonly type: "string";
                                            readonly examples: readonly ["Fulano Perez\""];
                                        };
                                        readonly default: {
                                            readonly type: "boolean";
                                        };
                                        readonly visible_on_checkout: {
                                            readonly type: "boolean";
                                        };
                                        readonly payment_source_status: {
                                            readonly type: "string";
                                            readonly examples: readonly ["active"];
                                        };
                                    };
                                }, {
                                    readonly required: readonly ["created_at", "id", "object", "type"];
                                    readonly type: "object";
                                    readonly description: "use for spei responses";
                                    readonly properties: {
                                        readonly type: {
                                            readonly type: "string";
                                        };
                                        readonly id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                                        };
                                        readonly object: {
                                            readonly type: "string";
                                            readonly examples: readonly ["payment_source"];
                                        };
                                        readonly created_at: {
                                            readonly format: "int64";
                                            readonly type: "integer";
                                            readonly examples: readonly [1675715413];
                                            readonly minimum: -9223372036854776000;
                                            readonly maximum: 9223372036854776000;
                                        };
                                        readonly parent_id: {
                                            readonly type: "string";
                                            readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                                        };
                                        readonly reference: {
                                            readonly type: "string";
                                            readonly examples: readonly ["93000262276908"];
                                        };
                                        readonly expires_at: {
                                            readonly type: "string";
                                            readonly examples: readonly ["none"];
                                        };
                                    };
                                }];
                                readonly title: "customer_payment_methods_data";
                            };
                        };
                    };
                };
                readonly phone: {
                    readonly description: "Customer's phone number";
                    readonly type: "string";
                    readonly examples: readonly ["+5215555555555"];
                };
                readonly shipping_contacts: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "customer_shipping_contacts_data_response";
                                readonly description: "[Shipping](https://developers.conekta.com/v2.1.0/reference/createcustomershippingcontacts)\ndetails, required in case of sending a shipping. If we do not receive a shipping_contact on the order, the default shipping_contact of the customer will be used.";
                                readonly required: readonly ["address", "created_at", "id", "object"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly phone: {
                                        readonly description: "Phone contact";
                                        readonly type: "string";
                                        readonly examples: readonly ["+525511223344"];
                                    };
                                    readonly receiver: {
                                        readonly description: "Name of the person who will receive the order";
                                        readonly type: "string";
                                        readonly examples: readonly ["Marvin Fuller"];
                                    };
                                    readonly between_streets: {
                                        readonly description: "The street names between which the order will be delivered.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Ackerman Crescent"];
                                    };
                                    readonly address: {
                                        readonly description: "Address of the person who will receive the order";
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly street1: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Nuevo Leon 254"];
                                            };
                                            readonly street2: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Departamento 404"];
                                            };
                                            readonly postal_code: {
                                                readonly type: "string";
                                                readonly examples: readonly ["06100"];
                                            };
                                            readonly city: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly state: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Ciudad de Mexico"];
                                            };
                                            readonly country: {
                                                readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                                readonly type: "string";
                                                readonly examples: readonly ["MX"];
                                            };
                                            readonly residential: {
                                                readonly type: readonly ["boolean", "null"];
                                                readonly examples: readonly [true];
                                            };
                                        };
                                    };
                                    readonly parent_id: {
                                        readonly type: "string";
                                    };
                                    readonly default: {
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly deleted: {
                                        readonly type: readonly ["boolean", "null"];
                                    };
                                    readonly metadata: {
                                        readonly description: "Metadata associated with the shipping contact";
                                        readonly maxProperties: 100;
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["ship_cont_2tKZsTYcsryyu7Ah8"];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["shipping_contact"];
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1675715413];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                };
                            };
                        };
                    };
                };
                readonly subscription: {
                    readonly description: "subscription model";
                    readonly properties: {
                        readonly billing_cycle_start: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1677626827];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly billing_cycle_end: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1677626827];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly canceled_at: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1678258162];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly canceled_reason: {
                            readonly description: "Reason for cancellation. This field appears when the subscription status is 'canceled'.";
                            readonly type: "string";
                            readonly examples: readonly ["user_cancelation"];
                        };
                        readonly card_id: {
                            readonly type: "string";
                            readonly examples: readonly ["src_2tKcHxhTz7xU5SymL"];
                        };
                        readonly charge_id: {
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["2tKcHxhTz7xU5SymL"];
                        };
                        readonly created_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1677626837];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly customer_custom_reference: {
                            readonly type: "string";
                            readonly examples: readonly ["dotnet_123456"];
                        };
                        readonly customer_id: {
                            readonly type: "string";
                            readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["gold-plan"];
                        };
                        readonly last_billing_cycle_order_id: {
                            readonly type: "string";
                            readonly examples: readonly ["ord_2tSoMP7bZJbLiq4z8"];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["subscription"];
                        };
                        readonly paused_at: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1678258162];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly plan_id: {
                            readonly type: "string";
                            readonly examples: readonly ["plan_2tXx672QLQ68CkmMn"];
                        };
                        readonly status: {
                            readonly type: "string";
                            readonly examples: readonly ["past_due"];
                        };
                        readonly subscription_start: {
                            readonly type: "integer";
                            readonly examples: readonly [1677626837];
                        };
                        readonly trial_start: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1677626837];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly trial_end: {
                            readonly format: "int64";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [1677626837];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                    };
                    readonly title: "subscription_response";
                    readonly type: "object";
                };
            };
            readonly required: readonly ["created_at", "id", "livemode", "name", "object"];
            readonly title: "customer response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "402": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const UpdateCustomerFiscalEntities: {
    readonly body: {
        readonly properties: {
            readonly address: {
                readonly required: readonly ["city", "postal_code", "street1"];
                readonly type: "object";
                readonly properties: {
                    readonly street1: {
                        readonly type: "string";
                        readonly examples: readonly ["Nuevo Leon 254"];
                    };
                    readonly street2: {
                        readonly type: "string";
                        readonly examples: readonly ["Departamento 404"];
                    };
                    readonly postal_code: {
                        readonly type: "string";
                        readonly examples: readonly ["06100"];
                    };
                    readonly city: {
                        readonly type: "string";
                        readonly examples: readonly ["Ciudad de Mexico"];
                    };
                    readonly state: {
                        readonly type: "string";
                        readonly examples: readonly ["Ciudad de Mexico"];
                    };
                    readonly country: {
                        readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                        readonly type: "string";
                        readonly examples: readonly ["MX"];
                    };
                    readonly residential: {
                        readonly default: false;
                        readonly type: "boolean";
                        readonly examples: readonly [true];
                    };
                    readonly external_number: {
                        readonly type: "string";
                    };
                };
            };
            readonly tax_id: {
                readonly type: "string";
            };
            readonly email: {
                readonly type: "string";
            };
            readonly phone: {
                readonly type: "string";
            };
            readonly metadata: {
                readonly additionalProperties: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                };
                readonly type: "object";
            };
            readonly company_name: {
                readonly type: "string";
                readonly examples: readonly ["conekta"];
            };
        };
        readonly title: "update_fiscal_entity_request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
                readonly fiscal_entities_id: {
                    readonly type: "string";
                    readonly examples: readonly ["fis_ent_2tQ8HkkfbauaKP9Ho"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "identifier";
                };
            };
            readonly required: readonly ["id", "fiscal_entities_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly title: "update_customer_fiscal_entities_response";
            readonly required: readonly ["address", "created_at", "id", "object"];
            readonly type: "object";
            readonly properties: {
                readonly address: {
                    readonly required: readonly ["city", "postal_code", "street1"];
                    readonly type: "object";
                    readonly properties: {
                        readonly street1: {
                            readonly type: "string";
                            readonly examples: readonly ["Nuevo Leon 254"];
                        };
                        readonly street2: {
                            readonly type: "string";
                            readonly examples: readonly ["Departamento 404"];
                        };
                        readonly postal_code: {
                            readonly type: "string";
                            readonly examples: readonly ["06100"];
                        };
                        readonly city: {
                            readonly type: "string";
                            readonly examples: readonly ["Ciudad de Mexico"];
                        };
                        readonly state: {
                            readonly type: "string";
                            readonly examples: readonly ["Ciudad de Mexico"];
                        };
                        readonly country: {
                            readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                            readonly type: "string";
                            readonly examples: readonly ["MX"];
                        };
                        readonly residential: {
                            readonly default: false;
                            readonly type: "boolean";
                            readonly examples: readonly [true];
                        };
                        readonly external_number: {
                            readonly type: "string";
                        };
                    };
                };
                readonly tax_id: {
                    readonly type: "string";
                };
                readonly email: {
                    readonly type: "string";
                };
                readonly phone: {
                    readonly type: "string";
                };
                readonly metadata: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly company_name: {
                    readonly type: "string";
                    readonly examples: readonly ["conekta"];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["fis_ent_2tKZsTYcsryyu7Ah8"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["fiscal_entities"];
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1675715413];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly parent_id: {
                    readonly type: "string";
                    readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                };
                readonly default: {
                    readonly type: "boolean";
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const UpdateCustomerPaymentMethods: {
    readonly body: {
        readonly properties: {
            readonly name: {
                readonly type: "string";
                readonly examples: readonly ["name of person"];
            };
        };
        readonly title: "update_payment_methods_card";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
                readonly payment_method_id: {
                    readonly type: "string";
                    readonly examples: readonly ["src_2tQ974hSHcsdeSZHG"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the payment method";
                };
            };
            readonly required: readonly ["id", "payment_method_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly discriminator: {
                readonly mapping: {
                    readonly cash: "payment_method_cash_response";
                    readonly card: "payment_method_card_response";
                    readonly oxxo_recurrent: "payment_method_cash_response";
                    readonly spei_recurrent: "payment_method_spei_recurrent";
                };
                readonly propertyName: "type";
            };
            readonly oneOf: readonly [{
                readonly required: readonly ["created_at", "id", "object", "type"];
                readonly type: "object";
                readonly description: "use for cash responses";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                    };
                    readonly id: {
                        readonly type: "string";
                        readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                    };
                    readonly object: {
                        readonly type: "string";
                        readonly examples: readonly ["payment_source"];
                    };
                    readonly created_at: {
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly examples: readonly [1675715413];
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                    readonly parent_id: {
                        readonly type: "string";
                        readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                    };
                    readonly reference: {
                        readonly type: "string";
                        readonly examples: readonly ["93000262276908"];
                    };
                    readonly barcode: {
                        readonly type: "string";
                        readonly examples: readonly ["93000262276908"];
                    };
                    readonly barcode_url: {
                        readonly type: "string";
                        readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                    };
                    readonly expires_at: {
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly examples: readonly [0];
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                    readonly provider: {
                        readonly type: "string";
                        readonly examples: readonly ["Oxxo"];
                    };
                };
            }, {
                readonly required: readonly ["created_at", "id", "object", "type"];
                readonly type: "object";
                readonly description: "use for card responses";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                    };
                    readonly id: {
                        readonly type: "string";
                        readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                    };
                    readonly object: {
                        readonly type: "string";
                        readonly examples: readonly ["payment_source"];
                    };
                    readonly created_at: {
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly examples: readonly [1675715413];
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                    readonly parent_id: {
                        readonly type: "string";
                        readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                    };
                    readonly last4: {
                        readonly type: "string";
                        readonly examples: readonly ["6410"];
                    };
                    readonly bin: {
                        readonly type: "string";
                        readonly examples: readonly ["40276657"];
                    };
                    readonly card_type: {
                        readonly type: "string";
                        readonly examples: readonly ["debit"];
                    };
                    readonly exp_month: {
                        readonly type: "string";
                        readonly examples: readonly ["10"];
                    };
                    readonly exp_year: {
                        readonly type: "string";
                        readonly examples: readonly ["25"];
                    };
                    readonly brand: {
                        readonly type: "string";
                        readonly examples: readonly ["visa"];
                    };
                    readonly name: {
                        readonly type: "string";
                        readonly examples: readonly ["Fulano Perez\""];
                    };
                    readonly default: {
                        readonly type: "boolean";
                    };
                    readonly visible_on_checkout: {
                        readonly type: "boolean";
                    };
                    readonly payment_source_status: {
                        readonly type: "string";
                        readonly examples: readonly ["active"];
                    };
                };
            }, {
                readonly required: readonly ["created_at", "id", "object", "type"];
                readonly type: "object";
                readonly description: "use for spei responses";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                    };
                    readonly id: {
                        readonly type: "string";
                        readonly examples: readonly ["src_2s8K1B3PBKDontpi9"];
                    };
                    readonly object: {
                        readonly type: "string";
                        readonly examples: readonly ["payment_source"];
                    };
                    readonly created_at: {
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly examples: readonly [1675715413];
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                    readonly parent_id: {
                        readonly type: "string";
                        readonly examples: readonly ["cus_2s8K1B3PBKDontpi8"];
                    };
                    readonly reference: {
                        readonly type: "string";
                        readonly examples: readonly ["93000262276908"];
                    };
                    readonly expires_at: {
                        readonly type: "string";
                        readonly examples: readonly ["none"];
                    };
                };
            }];
            readonly title: "update_customer_payment_methods_response";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const UpdateCustomerShippingContacts: {
    readonly body: {
        readonly description: "[Shipping](https://developers.conekta.com/v2.1.0/reference/createcustomershippingcontacts)\ndetails, required in case of sending a shipping. If we do not receive a shipping_contact on the order, the default shipping_contact of the customer will be used.";
        readonly properties: {
            readonly phone: {
                readonly description: "Phone contact";
                readonly type: "string";
                readonly examples: readonly ["+525511223344"];
            };
            readonly receiver: {
                readonly description: "Name of the person who will receive the order";
                readonly type: "string";
                readonly examples: readonly ["Marvin Fuller"];
            };
            readonly between_streets: {
                readonly description: "The street names between which the order will be delivered.";
                readonly type: "string";
                readonly examples: readonly ["Ackerman Crescent"];
            };
            readonly address: {
                readonly description: "Address of the person who will receive the order";
                readonly properties: {
                    readonly street1: {
                        readonly type: "string";
                        readonly examples: readonly ["Nuevo Leon 254"];
                    };
                    readonly street2: {
                        readonly type: "string";
                        readonly examples: readonly ["Departamento 404"];
                    };
                    readonly postal_code: {
                        readonly type: "string";
                        readonly examples: readonly ["06100"];
                    };
                    readonly city: {
                        readonly type: "string";
                        readonly examples: readonly ["Ciudad de Mexico"];
                    };
                    readonly state: {
                        readonly type: "string";
                        readonly examples: readonly ["Ciudad de Mexico"];
                    };
                    readonly country: {
                        readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                        readonly type: "string";
                        readonly examples: readonly ["MX"];
                    };
                    readonly residential: {
                        readonly type: readonly ["boolean", "null"];
                        readonly examples: readonly [true];
                    };
                };
                readonly type: "object";
            };
            readonly parent_id: {
                readonly type: "string";
            };
            readonly default: {
                readonly type: readonly ["boolean", "null"];
            };
            readonly deleted: {
                readonly type: readonly ["boolean", "null"];
            };
        };
        readonly title: "customer_update_shipping_contacts_request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
                readonly shipping_contacts_id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "identifier";
                };
            };
            readonly required: readonly ["id", "shipping_contacts_id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "Contains the detail of the shipping addresses that the client has active or has used in Conekta";
            readonly properties: {
                readonly phone: {
                    readonly type: "string";
                    readonly examples: readonly ["+525511223344"];
                };
                readonly receiver: {
                    readonly type: "string";
                    readonly examples: readonly ["Marvin Fuller"];
                };
                readonly between_streets: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["Ackerman Crescent"];
                };
                readonly address: {
                    readonly properties: {
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["shipping_address"];
                        };
                        readonly street1: {
                            readonly type: "string";
                            readonly examples: readonly ["Nuevo Leon 254"];
                        };
                        readonly street2: {
                            readonly type: "string";
                            readonly examples: readonly ["Departamento 404"];
                        };
                        readonly postal_code: {
                            readonly type: "string";
                            readonly examples: readonly ["06100"];
                        };
                        readonly city: {
                            readonly type: "string";
                            readonly examples: readonly ["Ciudad de Mexico"];
                        };
                        readonly state: {
                            readonly type: "string";
                            readonly examples: readonly ["Ciudad de Mexico"];
                        };
                        readonly country: {
                            readonly type: "string";
                            readonly examples: readonly ["MX"];
                        };
                        readonly residential: {
                            readonly type: readonly ["boolean", "null"];
                            readonly examples: readonly [true];
                        };
                    };
                    readonly type: "object";
                };
                readonly parent_id: {
                    readonly type: "string";
                };
                readonly default: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["adr_1234567890"];
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1675715413];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly description: "Metadata associated with the shipping contact";
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["shipping_contact"];
                };
                readonly deleted: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
            };
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const UpdateOrder: {
    readonly body: {
        readonly description: "a order";
        readonly properties: {
            readonly charges: {
                readonly items: {
                    readonly description: "The charges to be made";
                    readonly properties: {
                        readonly amount: {
                            readonly description: "Amount to be charged in cents";
                            readonly type: "integer";
                            readonly examples: readonly [40000];
                        };
                        readonly payment_method: {
                            readonly oneOf: readonly [{
                                readonly title: "payment_method_card_request";
                                readonly description: "Contains details of the payment methods that the customer has active or has used in Conekta";
                                readonly required: readonly ["cvc", "exp_month", "exp_year", "name", "number", "type"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly type: {
                                        readonly description: "Type of payment method";
                                        readonly type: "string";
                                        readonly examples: readonly ["card | cash | spei"];
                                    };
                                    readonly cvc: {
                                        readonly description: "Card security code";
                                        readonly maxLength: 4;
                                        readonly minLength: 3;
                                        readonly type: "string";
                                        readonly examples: readonly ["198"];
                                    };
                                    readonly exp_month: {
                                        readonly description: "Card expiration month";
                                        readonly maxLength: 2;
                                        readonly minLength: 2;
                                        readonly type: "string";
                                        readonly examples: readonly ["12"];
                                    };
                                    readonly exp_year: {
                                        readonly description: "Card expiration year";
                                        readonly maxLength: 4;
                                        readonly minLength: 4;
                                        readonly type: "string";
                                        readonly examples: readonly ["2025"];
                                    };
                                    readonly name: {
                                        readonly description: "Cardholder name";
                                        readonly type: "string";
                                        readonly examples: readonly ["John Doe"];
                                    };
                                    readonly number: {
                                        readonly description: "Card number";
                                        readonly type: "string";
                                        readonly examples: readonly ["4242424242424242"];
                                    };
                                };
                            }, {
                                readonly description: "Payment method used in the charge. Go to the [payment methods](https://developers.conekta.com/reference/m%C3%A9todos-de-pago) section for more details\n";
                                readonly properties: {
                                    readonly expires_at: {
                                        readonly description: "Method expiration date as unix timestamp";
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1677196303];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly monthly_installments: {
                                        readonly description: "How many months without interest to apply, it can be 3, 6, 9, 12 or 18";
                                        readonly format: "int8";
                                        readonly type: "integer";
                                        readonly minimum: -128;
                                        readonly maximum: 127;
                                    };
                                    readonly type: {
                                        readonly description: "Type of payment method";
                                        readonly type: "string";
                                        readonly examples: readonly ["card"];
                                    };
                                    readonly token_id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["tok_2897348234"];
                                    };
                                    readonly payment_source_id: {
                                        readonly type: "string";
                                        readonly examples: readonly ["src_2tLkkyfMPh6v7pFry"];
                                    };
                                    readonly cvc: {
                                        readonly description: "Optional, It is a value that allows identifying the security code of the card. Only for PCI merchants";
                                        readonly type: "string";
                                        readonly examples: readonly ["123"];
                                    };
                                    readonly contract_id: {
                                        readonly description: "Optional id sent to indicate the bank contract for recurrent card charges.";
                                        readonly type: "string";
                                        readonly examples: readonly ["S781317595"];
                                    };
                                };
                                readonly required: readonly ["type"];
                                readonly title: "payment_method_general_request";
                                readonly type: "object";
                            }];
                            readonly title: "charge_request_payment_method";
                        };
                        readonly reference_id: {
                            readonly description: "Custom reference to add to the charge";
                            readonly type: "string";
                        };
                    };
                    readonly required: readonly ["payment_method"];
                    readonly title: "charges";
                    readonly type: "object";
                };
                readonly type: "array";
            };
            readonly checkout: {
                readonly description: "[Checkout](https://developers.conekta.com/v2.1.0/reference/payment-link) details\n";
                readonly properties: {
                    readonly allowed_payment_methods: {
                        readonly description: "Are the payment methods available for this link";
                        readonly items: {
                            readonly type: "string";
                        };
                        readonly type: "array";
                        readonly examples: readonly ["cash", "card", "bank_transfer"];
                    };
                    readonly expires_at: {
                        readonly description: "Unix timestamp of checkout expiration";
                        readonly format: "int64";
                        readonly type: "integer";
                        readonly minimum: -9223372036854776000;
                        readonly maximum: 9223372036854776000;
                    };
                    readonly failure_url: {
                        readonly description: "Redirection url back to the site in case of failed payment, applies only to HostedPayment.";
                        readonly type: "string";
                    };
                    readonly monthly_installments_enabled: {
                        readonly type: "boolean";
                        readonly examples: readonly [false];
                    };
                    readonly monthly_installments_options: {
                        readonly items: {
                            readonly format: "int8";
                            readonly type: "integer";
                            readonly minimum: -128;
                            readonly maximum: 127;
                        };
                        readonly type: "array";
                        readonly examples: readonly [3, 6, 12];
                    };
                    readonly name: {
                        readonly description: "Reason for payment";
                        readonly type: "string";
                    };
                    readonly on_demand_enabled: {
                        readonly type: "boolean";
                        readonly examples: readonly [true];
                    };
                    readonly redirection_time: {
                        readonly description: "number of seconds to wait before redirecting to the success_url";
                        readonly format: "int8";
                        readonly type: "integer";
                        readonly examples: readonly [10];
                        readonly minimum: -128;
                        readonly maximum: 127;
                    };
                    readonly success_url: {
                        readonly description: "Redirection url back to the site in case of successful payment, applies only to HostedPayment";
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly description: "This field represents the type of checkout";
                        readonly type: "string";
                        readonly examples: readonly ["Integration"];
                    };
                };
                readonly required: readonly ["allowed_payment_methods"];
                readonly title: "order_checkout_request";
                readonly type: "object";
            };
            readonly currency: {
                readonly description: "Currency with which the payment will be made. It uses the 3-letter code of the [International Standard ISO 4217.](https://es.wikipedia.org/wiki/ISO_4217)";
                readonly maxLength: 3;
                readonly type: "string";
                readonly examples: readonly ["MXN"];
            };
            readonly customer_info: {
                readonly oneOf: readonly [{
                    readonly properties: {
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["DevTest"];
                        };
                        readonly email: {
                            readonly format: "email";
                            readonly type: "string";
                            readonly examples: readonly ["test@conekta.com"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["5522997233"];
                        };
                        readonly corporate: {
                            readonly type: "boolean";
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["customer_info"];
                        };
                    };
                    readonly required: readonly ["email", "name", "phone"];
                    readonly title: "customer_info";
                    readonly type: "object";
                }, {
                    readonly properties: {
                        readonly customer_id: {
                            readonly type: "string";
                            readonly examples: readonly ["cus_23874283647"];
                        };
                    };
                    readonly required: readonly ["customer_id"];
                    readonly title: "customer_info_customer_id";
                    readonly type: "object";
                }];
            };
            readonly discount_lines: {
                readonly description: "List of [discounts](https://developers.conekta.com/v2.1.0/reference/orderscreatediscountline) that are applied to the order. You must have at least one discount.";
                readonly items: {
                    readonly description: "List of discounts that apply to the order.";
                    readonly properties: {
                        readonly amount: {
                            readonly description: "The amount to be deducted from the total sum of all payments, in cents.";
                            readonly format: "int64";
                            readonly minimum: 0;
                            readonly type: "integer";
                            readonly examples: readonly [500];
                            readonly maximum: 9223372036854776000;
                        };
                        readonly code: {
                            readonly description: "Discount code.";
                            readonly type: "string";
                            readonly examples: readonly ["123"];
                        };
                        readonly type: {
                            readonly description: "It can be 'loyalty', 'campaign', 'coupon' o 'sign'";
                            readonly type: "string";
                            readonly examples: readonly ["loyalty"];
                        };
                    };
                    readonly required: readonly ["amount", "code", "type"];
                    readonly title: "order_discount_lines_request";
                    readonly type: "object";
                };
                readonly type: "array";
            };
            readonly fiscal_entity: {
                readonly description: "Fiscal entity of the order, Currently it is a purely informative field";
                readonly properties: {
                    readonly address: {
                        readonly description: "Address of the fiscal entity";
                        readonly properties: {
                            readonly street1: {
                                readonly description: "Street name and number";
                                readonly type: "string";
                                readonly examples: readonly ["Nuevo Leon 254"];
                            };
                            readonly street2: {
                                readonly description: "Street name and number";
                                readonly type: readonly ["string", "null"];
                                readonly examples: readonly ["Departamento 404"];
                            };
                            readonly postal_code: {
                                readonly description: "Postal code";
                                readonly type: "string";
                                readonly examples: readonly ["06100"];
                            };
                            readonly city: {
                                readonly description: "City";
                                readonly type: "string";
                                readonly examples: readonly ["Ciudad de Mexico"];
                            };
                            readonly state: {
                                readonly description: "State";
                                readonly type: "string";
                                readonly examples: readonly ["Ciudad de Mexico"];
                            };
                            readonly country: {
                                readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                readonly type: "string";
                                readonly examples: readonly ["MX"];
                            };
                            readonly external_number: {
                                readonly description: "External number";
                                readonly type: "string";
                                readonly examples: readonly ["123"];
                            };
                        };
                        readonly required: readonly ["city", "country", "external_number", "postal_code", "street1"];
                        readonly title: "order_fiscal_entity_address_request";
                        readonly type: "object";
                    };
                    readonly email: {
                        readonly description: "Email of the fiscal entity";
                        readonly type: "string";
                        readonly examples: readonly ["test@gmail.com"];
                    };
                    readonly name: {
                        readonly description: "Name of the fiscal entity";
                        readonly type: readonly ["string", "null"];
                        readonly examples: readonly ["Conekta Inc"];
                    };
                    readonly metadata: {
                        readonly additionalProperties: true;
                        readonly description: "Metadata associated with the fiscal entity";
                        readonly maxProperties: 100;
                        readonly type: "object";
                    };
                    readonly phone: {
                        readonly description: "Phone of the fiscal entity";
                        readonly type: "string";
                        readonly examples: readonly ["+525511223344"];
                    };
                    readonly tax_id: {
                        readonly description: "Tax ID of the fiscal entity";
                        readonly type: readonly ["string", "null"];
                        readonly examples: readonly ["AAA010101AAA"];
                    };
                };
                readonly required: readonly ["address"];
                readonly title: "order_update_fiscal_entity_request";
                readonly type: "object";
            };
            readonly line_items: {
                readonly description: "List of [products](https://developers.conekta.com/v2.1.0/reference/orderscreateproduct) that are sold in the order. You must have at least one product.";
                readonly items: {
                    readonly properties: {
                        readonly antifraud_info: {
                            readonly additionalProperties: true;
                            readonly type: "object";
                        };
                        readonly brand: {
                            readonly description: "The brand of the item.";
                            readonly type: "string";
                            readonly examples: readonly ["Cohiba"];
                        };
                        readonly description: {
                            readonly description: "Short description of the item";
                            readonly maxLength: 250;
                            readonly type: "string";
                            readonly examples: readonly ["Imported From Mex."];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly description: "It is a key/value hash that can hold custom fields. Maximum 100 elements and allows special characters.";
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                        readonly name: {
                            readonly description: "The name of the item. It will be displayed in the order.";
                            readonly type: "string";
                            readonly examples: readonly ["Box of Cohiba S1s"];
                        };
                        readonly quantity: {
                            readonly description: "The quantity of the item in the order.";
                            readonly format: "int32";
                            readonly minimum: 1;
                            readonly type: "integer";
                            readonly examples: readonly [1];
                            readonly maximum: 2147483647;
                        };
                        readonly sku: {
                            readonly description: "The stock keeping unit for the item. It is used to identify the item in the order.";
                            readonly type: "string";
                            readonly examples: readonly ["XYZ12345"];
                        };
                        readonly tags: {
                            readonly description: "List of tags for the item. It is used to identify the item in the order.";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly type: "array";
                            readonly examples: readonly ["food", "mexican food"];
                        };
                        readonly unit_price: {
                            readonly description: "The price of the item in cents.";
                            readonly format: "int32";
                            readonly minimum: 0;
                            readonly type: "integer";
                            readonly examples: readonly [20000];
                            readonly maximum: 2147483647;
                        };
                    };
                    readonly required: readonly ["name", "quantity", "unit_price"];
                    readonly title: "product";
                    readonly type: "object";
                };
                readonly type: "array";
            };
            readonly metadata: {
                readonly additionalProperties: {
                    readonly type: "string";
                };
                readonly type: "object";
            };
            readonly pre_authorize: {
                readonly default: false;
                readonly description: "Indicates whether the order charges must be preauthorized";
                readonly type: "boolean";
            };
            readonly shipping_contact: {
                readonly description: "[Shipping](https://developers.conekta.com/v2.1.0/reference/createcustomershippingcontacts)\ndetails, required in case of sending a shipping. If we do not receive a shipping_contact on the order, the default shipping_contact of the customer will be used.";
                readonly properties: {
                    readonly phone: {
                        readonly description: "Phone contact";
                        readonly type: "string";
                        readonly examples: readonly ["+525511223344"];
                    };
                    readonly receiver: {
                        readonly description: "Name of the person who will receive the order";
                        readonly type: "string";
                        readonly examples: readonly ["Marvin Fuller"];
                    };
                    readonly between_streets: {
                        readonly description: "The street names between which the order will be delivered.";
                        readonly type: "string";
                        readonly examples: readonly ["Ackerman Crescent"];
                    };
                    readonly address: {
                        readonly description: "Address of the person who will receive the order";
                        readonly properties: {
                            readonly street1: {
                                readonly type: "string";
                                readonly examples: readonly ["Nuevo Leon 254"];
                            };
                            readonly street2: {
                                readonly type: "string";
                                readonly examples: readonly ["Departamento 404"];
                            };
                            readonly postal_code: {
                                readonly type: "string";
                                readonly examples: readonly ["06100"];
                            };
                            readonly city: {
                                readonly type: "string";
                                readonly examples: readonly ["Ciudad de Mexico"];
                            };
                            readonly state: {
                                readonly type: "string";
                                readonly examples: readonly ["Ciudad de Mexico"];
                            };
                            readonly country: {
                                readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                readonly type: "string";
                                readonly examples: readonly ["MX"];
                            };
                            readonly residential: {
                                readonly type: readonly ["boolean", "null"];
                                readonly examples: readonly [true];
                            };
                        };
                        readonly type: "object";
                    };
                    readonly parent_id: {
                        readonly type: "string";
                    };
                    readonly default: {
                        readonly type: readonly ["boolean", "null"];
                    };
                    readonly deleted: {
                        readonly type: readonly ["boolean", "null"];
                    };
                    readonly metadata: {
                        readonly additionalProperties: true;
                        readonly description: "Metadata associated with the shipping contact";
                        readonly maxProperties: 100;
                        readonly type: "object";
                    };
                };
                readonly required: readonly ["address"];
                readonly title: "customer_shipping_contacts_request";
                readonly type: "object";
            };
            readonly shipping_lines: {
                readonly description: "List of [shipping costs](https://developers.conekta.com/v2.1.0/reference/orderscreateshipping). If the online store offers digital products.";
                readonly items: {
                    readonly properties: {
                        readonly amount: {
                            readonly description: "Shipping amount in cents";
                            readonly format: "int64";
                            readonly minimum: 0;
                            readonly type: "integer";
                            readonly examples: readonly [100];
                            readonly maximum: 9223372036854776000;
                        };
                        readonly carrier: {
                            readonly description: "Carrier name for the shipment";
                            readonly type: "string";
                            readonly examples: readonly ["FEDEX"];
                        };
                        readonly tracking_number: {
                            readonly description: "Tracking number can be used to track the shipment";
                            readonly type: "string";
                            readonly examples: readonly ["TRACK123"];
                        };
                        readonly method: {
                            readonly description: "Method of shipment";
                            readonly type: "string";
                            readonly examples: readonly ["Same day"];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly description: "Hash where the user can send additional information for each 'shipping'.";
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                    };
                    readonly required: readonly ["amount"];
                    readonly title: "shipping_request";
                    readonly type: "object";
                };
                readonly type: "array";
            };
            readonly tax_lines: {
                readonly items: {
                    readonly description: "create new taxes for an existing order";
                    readonly properties: {
                        readonly amount: {
                            readonly description: "The amount to be collected for tax in cents";
                            readonly format: "int64";
                            readonly minimum: 0;
                            readonly type: "integer";
                            readonly examples: readonly [100];
                            readonly maximum: 9223372036854776000;
                        };
                        readonly description: {
                            readonly description: "description or tax's name";
                            readonly minLength: 2;
                            readonly type: "string";
                            readonly examples: readonly ["testing"];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                    };
                    readonly required: readonly ["amount", "description"];
                    readonly type: "object";
                };
                readonly type: "array";
            };
        };
        readonly title: "order_update";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "order response";
            readonly properties: {
                readonly amount: {
                    readonly description: "The total amount to be collected in cents";
                    readonly type: "integer";
                    readonly examples: readonly [21605];
                };
                readonly amount_refunded: {
                    readonly description: "The total amount refunded in cents";
                    readonly type: "integer";
                    readonly examples: readonly [0];
                };
                readonly channel: {
                    readonly properties: {
                        readonly segment: {
                            readonly type: "string";
                            readonly examples: readonly ["Checkout"];
                        };
                        readonly checkout_request_id: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                        };
                        readonly checkout_request_type: {
                            readonly type: "string";
                            readonly examples: readonly ["HostedPayment"];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                        };
                    };
                    readonly type: "object";
                };
                readonly charges: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "charges_data_response";
                                readonly type: "object";
                                readonly properties: {
                                    readonly amount: {
                                        readonly type: "integer";
                                        readonly examples: readonly [4321];
                                    };
                                    readonly channel: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly segment: {
                                                readonly type: "string";
                                                readonly examples: readonly ["Checkout"];
                                            };
                                            readonly checkout_request_id: {
                                                readonly type: "string";
                                                readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                                            };
                                            readonly checkout_request_type: {
                                                readonly type: "string";
                                                readonly examples: readonly ["HostedPayment"];
                                            };
                                            readonly id: {
                                                readonly type: "string";
                                                readonly examples: readonly ["channel_2tNDzhA4Akmzj11AU"];
                                            };
                                        };
                                    };
                                    readonly created_at: {
                                        readonly format: "int64";
                                        readonly type: "integer";
                                        readonly examples: readonly [1676386026];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly currency: {
                                        readonly type: "string";
                                        readonly examples: readonly ["MXN"];
                                    };
                                    readonly customer_id: {
                                        readonly type: "string";
                                    };
                                    readonly description: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Payment from order"];
                                    };
                                    readonly device_fingerprint: {
                                        readonly type: "string";
                                        readonly examples: readonly ["6FR3chaU4Y1nGAW5NAGd1rcjAKa142Ba"];
                                    };
                                    readonly failure_code: {
                                        readonly type: "string";
                                        readonly examples: readonly ["suspected_fraud"];
                                    };
                                    readonly failure_message: {
                                        readonly type: "string";
                                        readonly examples: readonly ["Este cargo ha sido declinado porque el comportamiento del comprador es sospechoso."];
                                    };
                                    readonly id: {
                                        readonly description: "Charge ID";
                                        readonly type: "string";
                                        readonly examples: readonly ["63efa757cf65380001aec040"];
                                    };
                                    readonly livemode: {
                                        readonly description: "Whether the charge was made in live mode or not";
                                        readonly type: "boolean";
                                        readonly examples: readonly [false];
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                        readonly examples: readonly ["charge"];
                                    };
                                    readonly order_id: {
                                        readonly description: "Order ID";
                                        readonly type: "string";
                                        readonly examples: readonly ["ord_2tN73UdUSNrYRPD9r"];
                                    };
                                    readonly paid_at: {
                                        readonly description: "Payment date";
                                        readonly format: "int64";
                                        readonly type: readonly ["integer", "null"];
                                        readonly examples: readonly [1676390742];
                                        readonly minimum: -9223372036854776000;
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly payment_method: {
                                        readonly discriminator: {
                                            readonly mapping: {
                                                readonly cash_payment: "payment_method_cash";
                                                readonly card_payment: "payment_method_card";
                                                readonly bank_transfer_payment: "payment_method_bank_transfer";
                                            };
                                            readonly propertyName: "object";
                                        };
                                        readonly oneOf: readonly [{
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for cash responses";
                                            readonly title: "charge_data_payment_method_cash_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly auth_code: {
                                                    readonly type: readonly ["integer", "null"];
                                                    readonly examples: readonly [542563];
                                                };
                                                readonly cashier_id: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly examples: readonly ["OINM01010"];
                                                };
                                                readonly reference: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["93000262276908"];
                                                };
                                                readonly barcode_url: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["https://pt-common-s3-stg.s3.amazonaws.com/644ebf80f2243197aad6cd8810375b905b613dbe.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIA3UN6375MP4SLLCWV%2F20230203%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230203T215750Z&X-Amz-Expires=604800&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEH4aCXVzLWVhc3QtMSJGMEQCICd79cu7DYu%2F4%2B3HnVVswydgU9yHcE9kmQIIk2TLoZJrAiBVZ0HxVSeboK5lhdQSqADjwQF62XX35jhC%2F2riB0M8uCqQBAj2%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAIaDDc5OTgwMTA4MTY4OCIMXWZds9ZI5hzUdbeGKuQDFreMyeWnWWPqDuGZ2%2BHk6usCr%2Fl096%2FNJh9xtf8htLu56K%2FhWUTx%2BjiqFWM2O%2FF5zTS%2BIV6TqkLDZ%2BQ5Jo1miQrRmR57YDz6uP2Yd1mNZ1ouq5ipnNjUuu5UWCCBAmqyZQsrVmeMQpSV2IB%2BTERCCcW2SukFEYU%2F20%2Fzy5orsoZ8DxOW460IymR3cWBk5u3Xh2cV6Y1RdPEwDEThhqYEF5w%2ByKbLENloMsI%2FUm6sG5PPrO3yQOAP9aK2muLJs9lXQRU%2FL%2FSsmS4FKSUFOqlN6YU%2Bi2Y%2FyGIKAJT2VDkngvz5Sl%2Fadj0j%2BPKftVRV5FcEhySB6Rl%2BSkPN7kVQMJp6pS8hMJ6JCyEA%2BA3eWYdIfKgQhWVXAR4oCBfJ62DH8FU3a7WfSjjpTwfVkiReWen3GGCYfUWETTVKp46MKnJ9PG0CD3KzxKV8VfmEGc5krK%2FI%2F%2BDV2wtSa%2F9qf1%2BK1YYJIK9qZGb25ljUiGhTB4T%2BMUOSQFjetiWUoOJc5Q3Jz%2FXJbiTAMTST39MhdbCgiMgfrc8OGKN5DOVbex33Z7dn0xf%2FOCkSqurhLaG08efKQBdhLNS0RlE9hbg9yZ2ywwtQIF39fI6A7eeH0T11a5HMlvm51u4rAffPHRuEJfwJoIuj%2F2s3QzDg7%2FWeBjqmAbnPOlGfysjrDdvHyG7HVnaX02kdG%2BI3Q4PFOO4Mjaa3ocpjcfPT70%2BZ5a%2FSv5vP0jDLGrLToeM9%2BAUlNepptICRu23a1tLGW4ri0twPA%2FZ4JDTtUUUgdblyG8bKpcUTNp4oOsdmLLBz3FVyr4c2xQbDZSu2zYOtoOxB18W0AC6kIbsMWVU55Bf0mBhPeBWxGrtM4Kw1SgHHlt%2F8vetQi2OwtUcg08c%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=d06dfa41550003359f2aabc8006063a80dfd806a13a54d244024946a76aa9abc"];
                                                };
                                                readonly expires_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [0];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly service_name: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["OxxoPay"];
                                                };
                                                readonly store: {
                                                    readonly type: readonly ["string", "null"];
                                                    readonly examples: readonly ["10MON50EDI"];
                                                };
                                                readonly store_name: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["OXXO"];
                                                };
                                            };
                                        }, {
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for card responses";
                                            readonly title: "charge_data_payment_method_card_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly account_type: {
                                                    readonly description: "Account type of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Credit"];
                                                };
                                                readonly auth_code: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["867372"];
                                                };
                                                readonly brand: {
                                                    readonly description: "Brand of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["visa"];
                                                };
                                                readonly contract_id: {
                                                    readonly description: "Id sent for recurrent charges.";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["S781317595"];
                                                };
                                                readonly country: {
                                                    readonly description: "Country of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["MX"];
                                                };
                                                readonly exp_month: {
                                                    readonly description: "Expiration month of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["02"];
                                                };
                                                readonly exp_year: {
                                                    readonly description: "Expiration year of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["2026"];
                                                };
                                                readonly fraud_indicators: {
                                                    readonly type: "array";
                                                    readonly items: {};
                                                };
                                                readonly issuer: {
                                                    readonly description: "Issuer of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["BANAMEX"];
                                                };
                                                readonly last4: {
                                                    readonly description: "Last 4 digits of the card";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["4242"];
                                                };
                                                readonly name: {
                                                    readonly description: "Name of the cardholder";
                                                    readonly type: "string";
                                                    readonly examples: readonly ["Fulanito Perez"];
                                                };
                                            };
                                        }, {
                                            readonly required: readonly ["object"];
                                            readonly type: "object";
                                            readonly description: "use for bank transfer responses";
                                            readonly title: "charge_data_payment_method_bank_transfer_response";
                                            readonly properties: {
                                                readonly type: {
                                                    readonly type: "string";
                                                };
                                                readonly object: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["payment_source"];
                                                };
                                                readonly bank: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["STP"];
                                                };
                                                readonly clabe: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["646180111805034237"];
                                                };
                                                readonly description: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly executed_at: {
                                                    readonly type: readonly ["integer", "null"];
                                                };
                                                readonly expires_at: {
                                                    readonly format: "int64";
                                                    readonly type: "integer";
                                                    readonly examples: readonly [1683053729];
                                                    readonly minimum: -9223372036854776000;
                                                    readonly maximum: 9223372036854776000;
                                                };
                                                readonly issuing_account_bank: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_number: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_holder_name: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly issuing_account_tax_id: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly payment_attempts: {
                                                    readonly type: "array";
                                                    readonly items: {};
                                                };
                                                readonly receiving_account_holder_name: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly receiving_account_number: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["646180111805034237"];
                                                };
                                                readonly receiving_account_bank: {
                                                    readonly type: "string";
                                                    readonly examples: readonly ["STP"];
                                                };
                                                readonly receiving_account_tax_id: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly reference_number: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                                readonly tracking_code: {
                                                    readonly type: readonly ["string", "null"];
                                                };
                                            };
                                        }];
                                        readonly title: "charge_response_payment_method";
                                    };
                                    readonly reference_id: {
                                        readonly description: "Reference ID of the charge";
                                        readonly type: readonly ["string", "null"];
                                        readonly examples: readonly ["ref_2tN73UdUSNrYRPD9r"];
                                    };
                                    readonly refunds: {
                                        readonly title: "charge_response_refunds";
                                        readonly type: readonly ["object", "null"];
                                        readonly description: "page metadata";
                                        readonly required: readonly ["has_more", "object"];
                                        readonly properties: {
                                            readonly has_more: {
                                                readonly description: "Indicates if there are more pages to be requested";
                                                readonly type: "boolean";
                                                readonly examples: readonly [false];
                                            };
                                            readonly object: {
                                                readonly description: "Object type, in this case is list";
                                                readonly type: "string";
                                                readonly examples: readonly ["list"];
                                            };
                                            readonly next_page_url: {
                                                readonly description: "URL of the next page.";
                                                readonly type: readonly ["string", "null"];
                                                readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                                            };
                                            readonly previous_page_url: {
                                                readonly description: "Url of the previous page.";
                                                readonly type: readonly ["string", "null"];
                                                readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                                            };
                                            readonly data: {
                                                readonly description: "refunds";
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly required: readonly ["amount", "created_at", "id", "object"];
                                                    readonly title: "charge_response_refunds_data";
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly amount: {
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [-15000];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly auth_code: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["867372"];
                                                        };
                                                        readonly created_at: {
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [1678226878];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly expires_at: {
                                                            readonly description: "refund expiration date";
                                                            readonly format: "int64";
                                                            readonly type: "integer";
                                                            readonly examples: readonly [1678226878];
                                                            readonly minimum: -9223372036854776000;
                                                            readonly maximum: 9223372036854776000;
                                                        };
                                                        readonly id: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["6407b5bee1329a000175ba11"];
                                                        };
                                                        readonly object: {
                                                            readonly type: "string";
                                                            readonly examples: readonly ["refund"];
                                                        };
                                                        readonly status: {
                                                            readonly description: "refund status";
                                                            readonly type: "string";
                                                            readonly examples: readonly ["pending"];
                                                        };
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly status: {
                                        readonly type: "string";
                                        readonly examples: readonly ["pending_payment"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly checkout: {
                    readonly properties: {
                        readonly allowed_payment_methods: {
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly type: "array";
                        };
                        readonly can_not_expire: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly emails_sent: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly exclude_card_networks: {
                            readonly items: {
                                readonly type: "object";
                                readonly additionalProperties: true;
                            };
                            readonly type: "array";
                        };
                        readonly expires_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1676613599];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly failure_url: {
                            readonly type: "string";
                            readonly examples: readonly ["http://187.216.228.66:2222/SysVentasPagos/Acceso.aspx"];
                        };
                        readonly force_3ds_flow: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a-8519-4c43-971e-cea35cc519bb"];
                        };
                        readonly is_redirect_on_failure: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly livemode: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                        readonly monthly_installments_enabled: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly monthly_installments_options: {
                            readonly items: {
                                readonly format: "int8";
                                readonly type: "integer";
                                readonly minimum: -128;
                                readonly maximum: 127;
                            };
                            readonly type: "array";
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["ord-2tNDzhA4Akmzj11AS"];
                        };
                        readonly needs_shipping_contact: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["checkout"];
                        };
                        readonly on_demand_enabled: {
                            readonly type: readonly ["boolean", "null"];
                            readonly examples: readonly [true];
                        };
                        readonly paid_payments_count: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly recurrent: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly redirection_time: {
                            readonly description: "number of seconds to wait before redirecting to the success_url";
                            readonly format: "int8";
                            readonly type: readonly ["integer", "null"];
                            readonly examples: readonly [2];
                            readonly minimum: -128;
                            readonly maximum: 127;
                        };
                        readonly slug: {
                            readonly type: "string";
                            readonly examples: readonly ["6fca054a85194c43971ecea35cc519bb"];
                        };
                        readonly sms_sent: {
                            readonly type: "integer";
                            readonly examples: readonly [0];
                        };
                        readonly success_url: {
                            readonly type: "string";
                            readonly examples: readonly ["http://187.216.228.66:2222/SysVentasPagos/Acceso.aspx"];
                        };
                        readonly starts_at: {
                            readonly type: "integer";
                            readonly examples: readonly [1676354400];
                        };
                        readonly status: {
                            readonly type: "string";
                            readonly examples: readonly ["Issued"];
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly examples: readonly ["HostedPayment"];
                        };
                        readonly url: {
                            readonly type: "string";
                            readonly examples: readonly ["https://pay.stg.conekta.io/checkout/6fca054a85194c43971ecea35cc519bb"];
                        };
                    };
                    readonly type: "object";
                };
                readonly created_at: {
                    readonly description: "The time at which the object was created in seconds since the Unix epoch";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1676328434];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly description: "The three-letter ISO 4217 currency code. The currency of the order.";
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly customer_info: {
                    readonly type: "object";
                    readonly title: "order_customer_info_response";
                    readonly properties: {
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["customer_info"];
                        };
                        readonly customer_custom_reference: {
                            readonly description: "Custom reference";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["custom_reference"];
                        };
                        readonly name: {
                            readonly type: "string";
                            readonly examples: readonly ["DevTest"];
                        };
                        readonly email: {
                            readonly format: "email";
                            readonly type: "string";
                            readonly examples: readonly ["test@conekta.com"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["5522997233"];
                        };
                        readonly corporate: {
                            readonly default: false;
                            readonly type: "boolean";
                        };
                        readonly customer_id: {
                            readonly type: "string";
                            readonly examples: readonly ["cus_23874283647"];
                        };
                    };
                };
                readonly discount_lines: {
                    readonly description: "pagination metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly title: "pagination metadata";
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "discount_lines_data_response";
                                readonly description: "List of discounts that apply to the order.";
                                readonly required: readonly ["amount", "code", "id", "object", "parent_id", "type"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly amount: {
                                        readonly description: "The amount to be deducted from the total sum of all payments, in cents.";
                                        readonly format: "int64";
                                        readonly minimum: 0;
                                        readonly type: "integer";
                                        readonly examples: readonly [500];
                                        readonly maximum: 9223372036854776000;
                                    };
                                    readonly code: {
                                        readonly description: "Discount code.";
                                        readonly type: "string";
                                        readonly examples: readonly ["123"];
                                    };
                                    readonly type: {
                                        readonly description: "It can be 'loyalty', 'campaign', 'coupon' o 'sign'";
                                        readonly type: "string";
                                        readonly examples: readonly ["loyalty"];
                                    };
                                    readonly id: {
                                        readonly description: "The discount line id";
                                        readonly type: "string";
                                        readonly examples: readonly ["dis_lin_2tQQ58HPgPw7StE8z"];
                                    };
                                    readonly object: {
                                        readonly description: "The object name";
                                        readonly type: "string";
                                        readonly examples: readonly ["discount_line"];
                                    };
                                    readonly parent_id: {
                                        readonly description: "The order id";
                                        readonly type: "string";
                                        readonly examples: readonly ["ord_2tPAmKCEJqh8RE6nY"];
                                    };
                                };
                            };
                        };
                    };
                };
                readonly fiscal_entity: {
                    readonly description: "Fiscal entity of the order, Currently it is a purely informative field";
                    readonly properties: {
                        readonly address: {
                            readonly description: "Address of the fiscal entity";
                            readonly title: "order_fiscal_entity_address_response";
                            readonly required: readonly ["city", "country", "external_number", "postal_code", "street1"];
                            readonly type: "object";
                            readonly properties: {
                                readonly street1: {
                                    readonly description: "Street name and number";
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly description: "Street name and number";
                                    readonly type: readonly ["string", "null"];
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly description: "Postal code";
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly description: "City";
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly description: "State";
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly description: "this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)";
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly external_number: {
                                    readonly description: "External number";
                                    readonly type: "string";
                                    readonly examples: readonly ["123"];
                                };
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["fiscal_entity_address"];
                                };
                            };
                        };
                        readonly email: {
                            readonly description: "Email of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["test@gmail.com"];
                        };
                        readonly metadata: {
                            readonly additionalProperties: true;
                            readonly description: "Metadata associated with the fiscal entity";
                            readonly maxProperties: 100;
                            readonly type: "object";
                        };
                        readonly name: {
                            readonly description: "Name of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["Conekta Inc"];
                        };
                        readonly tax_id: {
                            readonly description: "Tax ID of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["324234234"];
                        };
                        readonly id: {
                            readonly description: "ID of the fiscal entity";
                            readonly type: "string";
                            readonly examples: readonly ["fis_ent_2tN85VYaSMyDvjB3M"];
                        };
                        readonly created_at: {
                            readonly description: "The time at which the object was created in seconds since the Unix epoch";
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1676328434];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["fiscal_entity"];
                        };
                        readonly phone: {
                            readonly description: "Phone of the fiscal entity";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["+525511223344"];
                        };
                    };
                    readonly required: readonly ["address", "created_at", "id", "object"];
                    readonly title: "order_fiscal_entity_response";
                    readonly type: readonly ["object", "null"];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tMtQQpDvfnNjiuFG"];
                };
                readonly is_refundable: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly line_items: {
                    readonly title: "order_response_products";
                    readonly description: "page metadata";
                    readonly required: readonly ["has_more", "object"];
                    readonly type: "object";
                    readonly properties: {
                        readonly has_more: {
                            readonly description: "Indicates if there are more pages to be requested";
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly object: {
                            readonly description: "Object type, in this case is list";
                            readonly type: "string";
                            readonly examples: readonly ["list"];
                        };
                        readonly next_page_url: {
                            readonly description: "URL of the next page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&next=chrg_1"];
                        };
                        readonly previous_page_url: {
                            readonly description: "Url of the previous page.";
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["https://api.conekta.io/resources?limit=10&previous=chrg_1"];
                        };
                        readonly data: {
                            readonly type: "array";
                            readonly items: {
                                readonly title: "product_data_response";
                                readonly required: readonly ["name", "quantity", "unit_price"];
                                readonly type: "object";
                                readonly properties: {
                                    readonly antifraud_info: {
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly brand: {
                                        readonly description: "The brand of the item.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Cohiba"];
                                    };
                                    readonly description: {
                                        readonly description: "Short description of the item";
                                        readonly maxLength: 250;
                                        readonly type: "string";
                                        readonly examples: readonly ["Imported From Mex."];
                                    };
                                    readonly metadata: {
                                        readonly description: "It is a key/value hash that can hold custom fields. Maximum 100 elements and allows special characters.";
                                        readonly maxProperties: 100;
                                        readonly type: "object";
                                        readonly additionalProperties: true;
                                    };
                                    readonly name: {
                                        readonly description: "The name of the item. It will be displayed in the order.";
                                        readonly type: "string";
                                        readonly examples: readonly ["Box of Cohiba S1s"];
                                    };
                                    readonly quantity: {
                                        readonly description: "The quantity of the item in the order.";
                                        readonly format: "int32";
                                        readonly minimum: 1;
                                        readonly type: "integer";
                                        readonly examples: readonly [1];
                                        readonly maximum: 2147483647;
                                    };
                                    readonly sku: {
                                        readonly description: "The stock keeping unit for the item. It is used to identify the item in the order.";
                                        readonly type: "string";
                                        readonly examples: readonly ["XYZ12345"];
                                    };
                                    readonly tags: {
                                        readonly description: "List of tags for the item. It is used to identify the item in the order.";
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                        readonly examples: readonly ["food", "mexican food"];
                                    };
                                    readonly unit_price: {
                                        readonly description: "The price of the item in cents.";
                                        readonly format: "int32";
                                        readonly minimum: 0;
                                        readonly type: "integer";
                                        readonly examples: readonly [20000];
                                        readonly maximum: 2147483647;
                                    };
                                    readonly id: {
                                        readonly type: "string";
                                    };
                                    readonly object: {
                                        readonly type: "string";
                                    };
                                    readonly parent_id: {
                                        readonly type: "string";
                                    };
                                };
                            };
                        };
                    };
                };
                readonly livemode: {
                    readonly description: "Whether the object exists in live mode or test mode";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly metadata: {
                    readonly additionalProperties: true;
                    readonly description: "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.";
                    readonly maxProperties: 100;
                    readonly type: "object";
                };
                readonly next_action: {
                    readonly description: "contains the following attributes that will guide to continue the flow";
                    readonly properties: {
                        readonly redirect_to_url: {
                            readonly description: "contains the following attributes that will guide to continue the flow";
                            readonly properties: {
                                readonly url: {
                                    readonly description: "pay.conekta.com/{id} Indicates the url of the Conekta component to authenticate the flow through 3DS2.";
                                    readonly format: "uri";
                                    readonly type: "string";
                                    readonly examples: readonly ["https://pay.conekta.com/6fca054a85194c43971ecea35cc519bb"];
                                };
                                readonly return_url: {
                                    readonly description: "Indicates the url to which the 3DS2 flow returns at the end, when the integration is redirected.";
                                    readonly format: "uri";
                                    readonly type: "string";
                                    readonly examples: readonly ["https://my-website.com\""];
                                };
                            };
                            readonly type: "object";
                        };
                        readonly type: {
                            readonly description: "Indicates the type of action to be taken";
                            readonly type: "string";
                            readonly examples: readonly ["redirect_to_url"];
                        };
                    };
                    readonly title: "order_next_action_response";
                    readonly type: "object";
                };
                readonly object: {
                    readonly description: "String representing the object’s type. Objects of the same type share the same value.";
                    readonly type: "string";
                    readonly examples: readonly ["order"];
                };
                readonly payment_status: {
                    readonly description: "The payment status of the order.";
                    readonly type: "string";
                    readonly examples: readonly ["paid"];
                };
                readonly processing_mode: {
                    readonly description: "Indicates the processing mode for the order, either ecommerce, recurrent or validation.";
                    readonly type: "string";
                    readonly examples: readonly ["ecommerce"];
                };
                readonly shipping_contact: {
                    readonly type: "object";
                    readonly description: "Contains the detail of the shipping addresses that the client has active or has used in Conekta";
                    readonly properties: {
                        readonly created_at: {
                            readonly format: "int64";
                            readonly type: "integer";
                            readonly examples: readonly [1675715413];
                            readonly minimum: -9223372036854776000;
                            readonly maximum: 9223372036854776000;
                        };
                        readonly id: {
                            readonly type: "string";
                            readonly examples: readonly ["adr_1234567890"];
                        };
                        readonly object: {
                            readonly type: "string";
                            readonly examples: readonly ["shipping_contact"];
                        };
                        readonly phone: {
                            readonly type: "string";
                            readonly examples: readonly ["+525511223344"];
                        };
                        readonly receiver: {
                            readonly type: "string";
                            readonly examples: readonly ["Marvin Fuller"];
                        };
                        readonly between_streets: {
                            readonly type: readonly ["string", "null"];
                            readonly examples: readonly ["Ackerman Crescent"];
                        };
                        readonly address: {
                            readonly type: "object";
                            readonly properties: {
                                readonly object: {
                                    readonly type: "string";
                                    readonly examples: readonly ["shipping_address"];
                                };
                                readonly street1: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Nuevo Leon 254"];
                                };
                                readonly street2: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Departamento 404"];
                                };
                                readonly postal_code: {
                                    readonly type: "string";
                                    readonly examples: readonly ["06100"];
                                };
                                readonly city: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly state: {
                                    readonly type: "string";
                                    readonly examples: readonly ["Ciudad de Mexico"];
                                };
                                readonly country: {
                                    readonly type: "string";
                                    readonly examples: readonly ["MX"];
                                };
                                readonly residential: {
                                    readonly type: readonly ["boolean", "null"];
                                    readonly examples: readonly [true];
                                };
                            };
                        };
                        readonly parent_id: {
                            readonly type: "string";
                        };
                        readonly default: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                        readonly metadata: {
                            readonly description: "Metadata associated with the shipping contact";
                            readonly maxProperties: 100;
                            readonly type: "object";
                            readonly additionalProperties: true;
                        };
                        readonly deleted: {
                            readonly type: "boolean";
                            readonly examples: readonly [false];
                        };
                    };
                };
                readonly updated_at: {
                    readonly description: "The time at which the object was last updated in seconds since the Unix epoch";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1676328434];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
            readonly title: "order_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const UpdatePlan: {
    readonly body: {
        readonly description: "a plan";
        readonly properties: {
            readonly amount: {
                readonly description: "The amount in cents that will be charged on the interval specified.";
                readonly minimum: 1;
                readonly type: "integer";
                readonly examples: readonly [10000];
            };
            readonly currency: {
                readonly description: "ISO 4217 for currencies, for the Mexican peso it is MXN/USD";
                readonly maxLength: 3;
                readonly type: "string";
                readonly examples: readonly ["MXN"];
            };
            readonly expiry_count: {
                readonly description: "Number of repetitions of the frequency NUMBER OF CHARGES TO BE MADE, considering the interval and frequency, this evolves over time, but is subject to the expiration count.";
                readonly type: "integer";
                readonly examples: readonly [12];
            };
            readonly name: {
                readonly description: "The name of the plan.";
                readonly type: "string";
                readonly examples: readonly ["Extra Plan3"];
            };
        };
        readonly title: "update_plan";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "plans model";
            readonly properties: {
                readonly amount: {
                    readonly type: "integer";
                    readonly examples: readonly [10000];
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1666900846];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly currency: {
                    readonly maxLength: 3;
                    readonly type: "string";
                    readonly examples: readonly ["MXN"];
                };
                readonly expiry_count: {
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [12];
                };
                readonly frequency: {
                    readonly type: "integer";
                    readonly examples: readonly [1];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["gold-plan"];
                };
                readonly interval: {
                    readonly type: "string";
                    readonly examples: readonly ["month"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly name: {
                    readonly type: "string";
                    readonly examples: readonly ["Extra Plan3"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["plan"];
                };
                readonly trial_period_days: {
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [0];
                };
            };
            readonly title: "plan_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const UpdateSubscription: {
    readonly body: {
        readonly description: "You can modify the subscription to change the plan used by your customers.";
        readonly properties: {
            readonly plan_id: {
                readonly type: "string";
                readonly examples: readonly ["f84gdgf5g48r15fd21g8w424fd1"];
            };
            readonly card_id: {
                readonly type: "string";
                readonly examples: readonly ["src_2qUCNd5AyQqfPMBuV"];
            };
            readonly trial_end: {
                readonly type: "integer";
                readonly examples: readonly [1484040996];
            };
        };
        readonly title: "updates a subscription";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "subscription model";
            readonly properties: {
                readonly billing_cycle_start: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626827];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly billing_cycle_end: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626827];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly canceled_at: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1678258162];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly canceled_reason: {
                    readonly description: "Reason for cancellation. This field appears when the subscription status is 'canceled'.";
                    readonly type: "string";
                    readonly examples: readonly ["user_cancelation"];
                };
                readonly card_id: {
                    readonly type: "string";
                    readonly examples: readonly ["src_2tKcHxhTz7xU5SymL"];
                };
                readonly charge_id: {
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["2tKcHxhTz7xU5SymL"];
                };
                readonly created_at: {
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly customer_custom_reference: {
                    readonly type: "string";
                    readonly examples: readonly ["dotnet_123456"];
                };
                readonly customer_id: {
                    readonly type: "string";
                    readonly examples: readonly ["cus_2tKcHxhTz7xU5SymF"];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["gold-plan"];
                };
                readonly last_billing_cycle_order_id: {
                    readonly type: "string";
                    readonly examples: readonly ["ord_2tSoMP7bZJbLiq4z8"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["subscription"];
                };
                readonly paused_at: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1678258162];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly plan_id: {
                    readonly type: "string";
                    readonly examples: readonly ["plan_2tXx672QLQ68CkmMn"];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["past_due"];
                };
                readonly subscription_start: {
                    readonly type: "integer";
                    readonly examples: readonly [1677626837];
                };
                readonly trial_start: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly trial_end: {
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly examples: readonly [1677626837];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
            };
            readonly title: "subscription_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "422": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const UpdateWebhook: {
    readonly body: {
        readonly description: "an updated webhook";
        readonly properties: {
            readonly url: {
                readonly description: "Here you must place the URL of your Webhook remember that you must program what you will do with the events received. Also do not forget to handle the HTTPS protocol for greater security.";
                readonly format: "url";
                readonly pattern: "^(?!.*(localhost|127\\.0\\.0\\.1)).*$";
                readonly type: "string";
                readonly examples: readonly ["https://webhook.site/89277eaa-a8e4-4306-8dc5-f55c80703dc8"];
            };
            readonly synchronous: {
                readonly default: false;
                readonly description: "It is a value that allows to decide if the events will be synchronous or asynchronous. We recommend asynchronous = false";
                readonly type: "boolean";
                readonly examples: readonly [false];
            };
            readonly events: {
                readonly items: {
                    readonly type: "string";
                };
                readonly type: "array";
                readonly examples: readonly ["customer.created"];
            };
        };
        readonly required: readonly ["url"];
        readonly title: "update_webhook";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
                readonly "X-Child-Company-Id": {
                    readonly type: "string";
                    readonly examples: readonly ["6441b6376b60c3a638da80af"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "In the case of a holding company, the company id of the child company to which will process the request.";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "webhooks model";
            readonly properties: {
                readonly deleted: {
                    readonly type: readonly ["boolean", "null"];
                    readonly examples: readonly [false];
                };
                readonly development_enabled: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                };
                readonly livemode: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["event"];
                };
                readonly production_enabled: {
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly status: {
                    readonly type: "string";
                    readonly examples: readonly ["listening"];
                };
                readonly subscribed_events: {
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly type: "array";
                    readonly examples: readonly ["charge.created", "charge.paid", "charge.under_fraud_review", "charge.fraudulent", "charge.refunded", "charge.preauthorized", "charge.declined", "charge.canceled", "charge.reversed", "charge.pending_confirmation"];
                };
                readonly synchronous: {
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly url: {
                    readonly type: "string";
                    readonly examples: readonly ["https://username:password@mockoon.stg.conekta.io/payments-api/cash/merchant_approval"];
                };
            };
            readonly title: "webhook_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
declare const UpdateWebhookKey: {
    readonly body: {
        readonly properties: {
            readonly active: {
                readonly default: false;
                readonly description: "Indicates if the webhook key is active";
                readonly type: "boolean";
                readonly examples: readonly [false];
            };
        };
        readonly title: "webhook_key_update_request";
        readonly type: "object";
        readonly $schema: "http://json-schema.org/draft-04/schema#";
    };
    readonly metadata: {
        readonly allOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly examples: readonly ["6307a60c41de27127515a575"];
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                    readonly description: "Identifier of the resource";
                };
            };
            readonly required: readonly ["id"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly "Accept-Language": {
                    readonly default: "es";
                    readonly enum: readonly ["es", "en"];
                    readonly type: "string";
                    readonly examples: readonly ["es", "en"];
                    readonly description: "Use for knowing which language to use";
                    readonly $schema: "http://json-schema.org/draft-04/schema#";
                };
            };
            readonly required: readonly [];
        }];
    };
    readonly response: {
        readonly "200": {
            readonly description: "webhook keys model";
            readonly properties: {
                readonly id: {
                    readonly description: "Unique identifier of the webhook key";
                    readonly type: "string";
                    readonly examples: readonly ["62730ba6fb7dfd6a712f118e"];
                };
                readonly active: {
                    readonly description: "Indicates if the webhook key is active";
                    readonly type: "boolean";
                    readonly examples: readonly [true];
                };
                readonly created_at: {
                    readonly description: "Unix timestamp in seconds with the creation date of the webhook key";
                    readonly format: "int64";
                    readonly type: "integer";
                    readonly examples: readonly [1577836800];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly deactivated_at: {
                    readonly description: "Unix timestamp in seconds with the deactivation date of the webhook key";
                    readonly format: "int64";
                    readonly type: readonly ["integer", "null"];
                    readonly minimum: -9223372036854776000;
                    readonly maximum: 9223372036854776000;
                };
                readonly public_key: {
                    readonly description: "Public key to be used in the webhook";
                    readonly type: "string";
                    readonly examples: readonly ["-----BEGIN PUBLIC KEY-----\\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqULpUc6D6mSAq5a0yLY/\\noOjd1mWm6q+QI8y/FI4STr2F+XgKeNnMxSqnyFrHtKQ/ut4Zi45WFnJLfEQL7aW5\\n67yE2dWyo6GaL7yZUfLC0Y3sHPGzaGtvDF36ISW7LliYNoMiA3Bx5/1Sr0G23pGW\\n0Mp8IO1Nlz0sJWuU/d7zCz/UN6cl9g/BP4eaQ7deS56YuWcj5sTlwqFTlwN12kpA\\nIzMZ7gnvYQnZTpPny5lben6QEuxTvZcPApcyOweiESjMnXfkfWOyuYtgMrbsU6oL\\nA6sWa6j0pePW7AYeBqB4tyAlenkCSqzHg8bMk5Bm7hiT6I9Pls774lJbnOYmmuNE\\n8QIDAQAB\\n-----END PUBLIC KEY-----\\n"];
                };
                readonly livemode: {
                    readonly description: "Indicates if the webhook key is in live mode";
                    readonly type: "boolean";
                    readonly examples: readonly [false];
                };
                readonly object: {
                    readonly description: "Object name, value is webhook_key";
                    readonly type: "string";
                    readonly examples: readonly ["webhook_key"];
                };
            };
            readonly title: "webhook_key_response";
            readonly type: "object";
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "401": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "404": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
        readonly "500": {
            readonly description: "err model";
            readonly title: "error";
            readonly type: "object";
            readonly properties: {
                readonly details: {
                    readonly type: "array";
                    readonly items: {
                        readonly title: "details_error";
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                                readonly examples: readonly ["conekta.errors.authentication.missing_key"];
                            };
                            readonly param: {
                                readonly type: readonly ["string", "null"];
                            };
                            readonly message: {
                                readonly type: "string";
                                readonly examples: readonly ["Acceso no autorizado."];
                            };
                            readonly debug_message: {
                                readonly type: "string";
                                readonly examples: readonly ["Please include your access key in your request."];
                            };
                        };
                    };
                };
                readonly log_id: {
                    readonly description: "log id";
                    readonly type: readonly ["string", "null"];
                    readonly examples: readonly ["507f1f77bcf86cd799439011"];
                };
                readonly type: {
                    readonly type: "string";
                    readonly examples: readonly ["authentication_error"];
                };
                readonly object: {
                    readonly type: "string";
                    readonly examples: readonly ["error"];
                };
            };
            readonly $schema: "http://json-schema.org/draft-04/schema#";
        };
    };
};
export { CancelCheckout, CancelOrder, CancelSubscription, CreateApiKey, CreateCheckout, CreateCustomer, CreateCustomerFiscalEntities, CreateCustomerPaymentMethods, CreateCustomerShippingContacts, CreateOrder, CreatePayoutOrder, CreatePlan, CreateRuleBlacklist, CreateRuleWhitelist, CreateSubscription, CreateToken, CreateWebhook, CreateWebhookKey, DeleteApiKey, DeleteCustomerById, DeleteCustomerPaymentMethods, DeleteCustomerShippingContacts, DeletePlan, DeleteRuleBlacklist, DeleteRuleWhitelist, DeleteWebhook, DeleteWebhookKey, EmailCheckout, GetAllEventsFromSubscription, GetApiKey, GetApiKeys, GetBalance, GetCharges, GetCheckout, GetCheckouts, GetCompanies, GetCompany, GetCustomerById, GetCustomerPaymentMethods, GetCustomers, GetEvent, GetEvents, GetLogById, GetLogs, GetOrderById, GetOrders, GetPayoutOrderById, GetPayoutOrders, GetPlan, GetPlans, GetRuleBlacklist, GetRuleWhitelist, GetSubscription, GetTransaction, GetTransactions, GetTransfer, GetTransfers, GetWebhook, GetWebhookKey, GetWebhookKeys, GetWebhooks, OrderCancelRefund, OrderRefund, OrdersCreateCapture, OrdersCreateCharge, OrdersCreateDiscountLine, OrdersCreateProduct, OrdersCreateShipping, OrdersCreateTaxes, OrdersDeleteDiscountLines, OrdersDeleteProduct, OrdersDeleteShipping, OrdersDeleteTaxes, OrdersGetDiscountLine, OrdersGetDiscountLines, OrdersUpdateDiscountLines, OrdersUpdateProduct, OrdersUpdateShipping, OrdersUpdateTaxes, PauseSubscription, ResendEvent, ResumeSubscription, SmsCheckout, TestWebhook, UpdateApiKey, UpdateCharge, UpdateCustomer, UpdateCustomerFiscalEntities, UpdateCustomerPaymentMethods, UpdateCustomerShippingContacts, UpdateOrder, UpdatePlan, UpdateSubscription, UpdateWebhook, UpdateWebhookKey };
